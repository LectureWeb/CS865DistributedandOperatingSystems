%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: wetice-ieee.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold Times-Italic Times-Roman Helvetica-Bold
%%+ Courier
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSCommandLine: /usr/local/tex/bin/sparc-solaris2.4/dvips -o
%+ wetice-ieee.ps wetice-ieee.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.08.06:0725
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginFont: Times-Bold
% @psencodingfile{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "14 April 1995",
%   filename = "8r.enc",
%   email = "kb@cs.umb.edu",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% }
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndFont
%%BeginProcSet: pcrr8a.pfb
%!PS-AdobeFont-1.0: Courier 001.003
%%CreationDate: Tue Sep 17 16:16:38 1991
%%VMusage: 57844 76768
%% Copyright International Business Machines,Corp. 1991
%% IBM Courier is a Trademark of the IBM Corporation.
11 dict begin
/FontInfo 10 dict dup begin
/version (001.003) readonly def
/Notice (Copyright (c) IBM Corporation 1990,1991. IBM Courier is a Trademark of the IBM Corporation.) readonly def
/Copyright (Copyright (c) IBM Corporation 1990,1991.) readonly def
/FullName (Courier) readonly def
/FamilyName (Courier) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /Courier def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/UniqueID 263786 def
/FontBBox{-48 -288 684 841}readonly def
currentdict end
currentfile eexec

B2DE7B9B2A2783A9A81F7A04E7605E0BCC84AD7A981F9D6B201C5FC6ACDAD3ECD09A8A190729
6B7BF5510822BD65C174D41912F5E2BDC23EC621DD28CB4F8B625882CCA862CA3C8BBED56696
F8E17809439151596792163977EDDCDAE7B5C346E93A0756E7DA36A403E30B34B70EB809EC5A
5E6DD43DFC5D482E2424A93FD4D2D0E648621EB8F9339F10BA2DB9312AE5C071E20946278B5D
54F7858A41F0A1B6B2CECD201FE0CC773A733FD892BC4352FD2C68554AD49658BFECECA5DE0A
417807560879485B17F950018E00FB441CA6E0FACE6FA6ACC95DAEA5B530A954419FA15FF97D
E6A7AB23540344E0193D5356EBDB99F60FCE74A4C1828A36B3DE4EC492551FA4F0CC7ED791D8
97ED75BC5D034F85F7326B59E16A9E9D20D7C7072A4D311FFF4CD4635852AB3E098236A1EB05
BE8E5D3E4CED8EA930076FB27AE7B5F3A135B8E3CFA19B4144C0672503B51641ECDB779EAAAA
EC164216BEB4DE03457566B93918A02AEA1730B7F138623F2DF763D6CCADEA312D4059487851
AD39FA5D6AE273D56563EB3788C4D9AEFB2BD85FEFF2C8F6A0C383F653DDCA8D4072A39726BC
47616D936E336D1502B65CEC60BAA4F7C423C290D9A8E067B433AD52790AB3DE64436AEB25A5
B8E18A91E616B9C310D8BDA5546CB5F46E8D74ADB8F970D488A1602E8ED3390CBB9F1E4564F7
0B2141CB8262CF4DFEFBBEFF3D15F49AFA29DA9DEB04F1E004399A20F57F770B838059AA75FF
B5DA99581F2FC90DD7B7F4BC3D3D32A8B2DF7A3B9CA0311F5A555E6F05BABAE4C577B0237937
0E5A364DCBB31962317EDED89394DD26E5E37E5F776A9CE97FFEF9429F9E89773A6DB3D642CF
319957B03A0434F4F81E782121D8FCCD08DE4E54E29B1A25B1436D859DB45CD3C254FB02B222
88D080139BF20C4FA130F98E83FDE39963C3068C7AAFA1C6AFB82FF6753842D6DAB630E63FD8
F7853E9358BC6C074F0ACBFE9D56D3B93EB7EB9A901ED2BBED92737FCAE60B95E7186CA800AE
2DB1570CA4B0ED9EA9FED82AD73DED3977472C257B253773DE2CA37ECCCE4FAF68F1EB5CDC82
7DD5BC8E3C03BBFAE9BD30BCB3CC1D35660637A882F0F4A037BD07FBA1C6F5C0E8A88088ECF8
53DCB2DC41EE4ED1F75640A93E9208FE5CDC7366CF3B738CF4177DF4F922D80810068F8F2B01
43A44CAED520141238781111A1331E7A6AFAEDB2019CF0EB438177BA68FB0D443989E67D21F4
9CB8A52711507792C45BBF0C25F634CF7C1323D6146F7C778EFF204C71778E5E9723E662106C
AECCB514B9BE0936AA409567EA40B9AFB5852CF3C9CCE25ACBFDEE0097F828D90D21CFCFD46E
A083EAD540877E5658833234B8609A3F376AD94098EC1A1685323BE81A64A6174851B6E8E80D
3D8CD6F241E2492BC07C052DFD66C7FA12EA0CA90A15F49194B0DBBD6F80AA49CC52E0AB1345
71C2883F5ADF6B57A036DCADD18F7E397B87FA80BE532AC7AAC3673796F6F20F5341984695DC
99359D6E923A79441B64B85D405D53F89EDF79D76278604A4001CCBCF3E10CA83F71202D6F0A
2F26DB5114515F8EB58A2EEDFC6C9F1F9A3FC40205C32CA33771D7497307B4F67618BF46D3EC
ADD0D5B6F21D298784F9E22FE8A97443E951A141E79A2CD6E500653FBB8E34613E57C270301D
BAD7B89D35B6B7F6CFC81E5E9F58508BFDD6C50C8B4D9114F9D9D0764232ABF8C84B8C8D5284
F78138778565991FFEFAA9B63D205E74146229C2656D126E3664870C9800B9CFEE76F078DBB1
064AA5609C6C553B2C660A4054E46FFFD645E8EB8864D1E15C33E20D690B90B6A5B9A7213BDD
E4856236D9F00D882D8D8CFF4B27FBAD85503029B9A4A75DA575BCF29AE444F0714B5580ACA0
BAD9460FBE2C847CD770825C8B0D72FC684AE45CED430997D41467889FC1969702A44FB77E8D
E557851D4EB34433631C225A516281AC5E0EE6C0DAFBC40855C315FD60559E53B5F33D9EF0FD
1D0431BE569D13F6DBD52BED9EFF8E7EB514FB469DAF3F9F31C7B8D31411692A72F8FC3907DF
11992B3AA76CA73C82710C4901B4EED793D4909A451F5F09F73DB0E20C32146422D4D5F83A4E
2E92CBD9297944C8BB7205AA2ADFC88DC6DCB4E82FF607E4278885300463775AD999E2393AC0
F67CD635D955F4CA5A9F57662C7E76A726E7C4256827F0C03CEC6855174FFF2B78F1870EC236
6A59A4E9983CE00941BF17DC97B59104D05746FFCC1F7BBFD007FBB0EEB36D42F959C90382E4
9737352AF582A0C76C1D86A1323AF83FDFD653373A3C3B7460C839858F6FCC885F3D47D19020
01FF877043CE9D13B1F8D1E819320F6374975E740AA77886063741E378C0EA28694A1BDCB89C
1E2D5E8CB9FD5AB6D20BE8CB0A2A74EE73D5F4C32B26C0670E7608A372B6E0CDC1819879CA3E
B1870C22EE21B8D42780D9CA1489A4ABAEC27DCC2FE096C55B528BAF52E468BAC2EE1DB1C6E1
609740828AD1F4FAAC82B9DA066B8472B15FAAAB3109DFBB85667A7DEF1794FF158CBD6FDAF9
987567D8A6C6F86CE77B9AA3FED671F7C74A345812C978FEAD18AC776F7CC2957540A1720941
5B9CC4BBD5D8AEF5997110B41DAF2C3D41ADF834AA24862F052446FF8A1747F65DADEF8451AA
72F9C367F21A98E1CB18B2010FC17637A673959E5790DF9ABB829314BA4785B7BBB5E68CC6DA
2E021CC4345F4E6F5C6488D481947454148DB9F7C289CE25764AB1D810268A6DB157520CE871
F1DFF95396F03780BBA8202D430BF76046C04E1F0EF462AFBF3650327876B5CE19D87FF9A6EC
2E3C294976778C669BF548EC241A295DB3CF4139936B6127009F9807F48F09CD54E920474FC1
EE658DC69C4AFB90F7A737DF582B406C98801E77B02A02212A0D924ED58EAD539B7D18F4940A
717B46AD908D521B7D07237AA25B4969239FC4968F5CD9827AB242723D29FFEC192601116140
5F8A9A5C9E1BDC9A9152AF563FBEB44D5E4AE05405BC6A92B23E71CBB866366389FE0D91BCAC
D5B98A2ED4DCB9976EF9EB6C7CF06D9C185EF69AF37163D441B756F08060FA733B3EBFF43160
D0CCF5BEFEFEEAE064680D18F7C38748D1CEC437E170EF4BB6D85EEAD3105B2A354DE80A6396
C185CAA91D57966CC000BFF2880E068D61F2BA670F7F9A2FAD0AC5D1F205C1E1FA0A1D3C110E
184837018AF730878A978AB3D08581E8B222307D00F86909C39C12D40BD6C7299DEC0867F741
7DE60EDD1897BD627767B29CEA62593542C642F1089242D853F2DB5F45B7B21FA906851B2F28
437933BD4229E32D093EDA4D448641380DA19696D7A77FDA761865D9A4A8FF48DE5AA6550B2F
80C7E7FEF54F5DC709A9B2FC120B03223AD9AE5D06298699FF21EA2F71BD34AFB79799E67CD4
96A57E417F1D87BCF2BB0C5F9FE9067AF267E5740C26D6F3A256330D68F138C81883D7C07EB4
CDE5F6B5D82CBF5DD32E0C27C393CBB77CAD6DBB058FB1C6653A5CD1A78F057787C9DD5B1A5F
83A13226571D38D367F2A4E369B4651A77789AA785F4A6561C92E0E82F217B2597D8A180EBE4
547AA1500B0F814D309B5B1FE9DC53282C9144070FC79D82B5D5AE8BD272B022B35E66CD260C
046D102EEA1A1A4C0D376DAA9B2FE0DCB3A7254130D5787191998D88D4872834F331C75485D0
9799D467BFB624655EA38FD84EDFF90FBCAE880820FDA0F2A3BD5CAB972B4D22F1C649F970E0
5549F33E95A6D0AF69653AE918872958BF100A04A7C61B8FE7433697A92B451EA4444670E38E
33893E59ECB4A621ECD68E76308EC0EB2716FC7427FFD64FE309A63571C7B86839ADD4963411
4C0AEED57A2AFB2A46AFB303FED2CA4A7B3CCE18059549BCCEF00E92339805DBE1B0C05ACE5C
D5A9C6D8931CDF62CE4F5406F8CEBA6B29B696B0E0CCBE8B9F9E1AFDCEC58064E3DAA54676F4
93AF1EBC8A2C26CCCA629418F0015D84E5931F620207D2C8B193113C8E6AF5A0738F7085930E
735227E37BF703DA80016E492CDFFEDD077BE121B35093B031C35D369298F781340931473630
62D031233A26726D549B16CCAFE56EB0324DDEEB4CA8904DA4FB9016FB5C46B60E873074C2E0
C78364BDBD05E0246FB44E77DFFBED7FB94364A0EC0970D329AC31712D356BDAAEFA99865561
391247A78C8FF19F6086B4D8CC464D0B3B417FBE5F6B3E68DE6ECE2242224DBA66940DD25A41
2C337E4C19C3305E4E1699E453BFA096D66BAE0DDF3A3F6D84CBC7478A00F2FF606F86913B76
8A18F5ADAFBC8B18E653351CF8D251ECD0F0D3002862223E3488701C0A5647BFA63B55B5E162
335533F701659833FED17EE4EF0281032344FAF499AE8E33A25F97D5839FE0771AD9BFD9E2C1
A863E0EB7CE72CC615F4FF19A8EBFE2F44AA6A636BF3197EC10737B3AB19482250C61D1A1BF7
FC4F325056FC30554F92B88E6C8BC8EA8E5954DDE367A169447091D9D01B79265CB1054FF700
0DF3B659208C6166CAE1973F35596F4F9645361ECDB125B87B6B9096B8C1894E5E1CBADA1013
4D54ECE4BC0A73D07A93DE3A3B943697CD3BE33DDFA0696663524A7B6E246984620DD268FF65
291DE84855EC9192F88540C57826F6E6F25FBCB4C4E39F6B7FA2A3DEFD578C08C8ADF66FE2CC
07A3317B3697AC9E5EE19A9E225EDD3D52323982D83D4CFA156EB858681DCA6E77AD60DD946C
8A1BE74A8BB83FEDF6DAB14F5A2A5D1CB08AD95F2A93C16C39CF8672FC59BF40400920265C7E
06ED02B2A788AA23425B45DBA3B35A53098D3CA23C0BB5A9E16FFD99CB4846121C6F5656BCB8
D34D29E3EB078BB39FCEBE3B98FD375BA941C515C88CCA36F7C55D325D3FF0932244F9C83598
31981A1067C57E4B0CA5E2DB14A9C2E24B10FDDF7E037D4CDDABAE2E5B0443C3387EECE204AF
27AE3BEFDDA5E88267DDCD3EEBD90560DE14C8F2817B6E6055E53E40B35B93D64234E4E749CC
875D9CFD48032E1059F2D2EA0E7861F3F525C81FE1863640C851079CD35118F98D53ECF08B86
ADD9FA65016797FB13F20FA4F9FA0C5644E286E4F6427A278A0715AD34C88B103C6FB8C09D65
00886C93F399D56DC0444A53F64649F39E423E9B8C5BD7E8711A4455B9BC82282AC372524BCA
B6140921F9B710F75C662901C3AE885424B03F12A4C9F589AC693C7DF6E188913B64A7B1F70F
0C315DBEF339B801D0F228C5D82D08C00A9C9B1D825559B47B00E98E58204A11257DFD1E7CFB
5DB205B0DC4C3211374459A58A3D23713068BFF43C8B73FA51CEBF259E69F45B37F30869F44B
F3898EF27D9F3B4710B28579538EAD0240F72BE615EEEF499D8D2F0A7AA72A6FFFC68A0947DA
FA98F52E94AA14DA157CC2C71AED17F3C2661ED84E058555D0354770C155C54A03186B815440
CF8C7E37F9117E9467A5D50281ECEA2188537254696C4B50C3AEDBD3EBA04B543DAC970A7193
BC79BC707725C13B8A747AD5DF929CC8365DA27C028745FCC82DDE3B297258EE413CD84D1716
6AE6DAD65489DC8D98A4C760C08DD0DE05754B408A39434B17773F32A3519B27D51781C807A3
52880F5D667DC8CBE54F2132200DB7971B0BE03EB42FAEA467CC7A1BDEF783CE5D710772DA9B
71DB45C7BA4F3C22AE9A9BDF1F26C29D811037A170868A8F6644B0092E7CC538FD5C13568CA2
62BA0FE244F7307727D9318A281F38B607C172E64134EDB76D6535ABBEB9689840A297ACCF5C
15150F2B29E8CFEE85D099297D0C6D50720D686CDD849751966C88E3AA8998C0C5C176656902
9750AFCE844147ABC710780AF405D2A4163D272186AC4D486FC32C1770C837A0656B6A0563E5
B38A080F614AE9D49BAFB92C96E2BFD140A88C4989952EDF2C835503ABD01565E2CAFA4373B7
90376483D4762A99ADABDFA0D7A7EAF9DA29530F626E330C8CC65113B1B7DDF5B01249B9651C
E4C47111A5C6590755FF07445EA2A3AFA851DE664CAE6706BF0B640F80EC4A178E518BF6B41C
7939959349990CCC3CB8F1864B6F20B1160C9EA3F1F8E658E88C81FCB7A28280FB37ACFC06D4
5D5C93509DB13E88349CCB959DD1F23C6D5A574B9489FEFBCA90F8C24982BD5F8FCC0EE7E13E
C573153B51A760F47811A50C1B1E981ED0007E952D15DE9FC00A64966A945AB7CBE49E6BF900
62CD8F6FD438428B14612085DD18ECD59924242EE5C9038ABEE84CD94ACBA6C96E805305BACD
E3A0390A456E19DACC83F8767C5EA9FEF61DC22613E3048CAC14ED6A75FA28C06D348E240019
AA36FAAE66D21853B43A4C05372B0A958D3D26CD22186F95057EE646602BA13E197475830708
5B236FF8B0F2194A00258A76B18DFDA0D5049BC9780289DD54194800554A086B80EA65D97B1D
6D03EF0AD22356FD31C90485C34A1CD00837C419C7295B712A9A9258B7F0452165473AF73B7E
21CEF53CE54BE278298053937F89D0D3BC15657FCC9F3246261DE1A1443C26CCA0BF28D291F4
51D3CE279EEC77AB32D5463F7F5CCC695F6FC60739A5FF55DEE8232B2B868FBF60A2137D8371
422C1FD08FC21468BB4E6ADDEC19FB2DEF9AED1599FEDACC1E5A38670011BD19CA8415AF3D94
010A50AC69E8D2F36CBAD97548090D37E081824C5BFF928E0A767E0947C8C4F00388E4A95E99
2A705CA0E7037000E4C191A898B40A74808DB0C15C9669D2009EA5C7A391DEC4F2F4685DFC63
FD94703F948D758F11EFDD2E0A634E2D4274DA9BD84CCEA58FB6F41E617BA30FA2114DEB639B
7B579E2BA187BEC24145664921599B6B0559D742B3DDAAA4F91EF05CD15DB7CB7FA2400F66FD
9DB3D207CC5728D65B86629510B2B6A1CD2A33424A9006A26E8BFA8B3571A59E5CEE066CC10B
F301269621D74F1C492A02220C551560EAB04213B3E8BE62FBE2D7AF013072EF82F1DBBA5B3C
BE1974B35AD6E92E6D15C2609C17706422BEB22F12D3C4C0A748426DBE65CEA3A0FF0B208A66
460CE8D359B09333E208EF39FC7FEFA453CDCB028B195E70C577260962E2E8900A286E628BC5
B0EAC0328C2C6F64F0229AD0FC7872F48FED6D1BBC490DA985C19F622BC07B388A4E70E79BBE
40E75D928670EECF2911075DCD056F0010A492DBA50ABC966411D49F39515B27AA1E16E7B610
4B16C6B52B428AB49A6E98ECDB65ACA5377819DE9D99DB481A2D0CCB90A1663CFA6EB6456D10
1609A1958AEE3C8F2FA4396038DC4AEC5DFD472273900E50BCF3CF5E5711055B90A9DD6845B5
7FCB0D9C6CAE3ED0180C7A4C554A1B05298518F4D7DE4107993F27154B90A115A8D1A3F074A4
F34B67CA5D733D59630A5B0ED10FD6459F4F9E3D17E5352EF13AED05ED7A17A44068884977C6
53628D8BB5D185F5783D041DB9644D0D69BFF8433E2D00C9F6A8837A414270C66D0249E414CE
0E56D5051ED7AFF463C05D6CD8EA3B09E1A3FA4C1A866EF3238FDA1B43606F29CFFAFD8F91AE
673BCC38804F91178C0D596E109B65D5A462A103A4A29D995567EC16F0263A03BAC4132DE257
3EAB9DC7349B6B1FDCE50DC21125E38D17A3F6EF66B3212DE5E0B74C3DD37541E341BE122BBE
DB6EBC2DB96DD991F71011AA719C1784E24479DEB65F5D053BC429785D4AAD99DE7B5B5C03E5
CE4443DBC7BF483EF1BE808C8E508E6000F51DD9D907B07DB3D9F6566E5023A8AB0EED23857B
30A6FFDA86DD1AA3B98EB1B7BCA8CE298EC3CBE5049272EA33FDCA7A8A5E701E27E07CB3DA0D
395D258A1DBB8714D83F3CCBBDAA9FE08900475EA6EC759F425BDE968014214728D08DDD7358
1408D3974773001D9BF782DC9CBB5209A5D3027ACA7BC277B5DDE20B991E85351889D8D498D5
E8AD712CD499727F61AA3953BE4EB62133BCC578381BA3ACDDBDBBD5DE324E4195CDC594BAA4
8782031B9DF8AAD86EBD62218B119123E213615CCD6894853BFD77D26740D044F58E602733EE
307442AB929222EDB685275504149CA05ECED3D317F03715B8799AD1EF2EDE2E3E0FB5AAA719
31E70C33F7557128CDF1022264F9C9B5DD2D9B548A76EC92ECF9EC2029158B376C89A27C4F73
8009B555618B66865C2F98AF0733208D65B1822C734D3A5A2A0D359A32DD566648DBEEE996FC
085B7025B47B0F8F4DF03A5F9A3168B722351088A1EADECB90456A05BA74D908D4804034A3B9
A915CFF7A3B2D467F9A6ADBF12C2995B75C03DB7B23EB224CDD2B64A0EA942EE4C07AF8EEA65
87A8D3781AD7A6528D821BFD7028A2FC5478B6460AA696EE868319DEC5E1BCAEA69F007B1DC8
0C47701ADACF722B545860158E090398D30A9F049ADF3274A492FE891FB7B2BF76B78BAD2FB0
5BF43BF6B14095B00EADF94491EB50D75FCDD95025DD329127E4746C2B433CD4793DEFFE5015
755A330B821F93F96AB10B508E71363DDB55CF4C6F9092201715CF26D859784C49B636C639CA
F84E044DBE3C14BF6D64E9C259AF1F24EC73C9D30FC0FAC31F9EAF2CA8F49D0D5C18E6A12DC8
ACDB9F3D8ED49F607258C94967989CC31A215020A9FC65815C230E8DA7751552A895B0064C2A
1CFF3F18F9CEB908540A92A106C7D46C596ECDA2E25D331AB85F534313B214ED307DEA03D411
3ED6FA2EF1E1DB3ADB7861FA48CED61F10AB89FAEB82CACEDA7FB1E9CA240E38611ACB421BE1
119683647413C0C063C1468F1376A099F08351BFFDFABDFCE352CA87C125C0212301C6793146
014D87D22727AA014D56C375945F7539863EFF029D046197D65C6A7474FEAF44F7C07B0BA500
752BA29F5F165D4ABEF0EC13C625ECF722FC9EE46958A291CA5B1F385C6A5C6ED4FB0036CFA6
FBFC46F1622A59F019983D1A2F2B6662970BA2FFA63322B5BAC4D58ADAC06E2AC789E0DEDA10
6A28A860E87CCF6639ED41FD29BE8E218733D486633B763D0C226C18F264A632767957662400
393F4CCBFEEC54ACD358DBD43E71FD59096150E9DB5A2AA6B01BDF8549DC0C9170A005A2E182
75D6D74B6815F0205A6990862A083EDF44B4052F83EAD884C2D891A0698A2CDDA09D43D67FEF
477EB0181246A8EA49D8407CA5E24691DC83C45BAFB44E555C33E59BB6A17F2BC3501217502C
545082E1DE1E43A3FBEA39EF67644FECE36492EDDE144CD3AAB6778CC0A4BE0FB15BB46F95E8
6F7B4DE290E66CC69F665B20522987D2D0ED0ACE9E250EC6C0C4793A2EAB0F8F9A00D76D624C
FED7399ED1E766B6C2DAC1C46C6A8C3F291FFC03EB71DC220EBA0573225E74C9DF93E3C3D31F
4BF8B79A0EAE363EEBC0D4547D61D0D54C42DD66FABC8BEFEEAD4FDC6BB20586A0A47F373849
B0B6DDF42A21C6BE6E1C9DDB2F78C71A334F855173F681D7253A9084447B363872C750476365
AC690BB27460E4BBF22ECF0E4D2481BF3B0BAFA54D4295EFA2D38CC6490324B12DC991060DED
E02E8E29156FFE3F9116067F0478F9B5928E44075E847E0864E06191C88F6EF0408124499B97
0C5C5ACC28F06F15EB4FCDA631FBBEB199EC847FED052710C5D3E1F1598F7A279110DFB67E87
8A0CAA27AB4EFCC03A6953E28AA9D660999624CB29AB8904942B5DF81D67A462615111D743CA
174075F3CFA6D239741A4E6BDDF182DE776ADDF3810047C24C44E453A67241E96BB3ED0CA17C
D928B8F67585A228176D85EF4B7FC0374123987D2BC1A0FCB9C5A5BE1749E684270F9B77C5CF
4AE8D360C14CA596EFE21302D3433F7881E8A25A88CA999A9F31A2467FB739511A42913B98D5
6671C74683F2B8DE6CB20B8B9FB3D1B51B9A9A43B8AFCEE655A3F7217F5A952093F7A7AD8459
3AABFE0767F6879CC2EC7E9AB5B59BD82F48D06C9ADC0FA218BCF9E1F63E9000EEDFED014A09
1DC952E3E0F07EB8E7DD1DFE0CC0E6AF9072A53FC95199F9233A66F2D04C65BAD02D00C3C5BA
1F5AF4D33A94E8EB5EF8B21ED1637B1C3E3522CFF14177CBF28628D468249A154E900A9DEAC7
0F0BE7B7D7EFE43B9243EEEEA068B03D0122FEAC859438FE96EBA107D3EBAA99817816652B53
944DF5BDE7B78EAE04DCD2A179FA5C3002457CCCE48DEF5739CD02A8BEBC5D65A626BB50E485
7A592D4652D7696129B176E5CA95C9C3491858D341DEB70A0E2D57B811EAEF78E52CA3629E9D
EE7E39259100EA60488AABCC05AE2C6F751F41BCB2C690161E8813FB4E7FD734F2C6FDB37CEE
E6F7BCBC29B2819E904E61F892FBAEE59C4581E2F171F9F360452FA11A872267D49F62DF732D
EE74C8074370BB37D33D939E4A933758487B280B1D83CB23DF036EA8304A2531465A647F81E6
3DDE4734C49A51AD264013840793737F31F69413E5F5152E30309701EA8E96357CBC6BD39053
13564751930070836262DA78A79F8EF1D9A17458E02D8040629B6DC7A7DC114D05A4BB01F90E
01480CA86F291747C4C1B226B2EA6C15A38B6D7078F2F51B264EB125891DB1BFA66952594053
1976089A9A63FDA1C89FBBCF9E5A8EF413F837BB541B1FD6F825B7DB4D1C1F3FA3EEF70EB4DF
0E962393060034581AE4609479013A72D16803FCA455F9722C2BBA278A1BA5BCF1B8D1A5139F
5AE71FF532481524ACEF4FDEE7EF14D343A1F0E3FE847D9C9E5878BF1E5530820DE3E6D438E1
E66F20BAEC033B4F92D055105ED98345BDE4FBB5612DC76B7F51CB9D66150D153A10427C027E
E83838FAA910E77FCD45A41BDC6081B0826206B56C08232984A85A5251A8A8362CC0C4B4F4DC
E651519C55777E6CA349BC060F9523C421B264D1B30895DA4ABFC4AB9ECC4FE0B4A1CA8310F4
53DE21A1E73E8BB587EBEFA3F4555B5A332499CB2F1F49B7D122ED4F470711F436D05695FC1F
275B93CEADE6D04FB2108517D670949A4BDBA8B6CDDB62B1C9CC92ED63A8890D1E287E0051E7
C8BC47B4A7FEC9C7C33BF668ABF07C2CE4E080C8C4E9503B61940DB11C5F17C54D09B8B8C5CE
3985B4221ED39A00C39E87166C7BA0EF441D352259022B609513A2B134E13F48065C7ACB4B10
1230BA98195E8B49D570347FB95443269E9FCF9FD03C7ABA76E7A1B13E187D344D41907FCBDF
19F616DAA51DF3B1B1BE673F95C4EF1A271A908548CFFD0C5F70521EEC3119CA5588B4B7E049
54DF14B0589F1448EAA347734E92128F4D5128243B9E8D1D64FA12F0C89C604EF7EC03587BA0
858739FF07B07DDA99390B74A1FF879E4219A459C6ECCA54896449C3BDF93582F0890BDD0BD6
CF8D5168053B9A33CB7746F62A84AF705B6135AD2BF04803E34ABB34185ACFDE007901CFAA43
64C992303E28A71BDDA153858D252D7FD2DA0D8DC618FDA68F3D26C03641019D7DD2050BEECB
F38DD29039EF1923FDB29576B7E3F10671D1CFD93A2E5DBFF204EFFCDF0035EEA6912163E8A3
D995EF07170E0D74F88762A3CDD080D6CB7CBB603ADF3CF1E8079A2642CF23F40277B1D0FA68
7ADC1CE2E22CA28D2715D58CF727A9BC686734EC03602AC69FE7EE9C08A1A38CE9871E9038CC
624C1E423F34539E4C1DD622E6A2D30E06E2095E30B6C545DFBA323E78413AC65AFC1BE95836
9D64F21405F98FE5B5E58E9EE85DAC85DC318349E91E64C839E9C94CE019C32C6CB85ED016F2
E6069A4B374E37155400BEB75DC3FBDFA829980698B9D725996DB955E4702B4AB9C406991B30
154E150AD128F2BCC1D6AAC5383ACD6A9CE148EF92C870931F701E867F254C7C82AA34F8D55B
28F546E9B7F80437E5A258F22D55FF60916A502103299649FA9B14E5DCB9D2BEEA401E2A3A12
BEC2315FD88F23FA8A9DF60511057AD5AB55A602688C5D9B215355BD24CFA4DCBC9959D1FACA
DD693A320BD8737235896FF92FAEF4135E208E0B52FEE9FF7F101A4957C241CB836EF31A4368
603D687EBC95ED844FCE7C18983C888EF7309FA051593913AD1D767E142AD6E6993375D0ABCE
782BD9A6CE804FBF4634A65C063344C1D8469684C09A9D41D64736DD3C7DAC43B546866D7182
336B6A73A4335B8696A43116F9D4A83518FF1EF7BE60D5A243461737CCDF00093EBC76627A1E
24D3AC2A60CC8EB39B7DDD3C205D80BFDC89DC0571ABC93DEF1998BF1C9C4128BE86B52C3624
46F2AC2695D88AD1626B27D6110B8D130FC7189266C5BB05F193E826A98E86374C57EE9AF55A
2EBCCCF8497A068D6F60769D2C6A22BFB9685FE12E239B4B7C70F13D3CEB0DD59EB53809883C
FFD0D5EC27E0B66B7A41E642EC1D989CE0CED2F386EE381EA1EF0C659556ABC7DAC2D458F816
F04E0FCCEEC190D561C0683F4D579807554EF59D71762374F6BDE146E18ED9944E053F99688E
C4D84CB8ED2CFF8F7AA3A9B624BC0BFCB231C35F93DFF1382E9568DB2499DF08DD1F8F8B49EB
ADBBC2DF3943D11F3A18992B25C7562A7F1FAF0E6E653A678942EF689200EAADA357E28F2610
F9D20F5FA45E81142D264E1E1A54A327AD4ED915749E9F27DD8A36AF0B61C4440C6D9703E5D3
75F449D352148CFA26C266EF7AFB0C3B598E6458D82780DC8D262FB457A136E4107749B0EFCE
94A6AC6C9D49D725D3AE79A217A38B238E4B766EDAEE64D0D9DD1E571F16BA46307838319ADF
6A0D1E7495CC545B7F1EA4911C21C8FCB88075446A45BAA28A9EF33E0B3F3B8DB25C57C3A85E
34AB0C0FB1B18E7BE01BCC2629FDC69E64825A845FDD7BAE1CCA2666DCD8A7F846521F4EAA2A
B5EB1B51AF7002DCCAB0A9A7389C2D3129175D8CE87CC4D73C6D46FCBC10018EA1538FAE45D1
B02EFD79B908CEA0B20D186DFBD0AB05AE06084C5B338D1F60111F5DCDC9E2818773FE82B7E0
A621678987B93E37946BB24B181A4FB4CBA56E3EF726C158B0E878AB6469EA8FC0DE95A17742
141C1AC2B765BE853343CF3C935BE5B14B37203788F32C418AA6206E80EDC58A9AF1B9547A5B
BBCE6CC95B56BCA4994B32E76BB19593D6DA2BB4DB58C0B0D1BD0F94149AAD4B85A30131F569
31A145A65F1CCCAB13DD4B4F3F233D6EAB4DAF44F42B89DA53D2DF61DD7E1FA0575F27504B1B
74F843847454FCA0E5264FC642A28541D6F1D1CAEDF7DB860ED45D9965121B535611A3FDC881
CD1366EBDFB490085CCF11F94905EDE6442391BCD93B1D44BCD4A7B2F17C7B0AB3BF04D07787
451E43B3F25D5E864FC6ABBCEE5297A293C02937B374D8578B71B911556F9C0E71DEE07042BB
46706F5523F72DDA2156E364DCE9644756987A5DAC995C0C86C4DF48C1CCA629126A0B67B59D
50C4E34635C04CDD165D5607A353568EAD3949838D4E5CA7A8E7A9F88540508A122ECD371A77
CDDB588E6392FC187C1A210DC63E42491795C21F9F50421BCBB5F2B58FE1DB5BE2E9BB7938F7
0F3F12AABDB6CD26559D18FD1E7E6757C5470FC2DC7F8FCC6564FE95C2164FAC044B3243C72F
3FD8CA843F111DF1A51672447E49070F6EE4C3ADC8E25754E8FAC50535BD2B164987DC02452A
9DE63973203EDE40EBDC6D0CEE93160C05AA3ACA73DC14BB9B8B01B94E8DBACE5E937E7F0F09
834F266D71D71BC4E06E885356033CEE9A7F346C8609FABFFEBE003A54704A4035ABD55B26FE
6819805ACD33B6425A3B61DD8F3DB2B7B9551318D8048B24FFA4B40861614765716D5E67A9B1
799A48B69864E90476F693CBD8EC106C20E94502EA2EE452C200DFBF45AD273CED950370C316
ECAC58F3DD67B523261A30FBCEF78D51D427D414619E812E72AFBDFE5946E0E5FF7029808E6F
BEB849FBD716CA435BCECFAEDFFFB8A2C48D3BF406A132E7A3FC2A9F52C28763E7575BBC2F22
F4029BD90C19D9C816205B482B03F88FA36332D72E5F0DF82134760D26FFBC3C5867556120F2
6D10BF19A25FB52BAF6A8F98F0A6322B2735E9C7CF5E152D0B7B01D97C5EE45438A287FF2172
B164791B1B60B29E88F3B4EB5FCAF195F5D53910C8F00517A82C650621A83EA994CC63F4788C
98D56676AE219FEF3E446356FBA4B49A24C3E0A8C7413C8AC1BE4D0A063D6DEE027E9FC4CA54
943CEFBC760615B6AB16091114003B158B019E105F8C488DBA09B70DB0AB77EA949F889C1498
FAF8883D63C36CAAF1D3A198E2C76A2C97A0A14E5C3DCFB7034AD7357B3BE8CBF95D93131D77
8758C29887F5CF4B493044E28E29903A3763FD76B3D69AEB4AE6F95B160FD9519AF1A8C90AEB
29776F438F1313FEAB076CCD14323A237BA5BF76FAEB29D0ECEF23ADB8CBEFCD6DF76741644D
51076CF66F92B52D852C8994B9C763DD08099897B11ADCF00E9DFCFEFB6C876B4F076F7923FC
3975AF92E9606475C78B98D53F60F656B5FF23FC4B6032DE05F8077319F6B35E97C43DFA17B4
DE3CF2A3CC799F8BCE3AA8C9D1B83A4ABC42A89ABD121D46C1A0235AA761AF492E2E2136221A
C34039136C291E877912D3946118D5AFB7F44A7BC0ABB2B066606C7D4CB5FC0C8133A84721D8
CC7ECAFBFB6B15B6AD5ADAC50A7C3A3B8BEAF70054601140CB8CC08B6372FF8FAFB5BD0DF043
64633EDC41FA1C4522402313B35550FD3515B9FEB6A17C4A5B197E694A07477CBD4A46999EDF
0F0A500EE4C701F55F00D5751C65D08A621CB3F41C298C6E4DDFE05703B6EC04C25DE3E0E7AD
4F11DC918E011C5FBB236E5BEF784B2FFEB8D79BE24F9C1C394D5BB839142C1193BB7F224ACD
259D1A90D2D237ADDFCEC05EFA0C387D984CE73E67169DC36EEBCF137FC9829E4BBDDBCBD5F6
1C2F3155B72E8F427A15B099C2561CE8B9871FEB7C1CFCC24A639E0F2D051ECFAB89797D1B1C
0BBB7B374DF1D3DF75E16998DD4198358E2829F7BD40F50A449B968813949115DB90A7C403A2
832454BE362C71875DF7476C7651F3414C0D4F497AD1B67B2952D41641C740028167677C4837
4B3151A9021FD3B9C21CA8A8EFBD86B11D998813F01C3FCC990C60FBA08F67D3AB4A302B62EC
0F04B9063E01A8C6178F3806935F638C972686FEF41BAA1CF372B735FB19BC389AF9D7DDBC7D
31ACB7E915D4B418D7A5AB181CE663314278CF8881AC4430EBD3EE131A7A2AADE1DE7731DA96
303DFF212E8FA851CEFEAFA4969D11B0C4A74E23654821BA2458961CC2B1361BAD81A8FCBB99
475B003C29F738EF40E4F9B1D89CADCEF391DB7CD117BE434D0856363AF49DF9D46A0CFBFF5A
F6E5E4D192A4D13050F5CE3E30471E489D57330853D2728007FFE1B7CE41375DBC823B84812A
6794B58E38DE43B2E22D0D059DB642385D32F79FE0D2B8482F61A0E1C2155DD69D2DBD2636BC
0F07EFB9F6F13C4E61AD16BC525B35930DE9DD5EF4E5E91146ACC78987A2E9578475522B3C87
D2F5C5ECAC8E55DE0399EB852551148047019FA08FCAE9BB7831454EE0D5C36E3744D7A34EED
0CB0CC8E82810A673C1098986B7D3CA984597F37F695DF8AA168A70D0AE96F526F09EC75FD2C
0D2FA0055C519459ADC3E7C61816D57CA3BD36F78A06DBE7DC22505A4CA8AF1B284D887B12B7
F161FE27B6F1ED063FB4F7A37B5AF0D1231E9ED802879896ECFAD70260C1065AE88E593C75B6
D0CE546440C482F5503467C854758FDC1C95CDCB7D5663A0E1AC98D0A518894AA3C6F4E4ADEA
A8AC81D8952D585C2B70D5AD861B13F6B48616332C765D1FDD8A97E8B15D38097AFA88CD7BB6
B7C82DC031DA0E5E919B3A8CCE89DA12B8548A7C45FE1AC418EEB8B2318C951659A30E56F4F1
66A6FCF2473C213449F46CFB906DF3FF8AC703020E8CBC71BF216518A3C76265E644F62BE4B2
C17CE1C8FEE549FD14D1CB94B646ECB1D14CFDB5CC422D8DAE5A86550D4862ACCA62644FECE3
6492EDDE670BC9CE80B0FFDAEFF682BDE3DBF0C403B882882AF7572A42B4F49F6BDB5A8AEF91
159546D90238EC370BA7E2B0CF8BC7505D8A2936E88836D097F48D57AFF9B04D08E9FE8F3F35
D04647D6AE41AB09AF7BC1335369407A9558436BE878BE6E8B7F4CF88CF09A6792AF911FFC61
653653D1C6C8DA705377941C7D4C1A6CFA6F47C2984436EF697052F88DC07C91414283515BEC
6BF581C046306800B755C301E5C5E2509C8717D7A4501666D78C7A63C74279DD218840526D5C
64DA4CD356D24EE7382A471E511AA7FB94DCC208F1D79E5B878BB110D5DF78D7A25FACD252BA
729213BC5B60093C115F61D72B91EBA38D54600893F12F41C59B26752D3EFEC1336D8A1BDC0E
9A33B9C9CFB1946D4A60836B1DDDDDCAB7C18A1DB24BFFE3DF0AAFCE0C145F5C27B8BFEF908F
BFF18D2F398B914A5803D2337B95BC7D0520BCD60D3730189AF04C8417D6E12C20626580881B
CBF4C7F6A6A5F43E7792DE58F7ADA1D8784F6A7B4E6F96CE73C7629A1B3F78B821629B8027E8
5EB5241D8723F1632145263B0457985BE78A4709401ECB03F96444D94F3369B30B41AE1A16A7
671D2A6AB6ECBDAD3753FCBB0EDB46887CCA933F5909694344F7282CC7BFEFF1C3E19E7668DB
02447082F8D172111D8526C17A4458326BCCF6AAC24088A3F6DCDC42D5C5587E05DDC8CCFD07
38E7F9185281192A15D248F7A7C7F013508024E4F2386DF48F076B2674E5A720C8E5D5DB8B7E
A56C349A963ED8441501C23B7334C245069978B1D13AAE19581AC8D6BD5BFD27B3083652678C
15EA96AC0A901508D2DD0D4D89A772C740AC408BB9B61C28D5FD3F46463888A3FF49EE43721A
0D03907F2D20F9C953C6C1DB8BD432AFA377913B374443BD560F68D11611B017C876D7CD1A2B
ED5789A0E5BB275660A68957B69249F0FA1822E3DEB8C8C879287FB81344AA625A772093C6BA
151711232715B0D53725AB50343C5B1917E2D2575340D003DB8ADF03B3835475F09825E541E8
7A326369AC59D4B9A71B2D5485F01CFD40313D14492E828A47FEF18857AAD991E624AB1D3D8D
696A55D34E3A3689DFB64C5C33FED34FB0C8293DA01C83C58943509507870979B2C51F74EF70
0BC52509DA2802C0F0C1F4516807C3DCFDCB32C4B5ED6A87231E58F5896C85687EDC3E787220
6B3C19BE99A863A40FF15776E396918AE1DDAE9ACD9A3C654133AA17294A9E57BA5287DB3C71
DC1C0D12D9D6A6B85F5D1CB487B51E8C1329204815962B6937A22375D5DB47C4BDE26ED93EA1
8C82839F55A28F62A508958BC7FDFFDFABAD5757E5A4E891EFDFE94216867DFD4E36A3A394FC
1451E38907B58D16FB110D8B18E99945C9D1A215F6C906DC5C2A8B98BA49C225C437068ED712
0C3E591F754BBEB880FA51868EBE4735B7D57C1107652525B3B844183F4CF351BA35D655BD5E
66527CDC311A4F0DB54129569DABD87A4E45081B4CF219A75432C6C628B596AFD87B39B68F60
0611B3AB3D8361B8B056E3AA2B403F6550B72019BE02A27B7CD023C45F72EBAFCA0315F4FEA9
D490254D0ADFD8702B6EE29AF2E47BE8350196E470D622BFD3FEBF223D7358A6A00F042F7D16
8507D7E69ADACA8CDD219CCA5AC0A1D28EC684467D9A16152C9CA31478464B5A35CBB18F064A
F9DE5A5044AE920B9897D6EDA7BDAD45A2CE8196D918A6C98EAFDB088DF5E11E3ECA1B860FEE
77E4A7A68E21EDF484532E24246F345BC0136909DCDEB2D637B215F1087A3B14A74CE614E00D
D9B52795F32DC03DF2B5FE1C2B19D76B3EC5BB517B0623FAA536C0752C796B2179CA76A40C01
71FA99C78E06BF1151C9384A0ECF7E384BC11248D954B21C9DE2BF6DF4229DF208FEA16848C8
93F1F25B80020EA691D92D47D82504EEBBAB22C4FABB9AA29EBC2AAB197D861B9A7949FD86F2
01A90EE2A453BFA2F49BE46E87935CF365B21F946B88A3E8647FB2330928C1E5FDE0A807C23F
CB55B4E2008D5E3ADD8DF3A74E5239B7AAEC108EA92033CC581AEBCF23116AE19F25B8D31EBA
90CE20388FE73B79CC933FDD183AE909E3122384F79D2FE53CC07CEA9151BB3EC076DE154E67
2B580AE342763452C9FD521E7BE2EBD9F2A410E989FF4C5BEB38346E37D6BC91108939F43EDB
A27CC6D69A60ECA3CB41DDEC11536719E3CADBFBBBFC877D39021AAAF5787B986A01DB572A62
B492C38466110E1F484FABF38054D0FD6ACECC367FCDA35CF928707A3E15A0CBD3F0A6D555E1
625582DCF088B8FA6859B01357A3FA460E7E5CC1A3330318B3FADA86B2C55F904D77675EF57F
137E8D3852E1CF505029DD33153640E04FEC2575888CAE0258B22F309C93E9042D567BA4A0FF
C57CB9E9CAA514ECBA866518648F968390586F1CB0AC986DDDDCDAAB912A09C397D12A9973DD
C5ABC02B82C7B3C1CAAC0F1DA96154677B7112BFDD1C349DFDB5C4BCE5D7146C8475E3CF71AB
9034ABACAE8182826BCC8836A6C0CBEF7B64B67F874A115359562C9A996748958E7238777F23
511B0F2C18848599BEB4979E22B98EB5D579611C86D917D84C50B23D55E5975A2CC934A1265C
0731C9510C003930CD829E40A4B57690C4B63595F1735D8C2EA162DB038F58BF18F3155D0D6C
5982D43E0BBCB1872EFF929A6E4788611C2527175460FC9A8A8BC2B2B3ACBEEBD6C53779A115
62570F53EEE2BE859BDD702D4E983B2877F1F3AE6E4893CAB50D607C42CC9DBD13FA64F20956
338528553E7F0FD6DB1FE98257C7ACECE718E79E6C3EA3588FAC6EF5A280F937F89E57079622
0FC2B939832FBB6F34A9CFF554269121EF6AA6C3B3314F2E22F5E597A4FF253FCA5F757FE152
E4FB5E6019766336E6288C352042FC2BE780C7E555F03B991BC44A7456762FD05C9C2E997C62
6379D447DC056D66332FFC2A137FC9C2DFA584B127429914C40BC3A8A0EA5E7D6CD3A86844CB
8F1ED4B763AF17E80A0B808DCC5C70B38C1378C9CBF77601879D0019A8B2AD2D458C17DA9326
39D69CEF730623ACD1243B062CCDDB62116655812D396686DDC1C8938EDBBAFBFE0CCD332210
70A60888C8397CA3924E55C5820F4EB29FF35BC501347A746E3704FD2051A50C4C4C1C09C74C
9E6CEECAD42D37DDBC410485F90A0FEA07521D6508208D4D86AE19E2446D21902441B4473984
9ABCBB2ADCFA2FB353E6838A0444FC13839CA5EDAD7B5638D76537257187EB5DC89A1F412C35
EE4D8BC661BCE25D809BF5E3B082051090B20B6B83225581B547421138ABE92A2C3C554651C2
604F7E79B48A1FE0E630A4CAF13FC15FCA552DC094BE6F359736A68FB4791DB29B16EDB6E06D
3DDFD451B111A06BCE53B70B7EF5858905663629E780D0A79FB86C239FD3DA4D2FC79A2B7619
A3612490F147A44FB5A9A5A8826C7E6F70D9AC9041E33C39108C8B963F692C8719187246E9D3
4F34D5D6053EF759DA18EE8251B4DF0BBCA723F7AD791C3DFB0F1DB37B01CDDDA2CE698B3BF6
79D2CC1CE8685CE0C872C2F89C6A6897F8C203ED61AAD3F8CC5E0371710F5C4C86343AC38877
0C56F7D1C14B15CA0434218F86BEFC24136EC73CCA2AB768FAA087EF70B3D5FB7F200A68082F
F38E522EAB0AC5C74309807EB4597D8EDE958790885AA18C792E695374DD77595A94F74FB896
587C5CAF286F43223BBFDDA9E89BE778DFFABDE05823909DB8ED5B5310ADE1E80DA1EF16805F
5F8AA900BE2AE91C54AA61D40A0CBF914DCEC7A0DFB650D6323855A5EB0ADF481A2189F7B273
6106C56E30A50C27578BB7B21DB20BF5496E50DF4E50C834624FC1275DC25375DB000AED74EC
1A1A64454F041DB66CBA8A7C7455B4B55EEF149414EE08BFAD9BAB1693F197EFD3BD22FC8368
D39B706CC7982CE7179CB85B9EB073FADE8BACBB9AF70F7101EB114A773BF5FB3B4231BB9F5E
439BFFC1464F50EE94B499B3D84D879FAC0012433CD406BFB7420354879EA2220EF28C07DF24
DCB079FD0DC2A63F9CC9C709DD122B658F95E5211C61795A791544E9C21FFDAB0ACF64BD6064
4146153F02822F1518D0F6C7E3CA9A4096FF4C424516835C7F6607DAFE23C0B70C8F8990EFF7
B8AE724A07B713297D9D7C83D87A6B19EB98C48C6E9422DADA99113C8540F48C1CA03058F052
712C1A46F17A23B45135C443C1128563FD6A66FE9E3C07BA27511B4CF0FF68D7792F6FB1589F
D22A2CF5051ED798976FB83D3B23B6981F169B44A3E3CC47AF929BA4716C51EF979A3FF7E426
6899A457A875C0BB296EBEB8384586AA380F9EEF9D52EF6C952E848923AB3F564E776DCE58F2
1B6DED7960F326F4E925AB2CBDFA863E9C79453E338D7D61B387C193A862FA9E6C456B7652A7
91A91B0BF01A799DCBADE03850B816EA002185F7740C8E5B7C32B003FF7A8C78911BE015F299
6455586FBA449AE8F9B27940CC97D25D77D60B0AA847F586DC6672E0C0F6D2CB636B51AA401B
A97D84DA2774CB84912E47C9DADE61DE470B61994B83B75207AF9ABE5E10E5E8CFA8FDB8131B
BC68A63886E7FDEED53AD867B6D3284F4E957322274A3B7B1846D860C446B0C5BBCC3C6241A5
6D2DE295173C3D64103955B1BB8716FFC0DC492FD348CDD46707637EBA91FA455D53B9F528D2
245682997BB43CBCBC5E8EA3E9E2A2BD19202F67D7C16A42C602EFE8254C3B2FE935C1F5BDD6
7D21D27035814763F60AB26FC8966849352D3FBDB628486CF74C5224F5D8965C5932F80E0D8B
E4B9716E5747EBD84BF452312042FE88D07E57A42A8049FFF714E690AE0F5F7D54FDE3311219
8294C3C6F546B09C76ECB3C414A5ED2A2F93E94C895A6010E6BCD4E883D2C7D7E826C14C9EE1
2F474948664138963A96F83BA7906736E893118BE766DF46767C4464623BE7C3697BE8FBFD66
2EF959E03B688D73D2A2D1F74E9982FAF31D21830D338BD8BCD83AC92127F9D48BD2660432E9
7BB6887E869A9E1871FA2C1EB361BF3916F571D9C7FF2B864658AC152431B931EC6C4F1D48F0
665A90054FEBB824B428C2A997B404813E861723FB6C9E2C4BFCD04E8A4D2B262CDCE120E249
12D32FC6CDD7D7235AC5F3D7840EAFF18BD818B715AFC03EBA177A8C3C3066E95C8840F29152
1C8429841E8B39D7DEC80C3EB56B49A21A02AC900E7A2B67E67732298F4E324825F7C823B761
1FAD2A8B7EB6BC44C3DC0705B4D258FC26FAB5D9C20A786188F593D010A843A9B6FD47F5A71C
FD728C48279ABD0E0A26DEDB870FAA7E19FFFB970BCBFC6A61A487A19C56BC4E8D2E3EF093DF
0B555A928A3B8F8F26C3E8CD4E1FBDB913D3235DABE2FA3B66C832BC9533C12FE5A5D6A004EF
DE58F949BFC8BD48C44F8DC5F55D94CE79AA7D71AD14A4F7517AD7C1F17CAB05E7A745220C32
913F3C8F06CF02BACF882D8C293C8290740EB05C22FFC32C4CB2012C3D7DBD643EF84CD928EF
8AAEE42797D010E0FCA4ED02A1EDBE1E1D7861EB0A741CF976CA07BC02C22930776CB0A36B46
B1A4ACA00FD2D77F685D8BA3C1E24C522E43F198FED209ED810B0A7214FAF8D583EA9146B26E
9EBD52FE30826222AF5FE432BD82D840D0A22B8BA2A7635DE4C7FEA5AACD8F946DF99C0FCBB8
4E5194AEB9FBBA94A33CCDB34B44A309954DFE2DECC1C3F5056BDA9456EC5A6E0BD801218083
AC309C737F10E9A42E69B5BF74D0278FBA6A691B934D748CED7644DFD2F5C5ECAC8E55DF3B5A
225E3D5BA7706FE4E50B7D9D53DF98880CFF01AA1A5936513DB38DE449DD1B1BCB6CF199752D
F7E2161857FA86CAB9D1B64595DA5A17BC0F305F9023BD265E341558F73A22BD4A01FED18671
79986ED99822F6EB5EAE2FCB74BE99F34604FB47CBA6C3A0F0CD388ED13DD07337175FFC9FB3
3BEFC49A742D6F667AF2A4476D6E8E0BB61A002B29BA069A4A78EE1BBD00FDA9AC18A33CDE76
217E48B0444E7C90788E60FF3C820FFCEDA02891D12333D6788C8028507FA8B9C59D6D6D476C
349C1E3646640FE504893B23587C0FEF7C278FD7E1FC0C12DE081C4BC55EE7BF65C9BE4C6168
ABC5281429F3D39BD0BBF771D5748B321D993DF752B5FECC462FF8306FF73CED8C946F61087A
E9606699C2E85261C50715085F967542E98F92D89BD22D1B96C1BBF45E11958CE4F31EA3BC99
4EA8E9D0B7CF4BA9EF66B8B6005D6B2960E68DD0C0AF4DD9957A253E2D4C47D46A09CEC1580C
02D05BD3720DAF7E8FD3D2144B8E5B3414FE89B2B95F8CD153B326E425B4733DDB2B4E1F0200
0DCC806252311C1E313A1EBBB4A9C445350609CB8BD725E67F6FB760765B01AC474780FAA707
8D0D0A0973CF6A475087B720DE8C5200E953EEE885E5510B83A16014A6A255BD8273610FD698
B773A0E2911690B1D5E0517FA1E2909905419D539B7D91F06FCFBE4C05041A06CB8A35BBB51B
563E425D0E65EB7B086ACAB5475BFE889397B2326CDE5D4F7B30DA851C55C630805A0548EACA
EC8B20BC10BA9925D13990FFCDB569782C39032BC5C6834EEFC519747CEF23E1413BA5C6A03A
399E7ADC118DAB0E5A1A8DDFEB5888A6855AD7CA9B8C5C96B33538CA373D4934A879387F55CE
65390D313D93E4CC7EC7E0F67C483C3CBA57F5625699CEDEE9DA8622F0553D19231F62640432
9268F440398AC131190CB74E4CECD5BE8CDB1A01BC980B993CD8B3EA77ECA9642DA8E185A363
E7DF2441B2B8D991A14E5A5FEA3014AA375197FDBC0B1472B321D5B0D8A543CD958AC036208D
6B33858D4F5A454FDA0443A5976A1008DA84749552FED657DF42290EA9E0BF1449B2F609C3B6
9B8B2618A73E5839FA69CDAC52A68932FFD4B9EAC9A96AEFD44FD7475A9CDCAF91CBF86E8175
8426068AAD6DCCBE6E874248D86BF55ACA0006414E21877854E95F7B76B3994424BD597F3FBF
E58461DC5EB0C03DF892BAAF83B7E5B743B0FEC309198E019CB64047D127E47ECDA08A6398A4
6621EE521D05CE94BE413888A3FFBF5039563B15D39659A57A9044E6CAAC763D25AEFA6AE331
5FE2A2EE1F6FA44554BDDD7150B8D852515988753EA49EAD18885AE5D2C876335BE4C4E022AB
6FD7CCF70EBD8AFB12C741F8A6B559ACA8B7C8C71F2C7C2B046F59224D15B2A85FB38FB2C156
23BD669B4DA58C1862A69E3D01DD5098887472BDDB348F37053C8A9022D23CCEB6106487E1D9
B3128AC1DC75CFF1CBBEB778ECDED89D47E4E96D97B8DF40E2B1B21FC062A353CCDA5E734D9E
D9B1800A27F3F100764C5F568FA7668CBD8C9CEC6AD262C36CAC701239B6F462AC4936BA7593
CE53E49BFF228411D4F133A019C029CCB7B973C8ED2239E18C207BFBF148019D088D2DEEC58A
1C243F368D42A7123F976CDD4BB47A754E112A27939BBAE57C1335F365F320D1E89079E71D3B
8F7C2A4A4CDA6961489A6F884D75D7493296E2DDA3EE5BDA4EC01A82354BE5CA793904FA722B
F37D85E7FEC21B4E98C225FD66E819FF11DF368257087FEB4355932627F3F6B9C288AFD80CE4
533967F42B89DA53D2DF67F577A03AD16D54CAFCBB249565325B7609E419BCE2F136756ADB46
F2BB37010FA4211F58E74D0931C6CE66474089DF52B9401EA0E26C19714DBFEC4F138D6A0ACC
F4CAB67C1AAC582A768819F6EB7F1591BB471640E8A262D8D6BE3F935229A8FDE0C762F89935
C88B847D7E7E6B15B2956AC4BC9095EDF740C615C9018579FB81064A1D68F6982C0CBB0A33CF
9A8BFC6E094C3F87BDE2AC70FE526CBC63672520E6B35070550449599914F3BE35EAA1E326BB
251D9C9EF42A9244CA8EE79FAB1ADAE983F83AF2A712F9BF9A2EF74B288A23CA7E958CE8C24B
A0C4AD0683306DA951071E3EE96C25CD8123E87ECB93CF760360CA98727A7CA23F1273EF4A26
EB148E00C231BF56A66F74FEAFE07322EE921C5DE6979821441201C46D7E6CFCBC313EDAABE7
ADAAEF5F7F2D7D297DE18B504CCB3C0B0D77F03BC9FE79394441267E5418523AE7F91BFD7389
D20F77115A4A9129C33531CFD99A2CA3F7D3F39635CD0EC256F7BB65B980A9353E9692BC936D
8AB18BEA370933FF01E8EAC03BC98F7687E754593E3E06BEE184BEC18B126F7BF3FD083F87CD
FC2C1074ED007432A6D797182114AB1C8E763F8F37C705584DA16B4BEE27A6B9B24746DF9E9B
71729BDA630ABB697F3348ADAC537B97AE350F64C8C8B05C82A49F8BDF4A2843C33BE4F13A20
1C7CA5B41823923C9D510AD2741B171E8506B0B79D3F18C8C363F3F043841940E1BE692B06B1
3774D4405AC2FF62876FDBF10D1A87456293C7F4CBBF8A7D8A0C5AD8DA6698EFD998F58929C2
919D2F8B4C52A904B618A61D4A3936CEEECCFD97CECD156C2A5979B7321CC4F1B8CB84B00BFD
6EB32E12FEBC812F0115B57EB60B4CB41D6C109D9D4C4684CC2E46F7A8012AEAA0D7EFFCCF50
57CD4EFFFB1679F3B1E8BCAB177A67427E3643105DDD8A6D292681CC9114C008FEBDC659EE93
70AA08E8BAFD8607A45721DF8F66D072BA67B863797C96053DF935E1950A7CCBE9F22EE34E2E
3607F1CF4BBA18EB34480EE49898F7DFE120A3523646C7693B6E809EEB360FF12283E6C67F84
517CC4794C580810DF85B855E394D7F1A35C8905D61252C16ED95E1B8B64062D122EA6217776
78D13D7924CD71666C191599921DF18BBF96ADDCE54DB9EE2DD1D4083EB31593B706542E8CFD
5438668747DD9234AFEE940B0C9EA6CF1470A700AAFF7C1EF56751BA9B10FC5772DFA61F4718
90C6911D9B68BCA77B2FC6021D86D68B032F1BA6774830F123E21B4656380EFE06E70A6755D5
B599DD09E4B1E45C1DD74F7523F447C5FB468A871DB7FD074305FDE5EC49A348A02DA990B1FC
5CB991A715FA79F49B4D32F601F102618731D98A10B305625DB0C0E0EEB02A4FB69A39E4B716
993CAF7222E329D83CB7E60EA78CED15844F3079F7821A44C27C237873B9729C0D690C31E52F
3B93349522C6A1DA789C75CC0D1059A2D1339A463ACB7DA3399414B623751485E9CCB0523A5D
0D42DDF2E89DFCAE5E6A7B743F7E247D171DEED57BD133EEE43DCF5C95EEFFE36B3440FA2276
EC0E4F99715067736FF688C881396724214099C6E2F821721EBDFC68F16F936A7CA1CC3745EE
9B127FCA1D9A338CB602B03655E8DE2111EA1371808381DD3190A5AB16FA563E4A71D2499E09
5EEC2749E67E532583D7BB28C595BC45C665F14D206480AC3D562C7DB8F3314CF070EB696FC9
52DD964704F7705C583517362364B2B1017C71623027FA35E90A24D7F5172B16FE9A88BF97E0
5576E582EDB08893B5E2465C61CA3157432A1FFEE7512E94E63060B4A5C43D8205DA43C6F75C
065DBDBFEFCADF13177C2B77011E121C1F5D19B6BF1FA1DE2A141C4B6210EC1F05DC8F30BB9F
EB6D9C22D6AEF88AEF4CE2C3C9563F0B0EB391CFE00DF55E2E681EA1707B2F0371D7095F718A
E3BCA6C483598937251CC43209701E55A0FEC0CA2A84ABE42E58B16B19A8CC1875463649B037
BD08E0F3AF1DD70348450784E46E23AED8305E833A81740513E494EC2F1083038404B3A79B67
9E530D8E1CC833F84FD29391AEA36D2B37D2FFEEA00E90D50D52FA2D9CBE5224BD19A4BFEBFD
6D3604C250544CC529026DD473B7E906CAC0BFD8B106953E4801768DD2F21A12B6743DC8E9EA
6E662EF88CF8BCE0E34F7A88D2401A80CE26D44B0897339DAC523C853953CB6A3794963E5CDF
296B979A20FB69A20884894C05E38DA4D3097DA184178185F72CA9E34E0B842662D9F51C59C0
D61579414E44F294BE31831E7F806B48A9C60CCD6EE051D4D29E406C6092F867EA3563FDCDBD
E1925FECC354CE0EC01E281D1B4360F3EBDBCDAFD217081557869C8618CE923DED375425B9CE
0A1F4A33EAEE378AD6A1177DF9432A2F140D5131BF576271A0DB8D1E74EBDB78CDE4C193A7F2
FD5E1783013DB6401ACB51B108F4A71B16C9CF57EF903998163E5201A02A137992528337A595
D9C17828074609B7380F9EA731EDB55D4F31C542B522B6C6EA2E25C8C562D392317318150D48
69C0417BE8F5EE48600DEE3BAD8076D861098A2A3B62BD512B4BCD48916497DBB3C90935321F
FC39B457220CC32348A2D2A802547D1F4B4D4BAFA402B8A7A7AFAFBFBD3207B046A576E3F039
643B325D84741D1D156F026F664F2CAD54FC268F41FB9DED61B9AB9DCDA646B42C9070F40635
A46DFE209B72EADD40049867E8B15BB0A927B1C51C31EA74CA99C4B06322DBC71DA693DDE3E6
86C7494D7B49701E8F2B8CD754C30476CF9BD5E0D5AF5C6D99A4BD87F1B73C25858EDE3D1D82
710E3BCE544FC397A91CDA4604E5DB7AD2D6460A31BB35C9BA6DF033A70EC0C6F601873D4C6A
3D14EA9FC616786920F468C2CD0EEC9D63E8D085D0BE593D8344D989BCAECD6F770F7763E0F8
F8938A1A26AFDA38A79A1A0780CA251AB2D9B11E33E394E4AB7BB1F459E9695AD88AD7133127
70945D3D6BBF673D418761AC787EF5159F9FED9103B28F0D5D86C4AAF4EE462228AA24BD5902
6DBA7831062DFBC34276C5BDE5EED1F7091A216D155EA9F4D9E1E4FC850EF02F31CF85EB5C9E
B8D4F5C55FF4147242CCE03827A0C60ABF2A727981B99891E361364BBE822A4A5A88F52328AB
182A459E5856EF9EDF6C835111E2B91A04D83EA913210E40015D3BE601C0B43E2E677D5C9CDA
5A3D2C405B67095F3FDCF973BDBB333D13693924369C36F5AE1117BC90D9624016B22A3D6F23
A80577B75562F3D48655DB8A537BF3409B92D2BD3B02B1AEA544636A6B2856D0A1A8DEBC43BC
F2023A54A3CD885FD9EE3FDA7F3435A911C9103F101A39B5A3B5166EAA666A348648CCDC9116
FD0167DFA044E6F3F73539FA3444FAEA7A34B37E49C34CCB3851F03148C78CE454712F42044B
159167701FDDD5B664196666BFCBCB7B0B261FDD85134D0A46FE319CF381A545B577D523894B
7492F632C944848EA6901ADF9DEFF2FEACD94BC30F6DB00A591CEFE205390E32974B78F82A6F
FA0C1E746ED0430F333FB242CC438E0E107FAA0CA1A4073224FBDB3AF21F6926B6C327F14BB3
680282DD37E809B2180B112A1D686ED5BEADCB5A230B890A30BA2832C1D08AA59A6E9321C362
EDD0042C1483BDBA5FF764A474E6254C16904F76642009C316A141E3C824949A766C5E7067F9
EB168A2F152BED22ACC112BFDB3162A697698F8D7EEBDF52BCBB14FF206DE000BEB437783D14
1F93DAF468B1A6A62CA6422E0D3FC51FE03209132E719C3A7DC6A1AA36AADE44C9F9B867AFA3
4F3C26129CB619B501BA4224C7FF90EF8B69650045C57D58D37AB9268ABE8BB62459917AAD27
D93969E9C089CC4F417A679BDD99DE84A400FCD4E388F4F156FEFB6466039FBE72BB3D05549B
CB90A7EC0C2C3565801B3A7A437615337C8DCA761D83A7644B04D4DAE67E00EDBF2B3139C40D
C3D470F8D476728119E9AB31D46B3FF3D6E34BBF653262ECD23A9ECB93AC3D2498F63193EF72
D192F98B05AA779B5015B6CAD18FD29B421A17E01CB394D588E37AB7F986E20E204A0F5FE062
24F53ACCC121F112D58A79F25C60A550A1B325BF33F568D69CA9A4CFB249096B8EFE3B43CD70
3DB80FA20BFDFD3E01433F2F69913D13C1D14031545DB4877AC7FE4F562322DBD2572CF994B7
EB300F26C3B53E75B02B5889CB0420F378A55C9A9B6BBA64CE698CEEF061349F8EEE5B3A4868
70C6A11E9E3FF3FA00E3480610A449C9EA48BEE511DDA6CD9EA3E4653DBEFB8224BC55A02F77
BF16E7B9879BD9AC48788E2FB2E237DBA707FA90CDB918E02CB6C3E49925B60E2A05A71546D4
9D1BB161EA5CE6D303FC1876DC17E24F47344FDF6029F63D8FE1CC789A7753E492F5421C8B7E
C7B777EC34974575B63E74FC255EC95F3A1E93C4D752B42FBC1B1B7DC52B3BD4E33102046FC1
E16B7EE6FD0411727965C75DE86E547608807E51CDC1E51B76B8F9AE0484488A7D21CF0F3B7E
E73F691FA048309C990DB12036EC5C299A4EAE7411759DFC574AC321C443AF71421B7EC71550
348EA60512975B17D6AD6A22463AABDD94BEFD3888CCF264E94A723BAD53E4EE0A32245AEA16
837B570BA36EB70A0414695EED42E02948C308E22FCC6D2E1BF714CA662F615AA7CF0B71941F
E08FD416DB23E1A2307575F66FB214814BDF38383587CB14F5096241A544EDD522F12BFB4864
F0BD989068BE6E80B36C06D4A3609F45A3F249353225D7B0360C438FF0E862A2F29F77842F95
4C289477F1654AA13250611733E6C7C531AC69FCEDBF29C1E6DE2D5CEDEBB77F51A6EA25A3FE
A286986232A2410240B9B7F31BA31A59C40A5882F794832097DC9CB0E806DB71677341EFD524
4C8C23A520C8267213204FF5F13E4BD9CE3E44C9387C17161ECC5D9C9F40B8DC4E6A16D93F83
3F07277E976FFB09BE89D1FE74C1C6E1CF5E21724F8B83E70FD0D4AE72EB2BCD30EACB81710A
C3A308F7E138C921577A06C8EC7293AC443FAD6FD7A6A1873C09011B29E0469E411358E7F5D2
74A072AB9F84F3C5C74C7DD8121084019D89479D44BF25B47C248D4859E9C46D6F0ACC65A9E1
403AE66E84EF3141D688FCF71290CFC65EADAB3F43474C2CC8AE995BE0F19D7C0F8A3E2D3E40
E2ECDBA5EFDD8F07981DB3FDC34B3D0140393D2CB0BFB72E821D01BB22F461CD8F0CA7254CB8
937F9F228F1B356C0EB3F5228A9337AA9E0B24D3BCDF37B2E2255A8DF12B1B343F8DF33908E6
BED58D5FF638584C0C4BFE04E43A4237CEFA6CDFAEE5507428543FF220A987E68C769D0440A9
D4A33739E9072BCDD885C601DD30771D731A7C57713BD4B8CCC0C3C188EDD8AC1145CEAEE80B
1BD2CA85D582F05799BCCD97B8547CCCD71D10892B1409F2D672DABD6F0BE7864DE89FC66F75
8F120CA8A7983688E0B05283B5371EF01F2A68B268D9FB855D7D7238B971371A8AB5F9D80E15
1C132A377D48704342146F9744ECD7AB4453D258A8719B8455EBE73D35A9F70DAB2FDD5D41D2
FAE8CF56146215BA3FBA4ABF8F98765C6ED70B6CA8AB6E28C61611741ECEB33E6C2958DB4020
2F258D78853A789FF3EC7AFC19E5348D8422F6A28D65F2566D046D7B74973685473E5CC0EBEB
A1C944630042E7296D81AC8CAA96238BBC09F3067A7D3BBC45B274311ABB8E4C580DE95BE79D
D7CDA3903094A88FDE6A8CFE77633E0481B2E67CA61E2DCF7872318E63A4134C0F98A472813D
4FCF98DFFD30736ECBB4FACB9C6FD9152461F90B736211E0AB68D5CB662BE0B511A1E60132F7
969DDA9B229091286F87EC576661A94F818B99DD27FF65A4C2A3C500FF9CDB4B7DF109DB016E
CB5A239A4CBEF1D443C48703F62905EA599B82F76BE0FCB01263EEF1EF411C72875DD0A7A515
7265CA3CAD3D27F9F9C20577A552E59910187A9D04F4002E07E92D8F5929FFF98442FFD6D3F8
EED65F2C2BE666AA6220EC4E18FFE0D2F3DAA680D4F270440C3EC7971DA783BF7928F77CD7DD
11AB8528A390318FC0572F13A5A2B20E5EBB1DAA9DF821C0CF3A34258DC56F872175F1D5D8BD
F14478A19B53E278CB4FE83C527BF56A42EACDF193C6EE25337CC2215016A7014F1532DF6711
D9B637A3D5003849A0881C778C74E8E5A47204BAE5374AFCD1BB8E901BF2A703C5CDA6DF6915
C9A93EB94D553D50D3F178EAB2F8D6338416539F225964B688BB649F4F148737410FF38F25E5
6ECF583F62F09985F94EC048B8B460DE00E58F4F238570B689A7AB307B7113814D5F3FF6CF28
0262ACDF7B46AAFBC234EC32A931399BAB9F2AB8B6C05B23FA2152C10888EA6D4E44B44E6572
1CA646ECAE52A79A532565371F141940D81923AD84ADC5C6A9F2D1D1EFCE1E53B5907122EDF3
DF1B69E2D9A87ACB303667CEBF95DAC21B053FBD39511DF938B33032DB098FA64FC7BC6407D1
1BE98402713B6BBD9027BA62BAA364EA172ABA41D3CDB8C6FFAFC5468F51644B157684BB51F4
9FB04A8A56A6CDFF871B78B413D8B7BC595BC8E81E453C36087DB7C092CCEE99D0D3F8EAD687
7EDC5E28210A35DCF3CD49C594171E2531DA1536F4510E0D51EF1760EC7B1FE195BCB5785C3F
26D3C3CAC4989C66F6F75A675ED979905621F8B814BE502C4C8A940BB6D825E27CA6633EECDC
0F1BF725448950A37BEF6ABBE0BCD5620EF0A66A736B7EDDFAFFDF62796577A1F482EC4BDAB0
7024AFE318E92459FD61A4277B5E885C50A825E94EC3E8AAF4292AE4BC9499A00FF14C6D4F74
2615F0F63A62F273218DA051F35A1A429E1B79BE5926C10C5A2AC38EA8A86B055407FAF2CD0F
D6A6B16F847D9EC7E911E436D1D597E012CEC5A08D98056D63FF4D16365A9033251E8DBA1EE3
4F7359FB1115EE681F78A0D9840FD88CDE7EE4791044BC3618B646AF915E316D64BFBEAC1F6C
50CDBED248261813749E1C0CF998383BC6454D6B384AD69F9A8833860DF4D66F750FD45E36F9
AA1DA976E55B0B06477F3BAFE5FECA828FDE3A373DAE7C2C029F2B2C4992D71AE4FC1804301B
35CA5E73DD0A354B53D1C74531A4C860CA8946C9C05C93483C0F315CAA8D791AAFA03FCAE03E
E7F6378C9AE14CDAF68F002C3F306682777FFC83ABCCF992C787425F604253359CCC2D30361C
ED2137D2F825EAB125A9F4411453292AFA0A5228E5B6B4B6CDDED786C3623F8D02BAE3733A72
BC1D1C5D8E6AD59A371A1769512EC26EBBB115291652182BC46AB673D016EC0F25487607FC04
ADFC072CD084E66A2D4EF87343C42A4D94CB9BEF449AF70BAC826C0688E26FB2978BC71DCD25
FAE8C3E2D96E8812F882FBE9E0962E1BCA90CE38A0DA87C42579B1CC21C117AE75331016B882
7A466609F215FD6B6B4217BECA5E741118E7F77600E1EC593FB3CE2FCD61C7083A4C5C9B4DC9
BABC7E573710341D678C527068533BD6D38D9D9C17C651AB8DB46418AB6A794D330C7D0C2C5F
4D8E6E198B47AD4410FE1E3DBF9CE0380D82BE729E3CBE262D2BB7F05F269022FCF6C89B2042
88DE95AEB246BDECB355341EB2E622215E967ABE6B6814E4F76F6DBE972688D7C2CEEDBE858B
967421228CF1718747CC0B5ACE901B98F4A99D7FBC8E5C675D78F0E822FEA12E8100B88D5F8D
86C5E048D4D33942BFE125D27F2A4CF26ADE4B16D4986CE4E8464F7FD90A20A162991146EC48
522D334120D140E31BC5DBC0C038F3ECB63FF9A2ED0EFC3DA2D7C96B19D6ED49CC04A54F33D3
65737297BA328E3D646CD0390EC55747BBA5248D44E594FA8389C72AA738A99DC4DDE351D381
D010A0F5FE48AADE17F62958773D1D8500819DB54D5F7A21A507F767F2CA63C5AC7C08FDF71E
65AEA255B971F5C2D65DD53D9F62D85BE99C8EE05BD698CC7ABB7E596FF0D11C51D0534DBB49
2B219763FC99BA557DA54C10BEF24935E45364D8CB1CA2471BACACD1D67A77ACEA885796AF2C
AD89CC2075F3B8BED21F9B56D11D21561E5752289352227E944A76F5FD44513B79A03F3639BB
F8D2C7F4B8FEF335A20482B0A3B401923458A4F963F1E52F94EAD00D13A5F0FBEAAB7826CC84
08635B28378899A05E4E390490F8D92A93EB8A105A4116A86611AC89F27D946E52CE39EAF255
FCE513D2B2042E66618CC2BC91E8C0128E8315624ACB66F2D48CFE637BBF27CEE5D0FBAA4B9F
99A0EBB9F9D8093C08BD4E067ABED9308AE286ECC5B0CEDD695BB863DA43EEF448AD6AB3C927
8955E9C1BE2A059BA2524352A720C49E5DB9EB8D06A09AF38B957F78C686BFEF9F881D906E5C
AA32E496939359397693AED22C868B2A0872FFD968F953B7C508AE04F706876BC1E165C26ABF
7AD0CDBB6A0176DF1564D7F7CFF2359BCC151A058C48D429DB6BD161B8410082D3AC53331C4B
57A527D18847EF744AB8AF983F3D22E35B8724DC460D0484F6E7470316DC9554906769FAF9E1
E070EA2C816A9C681E3E00BE2A1AB9CBDDC6A43A96ACA4F4E7359C1535E1E88E4F36056913D5
87EFE19E00D48137804DCF153719E8B7B80FF47C0C007D80A1C6A1327D17BDF5D8C0C72626AC
7E5F569E12EF87A2E142EE2261634E8210F72D92F64E34A2C15F7F588E78865B3D6A62B0C3F5
A3BE15C0754E400D62E7E2618EC5A93417B91A079DE49906243FDE354491603335B4BF6DAA07
98B51CA307E41F41BAF0BF79490F892CF47F2FC51560023DD15049526E134D67F48181F37513
05C34EE200DB772CC0DD679264B45A99F5D30C7E893FAEB3906D243A037E9BAEEA613596F222
172033B01EDD18C94DF6641F049102CED150C535C70D1C4C66805C5626B52BF09A97E5B53977
8A096B79166A592E0D5BB8950F7D28FF143F99495CC7C0778405FC7FDD349CF53686572F8921
9FADDD5DE8F3DDFD828F333EDC15F3614F326975C9FE749A6A2730670919B4276EAF9B482CA9
6A0CA64AF391696A78A377FD101074A90F73D9895C89D4008683F0759813A61714269F67B10C
082843A92FA97B55D2F9A40B8E4156F3AEBC7FCBA0773E00E781B80B07004E5B20F8C9FE14E7
DF6712A64BA22CB262799C84746E45F3F41C4776314C3F4A0B9D7EB83FEFFBEEF1660D4590A4
3A9373C08942F46DAAAE287A420749F7046742E7B6E15AB3A04D2B972AE73510F57DE8D24E55
5C438D0953E1C41DB9D6F6C12D2AE784AF55F696EFA024B5AAF5B3E20CD6AEABB356F33B6B93
BA8CDF2537F4570332C0DD0FCE1CF8E2FF3CC038FF272B1DF339CAFE3659AC4541F2204E934A
555AD9F1E9BA831481138A8947BC49B9062E71C202631CD8C856E87CF08278F9FD047325DC4B
E74EDE8242F483FED616AAE2D6A5DAD1E1E83F124DEC374D57B81DA43A0983DAA34AF7ECDDEC
60DBED7ECAC68409956A0EAECC110145CEB8D99BDA1A766C2ADE43326B29CD6BFA4416D9E0F2
153F4F9A969B033087E152AD9BB85A40479FBAC509196C99A4F0841449ECA6DCAC1B9F9D7B26
FDD6F7FBCB3CDD32B75091C5F96B3BF114F9610343ED284F5658752AAC710270945C0A41BC3D
DF3BB0B21448311E9331CD2706364E3090A1265A17B1B424D03B1E950C824645E11AB766503B
0CE70415D410AFAA5B33EBA7B498D80302FE982D9778E4845F3659254EA382964E395D4D0341
A9FEEDA8F963739E10CCC58BAEF8DD49A1361A0CF95083559BA32A8E5426C98142EC2E925E4B
382D5A531912627EB2A0D98A25FCD540CD5FC6DF156D4A5EB1E414DD84C16FB9C6945E792017
9130036B5F05F6E283ED715306CEA7ECEA13E281FD69E9A93B2BDAC310088CA3153323138D52
BB2DB9D272B6FF67EB59F3DB66F08D1F6CE77C4519977721AA8F532006BE856B00B33369FBA6
B980C420E34AD5B7810122EC90AAD038DACD3DB88CE061E05D12FFE44066C1671738AA913836
EDC93AB7E596024FB3498A29E5BB543A67ED3E14B9EB13DBA247325E70CB0E1FDC5EB3784DA0
415CFF2B1A089779FAB42DEBD53920AE48556E4F906F92ABDCB35CF8D53E938B1AD434904AAA
CCC9463D608BD4DDDCBB781F44B864E1703813FAE91CC0B148445B88E4749CB9F52E8A6B8F59
8D754BE58C22AA33D00597D22502A71DC207D7EBC4EFAB16F0A9C3BCF6F888698B443779236C
33358AC4FC59C2F5ECAB3ED32277FD98BA68BE767AACC6ABADDC7755B15C62B458A66086DFB4
64F6C7CDADAD1017B7F4F14D98EF09F0C709AB6C529D19AFBBAC325CCD80D57DDC19AC6957F5
0212F6500E4ADDDB800BFF909D6117961E6A1BD8580FAE0E33103618D4D0ED7AF5D04EBC3388
821C121BA2067E10816FD1DC7A75DFC98106C6E9105F01B599E845E0236258628B904DF5441A
BD12772594645537C75B20460C48B5F21FD02F73460068EC2574FE6829D86D6958A91A588FF6
09F3C9BCC2BFD3D2220E45503D0E5A0FC0A837F73351BE9752A659FEE027EBCB926F5EDE378F
0BD10CC567DA8A829B235B48EB7735919563136FA1A79F99591D431C768B5867A8D2E69E05AD
4F5FF1E34E6971EB4413328C45F3267CFFF49E498C870CDB50680AB42BCBC34FC836C1EFCC10
E50A43B648C88A7CC7D703389DAE2B835CBD5510E1B26D4D436E5F5FF8F7527C1519BCDC7BD5
FE20A390F484DB9ED9B91AE7C4F03DFB68B1F2045118F5E814AF4AE832444F60827AAB48A9DD
05ECD39DFC943775463889604A7458C324CD27782D8BF4B3017821759D70A344EB605BBA4535
27AA7DE48BE86D71C3477D99F41360C647D103666648A5CA008AF3E1D5CFA3B40AC10DD1E79B
302BEFF96C18BF92A086103A9AAA81E55D1AF9FC36931952A736BDF7DC57354AFCD6A964933B
DB66423EA58EDBF68618CD5AE35EC562F343C5915DF0551E54888E295C86CF31506CD44E8B32
24DB4AA472BD23BF94E1384078713BAF280093460A52FD49CEC5C2C29D91BF98064E53137575
260C5867E73DD117E814A1B2AFF8C497406A5DC5DED79CBE50FD30846C34D7841A850BD3FE13
2BEBD9852D9B2F1D7726559E1CDD292BDAC58EED6AE15D3F17B4AD0CDDE87B584B190675D27B
5FE5D0D471F3040390F6D65937C6D83DC34ADA9DCB8B2B401CB1E5396505D0AF8C33F1135189
12B0B959F3C2E8D208E1FF28951F403400AD78AC0E4E1456FE9AF63303DAADB9FBC8E99ED0A0
2D960E54C39B3C27E58198D01E358B2336A4BE0EB99EC56673D45D79E6706C7304C6982D64C0
0432335DA50233FDD28D4DD03851CB8AEE4F523BC43B61F26AFFDAC9BBD7305D389F508B3507
2C30BE43147727DAD9199881C7044B0ABECC5C64D7D3F13AAD67177D34237AB9F8CD77893758
E13619EFBB0B67315237F63312EAB8E1EE1E5A594ED963326BD2C6D54C50B8EE10538B4FEC25
16D138109D2D48849E015934D7E32A192CE4ABE5156402C3EE8A3A5D502CE829D40B9C801B78
C024FAE15B5FB88C7AC33028235330DA644482C0A22AD5444ED10F69B227DE49DA59EAC7AEFC
B4EE7DC0B5D1D1AEB6394AE1E0D9E130C1B1CAFC10787EB5AEEBC4E7235E6F5B1A991EE9A4CF
0C0439025EAFB59959C32604A640E9007F46F9136026D058B594B796E6747AC3CB6B14EB61A1
D03DCF87F05F4EDFE1C6C0DBF6C0618F2BA9D1A690CC811C28033815C699441AC4055E7CDD9D
2B91B631F7C3EF32648D2CA927186872CF2FA646630D4ECA09162AE9FBB00D1CE3C6585E4CDA
A971D4B7D4AE0D5F8DB5DA74AD58FCC9E3378E7B2D4CA0036FB50611C98FCD020027CBE5FAF3
11AC7A05AF6039843AF9FC3B830E0A2CEA945EEA5396A5DC74A465A0B6560B6663AC69E86792
5FB1A69CB553AEF3DBC53D8A631E87B00D48619E77DE39AAED7DCB68A7A4108CE2225010964F
C08660D54D73064D7CC9C7C6A2D12D7F5898280324A90128E4D0730FF35E7B93BBD350669297
A6214DF56A775A5B7E73BE6A972896E05D423F9E9798622B632D215812E911A93BDB0AD13C5F
628C4AC5704CDDF78D3272FB1225BD4E12713557A403DA937EA52D193726DC8178766F4E739D
2E95F14939270B6507F35D83E1FAD6C821EA1DCB5EB2A3CDBE3870ECE243B7F406CD6B5CB1CA
DDB1B98C32ECDAABE8672DABB042CDECC2869E895EB6FE13DF2ABD25E66ACDF07D402998DC54
815386A3956CF36458234147C90A39E7101E4BF2186153C63CE96F3F34499AE1E1C234A3357C
A2CE163106D794083EB36AAA93E85E1676CD94259E173FB6AC65D133B16BD1314B259315C462
56F294E37C763C5F16AF239738EFCEDC3A6BDF8DD79B34775709BA54296899FBE9A316485274
ED8363DA0329AD0F41C62CDF48D7A25ED45AC95B5E6A4E1BBAC56DA304EDCF14C008E3F0D306
C7F845B87BA80DB258BA7881695209352F41D78D316017371A32FCD84BF788B511AFE571F71E
217C0DCE3E04AB749D4596D0D34087540D4730C013796215CAA073A1B99733CB7121A44E22E4
FC2B1C052798ACAE0F086DBA8EAE791662949A26EB35613CBA94AC58E47F4B7B953EF9913DD2
C53537DA9C1CCE1474632288903C95BF7BAB47F056B62D11401ABC85B20B66D0CE72545566F9
BF44F5CFA099B66CA02A728AFB9877021DDF05C1245849DC6B6816EAB3CCE3E604F604CC7CAD
40B2C919DF5C92B356E0B81F6738A8DD7469A1015A4D6C5C6DECB0C3EAE39B7B3FCFD482D53C
E5C171C73E23AA44AD41C062E8C7857DE8B56561CDCAD550C6453C755E3E081273763F4E6823
3213A4059F6363F55741973356725EAD4DC6398D1D6409CA8D49CC901F6E9958974A7EE5C02F
9C426F11F29B54C316DAA3F1D66E0C9EF73624AA70D23C0F15448CD295589BC2915A6A6D616D
77134382687BE88B7C1B9C63C0E695DE5487A5A5162411B8218B1174F035216716B67F016619
02287AE5B384B916D2C1682E2A0664600CE5E494F13EE8204B267BF8E863072BC11BB5E45061
67EDE7ABA31F58E468D3F60CF5BD5A2A8721018FF213E5C84F672F6F2E651C4708A4F24C0302
DCCE4614233AC6F540EAD1777A1155534EA0B6ACF7DFEBC0C6DC49FC9692951F587CB8C1CF32
93328DF7655AD82A144D193CF8B9A274D27C22DDE2358DDAF79400A7977A1917FA10F445EAA6
260EA56720E322ABEEB790731031A345C323B9E2E220E9E9FD0D121475C6A7F2464252ED44F0
0D02181F1A5814D682F28C692F969DB1D834227CD4B539539FFA46BE32AD1CA3C9B4B337C64D
3E61FA5A6D7DC29345A44D0470E564AD61CECE8B37595D7EB3C0933457BE8F73758D8D6F38B3
E843C8D049103F5193B0E855D5C2DF1092085C80154C50FA825254DC1B8A895E0BF3F681C257
5BBB2B49E64A3C3E77794024051769CA5903CBB11FD3333656C4EB07D1D366D656467DF392BD
B9B9373E38DEB2D83A9EDDCB2699116E15B9D0DA679AAE82655EB917986E768788C6279D5559
BB5B104B829164CCE27896027913105AEDC252CD0BC68032FEB026C41792DF669BDB1D4BD94A
EA620CFEF970E8756B258FA82A9EB86AF25B6DE4E5E48B0BAB5D552326D8C0E6C57783935D7F
0CD66C078722682BDE80AF3645D4A9A7EF9AAB474929C1749186C309347DB0A5020865337542
550397B2020DC666B3339BA495F358AB8D0ADAFCC5A3CF7014AC94B635E2BA1779BD0C44AAC6
0CF3FA4FECAFDC876BBB528CAFAF4F577266ED00509DFDC52AEF8ECE25912C04B8283F6DA8CB
F712D5DF4BED83702A76AB73D0ADC789924A600C1B00761B986BD668B6DB3DE4008316053EC6
33300EE2E3EF9D0CCD3E2E5ED6A829CA814C8D127DC6F618D6165639C5CEADC8FF161F081A01
9DEF0F888EC6CCF12B69502A4AC2E802546E52600C91D51E70BD891C5BA957ED3951D84AA76F
6D2A1A7198965409F1EE699C08694D9852F4A97839956D8060DD6004B0DF827D6DAF19325FFA
CF8773F5A14DB92EEB033282A681B443B54F242016DAC22CA7388FB8D00DEAD2AF7F39FD58B6
F109BCBF96C58E46982148C86CA3BDBF8B61E8164B08F992744C67C636164FD62D68C25016E9
C672EDBD444E058D3CD9154AE39993F1D5F319D58991F9BCB03B34910A12BBB597C3F8712445
61495F5D94B92F3C6B5E1EA0254C7F989E033EB0DE0BEAE9676EFB0D75CA0EC0FD07757BAE8C
AFF29BF2E1C0098E6D0843A2BFA31031B383EBF4D12C07F1E3CAEE0397F7528CE5EB04C59535
8875D2872F19CD457B41AC5DAFCAECF120B2B11C0F3E927366E7A73BB033845EDDABC9C62E37
3117DE6A7E7D6895B6E6972D6C36634D46D55E0070E82F96EC375FFEBCE8A4E0981811328206
EB0F4B66E0A8087D0145C1D10C49710C3FCE4A5239DF90D0AC21A0B104D2505F7B5243DC96D4
912C9DEE3BE9DCBFD9F7C2A9C8886DEE4C41C58E9AD471836D2E48F5EA7B0FB04FF6D2BA7B8E
78AE70C765B11939AAB939EC9B9A025CF27923C7BD0455BB858AC6F74BAAE573B066943598C3
EEAFC7F1BFA1B0E5FDADCC763C0BADDE7DD314D186B413216FC35ACE73311DCF84D0FAEC0DFB
9483EEC8895FB678DD36D56618C3B125F7FF3B20F7BB8DBD86F52EBB08BAD2A73ED6C9404470
6FF7FF263B0DAE915E78CB36345989CCF84063CE6047E93A2ACBAA983182DB3BA114D80FECAA
BD2816EBEFCAF0DC6EB42FB47B3D2318FD557CF96EB5201BB0B265BBB77DA6922FBF9184AFE8
96B88738AB3F9EC78E711E418275B101F8DABE795D094D3B2C5F1C5E01DA37B4E5976CDFB56F
B459C8611AB2CC9081863E48EB4515035709F715F99FD62ABC2E495CC8D4F8A1BECB35D2126F
FB08594FF4AFBB82F793854D96A50FF37C24D198F533C348F657EC4726FFB648522893CC36DF
D25665DF44FF0D6465AB46691FD9445CD3290CF2455618CC3A52D8056F179BE5649A1B17BF25
108F9B5B5A3EEEB22D970D968E25E20C5D4E503ECE7BEBBBE696465191DAC3046B7DCD8C3824
836BC6ACE208DD60982451731E82AA0E85B2C6B0AF9B9B14848146B09C64ABBD9625F7A3BD7B
5EE015C8F5EDB3755B6356C3730118BD9F49BF060984259AE5D7FC6F3BA6F3CA2223E0782444
BCBF911885A0DC7765D705146B91EBBE0CAB032CA8336CE9133136EBE740D0A126F12F43B76F
BD354C09F5A66E3BD1C295A6034187E0BA7F916670B840F146D4681D43E9CE18387D70F44AEE
7AE7BFEBCF588759213263A8A7C4C3FB7C31E890F285F502C5E88963964556CAEAC1F31B8975
A9537E40C010380042359200B4A951A9EFFBAF6FCB281FEDCD940E10CEEE8F3428F1E00EB8B1
626DDC9C6554A8A7EF2E87319F3C532EAFBA30B322CC358C2EDE14A5AFF1FF1F835963929A3F
396361B714F352133A81406515004549A91A192127406BB9F7A61536F16B6E2B51DFDDCF0F31
EA338259A0BA5126D1459DAB06C8EA7D88816B2A750B4E4C6C45109CC8F0944F4A42371F383A
585BE96F72AD5884E8337582329971407AC1E6FA94D7FAF980550004BE9DA86AF226E74B6B87
CE02BC9949E3EDDDCFE0EAAEDF502E649122829A4B5A0A96BAF1AEECB528B092BA289CBE641E
2775BD74434CD3915082C4A36A898D2A03476A639CB3665B8621C9CA4B633E7B5E7FB699C39D
2FA9583AAA000B1B3520661F398E43FF8AC75221BB92A5A19BA43DEF0C89B9AC73F936BABF0C
930CF3F22EAE373A4C86E6356973490E17CE7163AE33583588D7B7D7E9D3CE84D68EF9C0B524
8F14BE69001DBF85B887E902B37813EAED85FD1B8610E2E964455BD3525F1E99C8BEC17AE486
775DCC124B4A3F2ACBF05D6A73146FF4BD922A07022D09CBDE835C4DC2588DB5720F6D73829B
6FE92E592679EFD487EC842BE2A87A503D88D39736BEF70DAB7684F29558B85BC5EC75DB1969
67063D4EA3942D18B6BB4842202E2EC18BFF6A32A85A82F16342F1C8C2AD3E0CB12D4E61C7AC
250F481725256C8CC7B29E35CAABE5A130FE0C917B568453805CE48C7822F8323B7B6BDE5450
065EA4A1A6C2C11ADC940D1DD15FBADAB619B677FA1710EB86CF4D7D7B0C543BD1825CF7A303
10C18C874C8040E10ADDD57DE7C326253C2A9F550BCE08565DE02526E0F014A504529DEC9086
AA674B94C1E0786982849905FDA956A2F85FE487163CC68A363C2D44A3300C0364D66824F31D
D0F11EF7FA7553CC42FD8961BAEECAA0EDBD70D3F34363147328B558F8247BAAD15C994D33FA
696AF72AC2A0C8347179B041645DC46262A64D3983C46A3B460295B6AFD8BB2DE931BDB27A2E
94F23553F1F87C2D47B88755575E09F50499D1CD6387C16C11399A6B4BAC761E80B973700D4D
8E3D599119446C9DE410E33AA6D5925E8C4947533BB2709B9B1D4D0B96E74012B9CB27A8E139
1EF72870058850227748AFBBC55A03A79390B98AAFC2869BFBC9AD0D171AB701BEFE311C559B
3865FC0C1055B3E8E881A69FA630EFC7A43175AF2B55C9DEE9BFF2BEAE961861E45773E9E377
35859983B9603008DE8D569FA9A19016C9D9F101F64C345A4ED17113DC187584C1AC1CB75779
27847793C8F70C544D329A753AAF47AAEB5E6550777080224C57FA44A44CE4B16F7AB6A3FE74
368F6C2D0F8DF4F3CE6B762E43645AB0996894B358861C4927C45FC1CFFFB7A752CF9BA3966F
53F00A3B26A394BF92094D579552F79EF2531E375876E52A88DD8222317318357FFE48D43A58
229A93E7D6113DD47043EFB48C85714AC19DA48408000C866B7675813786229A16E5789F73C1
C16B876A790913DD2CFCF92F9C5C31A33EAAD8F368D6531C06CE189E07E9F1CD61AAAA3F8291
A61311481E5EBF9BA45FEEBFF7BD242FE2F018AAFB62A4188435C46FE68A7AB09AA8C16B2FCA
98920B9A2D7148603CB336FBD6B08EAADDB6EEEAF325D25C50F726379D9DE1618C36D2A1034A
29FA981B94220D711E6BA5DCB5CE7EA16D7EA03CBEEFBA5DC585E5F8BC032FF17FEBB2879E61
C079F9B90D0A0B6EB537480000352A63ED828370467AC526F861C5CFC6E53E9A830775095732
39C1D5A349FD53638689132F831BA29D9963A7497C2BBE933FB653110AABAD3629E31A7CB3D6
D3875B45B7BB8F62D7405A6ECDE413D365ED05E7DE1D2C95D46783A8BE9D1B61F24191A11190
78283800DEB44A0CD447D47581972001497FD5D9972541B6BA2CA719A8177FEEF3A1909720F0
82C42A5DE8A071E16E1BC181E34AD5018131127FBBCDA2A9CE8B9F5EB83CC59C96BF0562E691
6BE9D99779D8D5294A04AA19D8DC839CAA42F48F770F60E918C593242436BD1DCEEBCD354F77
E462FC249037B0FFF2EE093A799010800EA48DA10C23B02DC20F3C3682B32BCE8D7073C13F20
AC232A6A42A4A0B5E995B1971FDF05DBE37AACC0EF62364C466817274496CBC8686650D48005
4A10C8105EE447E2347C5CCA657DC944FECDEC1616CFB16BA4442D08D7F6B8CC69B38FA05211
3213E8BA2990BBE7E3836C167D2C8FB126FB7CFBBBB28D33058C595CC6A16D6FE84BABE05CCB
4BCE0B62193E337E8DA5320F29F752F03A92CD843A99BC7A1E8EB449B0C95DCA19B9ED186181
2C7ED1F2AC7294D227358A5DA798D7DD314A601A3BBED33797C6D571E9CEF4A29FC421D2B7DB
70A7E92EBF91EE50F0ECF2FF63C738A713D1B6D1C542D5C6D95FA4E9FD16F4D219CA943317BA
AB091D2021EBFF720A5A81CDCBF5F3BFA3A633D16F4560CD3CF9BC1DF7EA6504A3E3B9377E98
69E3E149AB6FEA0F80287C4FB26CC5CA6927F5219A8379C58450B7525BF017D72F4CB5611169
C7D001FB816109B334060B0F2913BDEAEA69FF36286C8FEE4BF2CC7C83505FC4B7DCB29AC97B
3682C48525E038E5D1274A069858E5505DC932C5634EFD115E02D0343B75907FE80D7D8D421C
E40CA292140E0C0F3D79161C618981CBCCC0F9C4545942DFA182BDD45DBC71B8EA1D79F1EF51
FA88D64247D4D2D3FB02F4D908FFD1A763D1383F7F54606269C4A0A6C8C82A01F8A40951DD14
1E4833D97142AAA9B0A7E1C28DC578FAAF9926CEFDAFAF084D50573395633EE6097B2C8AE70A
16F3191405ADB7CDA9AB344D0872482F6DB9969CDA14B7E70821B16B0393A0431332B925E11F
44882286EEAD545C0854CD41BE75391E2A537F12C1826BEEFB1E13A9E40995E2C20C3E330C99
3FC40DF42E4C8D9F09DBE4F5F4476BC6ADDD0377FF3CD6A5F1FD26B5C23744555720CD7902F3
4407FC6F57FB83CB095A8703C9D70C96C50FB522AFFDA15AC3ED668A70BE3E1038125F57EDB8
3C4A8E520747370B6131F6446EED8F68177B4D3A06333544969D04BC2EF75B891B943A89E011
E078D01940CAA9E1D4010670DFB80B1847BCF9578A6B6BFAD675B65B31F8B07508AE31E6D3A2
6680B9CF228BF61514496FC2C7A2CF0A635BE96383466226FAF7A8C3570B3C55A009AA091FA9
9F71F8A4E82833428AE5CF0C5A585DA9DAC86A3EFAF1C6C31FC7FBE4395A58B193311F67BBE5
98F88AD884A5381F82498AA3A2F9448F50A604D9DB2C1F88B47AA783A82D6D0D45B2334B4FF4
8C8DC810751FE68DB2F04324562CAA35C19A80FF56911399F5ABEB971B982745EFBD7B10EDCE
63B5E490925781673DEF91F3329107936028E85F1F633791181217E239A2D4DFCA97171812D2
614131D19115EAAC6550184F973D439D723F2C6B80A5678EFD9FE5FB2526505AE8968700B352
599B1BD964EF8391B3380E90E8FEBAD06E4545C0101714BB2784ABD7BD7ED8FFF02A028767A7
81A57E1FF6543E996DA730610FD000263EA263F3C46D9844F4EA67C39701FC39E54B9F7316AF
609B22171C743E7E2FD2AAC70FFAF84692B1D25735E95E45699A5E15A86A7CE7BFB7C51468C0
9D239A5145802559023DE368135B52F4F299A4A3272C3969DE888202BC1E99D1990D2AA396A0
E2230C6D2494E02AD04E8697E61E0B9420CC90BC0FB687AA27F85929FBCCF6484D047C785284
C777BC07F1C7F558FDC170FB0495D1FC65A50A33A06A061D718391E14DEB33FD37E7D27E47B8
F3C9DDE4BFE43866450E86105746D10CDFB11E1714A0B78158517AAD1EAA5847B37208DFF3BF
319D87184B82A18ED20D07B0EC25A1D278BC3840614953C1219ADD7C21998A6BE45126EB61D8
7BFD5D1AEF287FF4B2724025DB64AB552C28F0CDDD89A04BEB667988CFD5ADC8F7B1EE091086
C2B31A30A9BF56B671C81FE10DB4214FE93F3D80BC6B0E90410E123B17FA0D41E5CBD5355C41
BB9579E1EC93177D3F6AE798DF9F70F9DCC6B541D5F4B3C6BD6983CC692C4448F91A730BAE1F
278D700C45A5AC32C6D5BDA96AEA73C95BA417A55AD76FBB2C2A47C9896EFD54CB4F178FDA18
7DFFAF47C89D5541C6EC74BB505C38C34CFE95FAAFB26EB9D1BCFCDA8FC0617DA52939ED4DC5
B7616691A71885858DE6B6CB6F6F742B4A61836D6CCF60775AA0C5EF3BBF7B007F4E2053B4CA
B7F223C96418426367FC5A833FD2B1A388F3352C8B390CE596B9CAA79B9D77CA202041550303
C76625B527B29F0446E1E18B93ABD527D537D927B9EB1F403C306B9CC3003CE36ECA033B7655
EAC10B1C2AC5FE0774574D3BB4718039E498DFB06E922E3CA571282388BADE3E55CBD711C20A
93FE24BFB1EBE38F0CF7E1627CF8FD3CD0BE08D8CB4AD52BDC53587BBDB53362D31E8B0CEC96
C7F0BADA54A0BEE96C1C40B1D8506913E7EDC80983683481E8A3E7B049FD9549F422945CCD41
B63953C06702215DD8A1E466FF3E2E9B97F7A96DF89D3078D5AD49AF9480FC84BAFD02D06B61
DD88963E9AC75B42DC9B255A1C20594CE1265AD4DF4C485B3F73CC59A4CA767B5F026ACB27A0
C71BB2E92E1761744882DC892D4E53297921A27510F2387391BBC37710EB2589DD6CA1784043
F4E5DC2F08A3E1B9DFF5747F69B3A6BC2E142257F3DE54EF93C57001539DD6779FB97029E17B
9ED9672CCDD7B0286A3339F430B78BD1DE5730F6C46FAA5B7B4B6213C3BC8671839BA50DA8AD
0E47890EC3BA78D1BC128CFDBFD11D59D3292B277E65FF1BFB343F84BECF9130107326E4043E
514A01E05BE59423C44CD4366268650173CF594316BD18F0081F10F72A665F6E0020B773A904
93B5DDACA8ADBFB488D5854D1591170347CB16EB4A426DBB7CAC8576F074017D3D34D98C5D82
E84D52071C910929E417412DC64D0F5CE06535FC94C62B61337C5B27F4CA50B4F516775ED8CC
ADA4C3203917AF8014D0E01F9F5C568FA7668C26EA9E085FBC736B2E7C607DB5C0E983107283
FCD701D025D4EB2E1EFEF45B9D2CF08827D53568598104724FD6F025C50C97D182218E939B92
FBC942FE6460AB63CE07F43189DD38745A93A9179DBA460173BB3715B145B74680A9AAF104AB
04B6B8C8F5803BC03458FBC3AC036BF4F48894248048F6A81DBD403F12C31EA4736D0DBCA37D
0F45A264AF161ACCAA64E645D20FD10856B063F83B8D079863F4984840B937EFACB021D47BC9
4B1CFB9DC183247D25397CE41FB861E00C95FC77407D98932D08C42F2393C8B37EF6357FEFD4
D196C4BD6FBC414E18C4AAAF1E54FEB3D81F6D5644EB5759EF5440207410464EFABF54645132
E798DC10B068258A3BE66FDEBF1C1D428D3381AEA736336FEC6E86B56F5A6143F74E8BDB62E0
F9DC7B80323B3EABBEC05D1BBD6676DE2E2543CD37D6055E88074C4BEBBE53CE30241B46F82F
635A1833F41888AF3771414BB943353FF865DA76E25BE7EC2BCEA61A15F180552F98AF07333F
C03749598AE8F3D37916C33DEB106A2C15F21989350F1DC372C831FDD25D104E82F05B7A1022
56D9F8008E23942E3F9AABF89D723BB624D0F60CF559CEF6379E552911BA014F422801B50B15
AB9FDF4B3311A2D79DF0A820E262EE4140BEF47ED964B1DC7FD55B81E00368FFFBC63814E3C1
46CF77833CCE07D69C7F1DC7189171484CE5051817AE7BC7B980EAE9A2B0502260B19176564E
2D1CEB79CEE1666EE85F29331554D11037C8A79A7D53948A300EB7344A824338CFE73480989A
0318FF63A0428C8134A2C754E1F5394EC300BC62989D2C9FD52E76124EBBAA3576A735EA45A8
7D8442782A617E765EC3D3B48076A97A3127EFFD10E46ACCD9947728A362FB83F8718B98331F
9B84DF8C270F7EFDF2758C8660C1C0F7C570D86FE15BDEC1D91CF8C1A417C9386E09C548BB40
1EC4DB99EF40CA62CFD7A0E09FE111C4C72674254B5AE6E778DEA51AC7E298ED70727D0B85C0
FE154538A90C7ECB7E1BEBCAE32F2DB9016A00A6E3BF5A103EFDB3FE8B0212049F9D79F95ED6
45AD3D53658F1E0AD84237D3FEF48579CD86A76BAE26EEDC5DFDC3ED94C434903A6AA1706DC1
8B91E782B0F31DBD64358D6AE7EDB7E839DC973CA173C564C92FF13E56DC206415198DEA13DC
F9CB8A67AF542EFAC923369061A76351DA95DA7E2E95FE0E245AD0671DBDA13EFCA30A654C37
320B4D2E7CC9699C634D129622DF340923B7ECA09E7B5961BB33ECB62C85591365A70B93CEAE
D2C7CC0339799783C1047DF648349D9C800BAE1443589F423EA385798B3C7BCC72CEBCFD2BF1
731A488365E50280ED9603B4C51931F91920DF1A96BF62C48282E4046BAECED383604F06E310
D9CEA008AD5765D374F854FB5FC4BA116D732439B37D8E391DB3F4CFB4980FD6747D3E86AA42
5A5B4EDE03674F404026A74B61940470546D80F7AEFA98482CAC4D8880AAA329129AAE1831C2
6F91989901F672B414EA6DC7D8468D112521F57CA320DC8CD56C9023C496CFEF9588778D66B3
79C1AE217E9B4706BE2C7BC85CE7E98C7C58189F994450AC8ED2D2B153AEC4ECEF5E8C68866D
27E2E77B7760C8911753CBCE4994EB7CE82E6B73E3E3567E2CA44FE75A109A4276A6E7ABB0DB
D00B48318BBBDCA6A7D7DEA749995868ABA5A1FE50BA244CD047FAB144D67378E0B21A5F3923
1E7CC4AB9CF010432AC20EE6159934FA8142A2166266D0D192A502790AE0AF11ECF3C94C17EC
D26182D6A2A45BF785E3ABC677487BC20D52EAA378AC3088706D9B19D7A52EFB495E34E605C0
0597FAA503DABFF584127C2A479075F89497CD7A2D54D02329B81D01C900D18F80BA46D4F7E8
A464CBE141AD02A64951A2927C8FE8F155CD6FA4FF3A44412A59DB72B74499D0B52486F55672
F075CA1944073CFF76DF0EA2BF64F534BD3EA581E956E102BCA1029EA246B1F08731EC931F1C
0737CB931279BD51E31F83094D47AC55D969F50DEF8C9A2BDB3E340710C2C1337986BEB1E032
FB9BEBF692A5A42DEC2224BEFC772B8641E0DE28E4FD6271DECDB95156908B4A53E92F732888
CCCA9650A5496641BA0673F9A10C2E8C544E76D33E84D1D2CDCAA23FD55BCC7E2969EC01C009
F0F7F834796BCCD863B7F1528C13FF1C499E6DD8BB4BA671DEC515FC9EC081BDFD97A9631189
3AF9E102A1AE63A96BC22A2E8A2ACDCF082BCBA6482285E0BB744C99A227A18179E661F63BE2
6E242B3E0B0FD2FFA982A1C4E7F051A66204C13A59E66833CE590439C9F26356C74765BC0CF2
09C1D89E2893F017BAE39FF7F01D79ED9A99A43A3F6259ABC9822BB01BA93EAF77D03CBDC507
5860ED4BCEA4378285716DE824C71CBF033015522AB3E741AEC821747BD635BADA9DC243E58C
F4D8010383774F9F3A8D75BD5B9B8ADB3BA2AE89772743FBB4713C46C30168BDAECBEFF476E0
C2E6BA174F9301DF9B295BB213D3A733E4B5D82D24FE579DD73D87D647AA7CC0BB6AD46E4FF0
1D1BD6B8A8EAA59855E73A6E6A0A9A800842F7FD86748489E1B52A597F23220E6B1DA30A92DF
4EEEED744F56B5ED811292D9C8311863CCCCD7672CCF160851630B01F805C77893DDD70307D3
CADF4E259D25DC375C0F89CB28B082F9ED1B8D61E52F01B7F66E401D318DB7A93943C78E4788
6AF256611C91C11E628F9AA71F7553370A97D2766BAAD7F9E74A1457FBA25B6A2ED0750694DA
50F77E4B3DFBF38AF5983499046732BCE1CB3F435626DE6A7B8E46B504A80D1EF0EBD4ED0780
B0EBFD8C792CEA07D2F1B7E2A63A104088B87DA1E62029C2741C5DE63CFD9D12B4C5212ED702
2B5ECCB7DF7FAF85E1D5C4B82EC55795DE8FA1E4654B594B83069E0692FC4954E6D0D3FE94CB
574FAC65CE4ED497386B16304392EA2DEFD78C6A96BB53BBAC50EF7AC097AC45A902B39CC3BE
09D98F612897AD7D1325AF2AE4CC80716BA062243AC48DD0D90D86DE3C88B16B4281D00908BE
72525F69B7B286FE28253C4BE746976CEC1DE175B3AAE41F3E56AF915A047DD0CDC064623E45
3DB8123D652CEEE41B60EE7DB30D96ED641CCBDD70570C5482A169F1B9EAC1E410B693301C0D
D765AFCE2AF327825CAC271AEB79A9FF4691830517E26D4682DC30B60AB2555B39471CCB6F38
AE631E7E1EF89FCD1847A24206592FF50BFC47C434142997A4B682DA77300BD19D65AF7D2B83
DBDA5B95903F220D1A2D90A19819607C481FECB5921DE9099A60150A1CEB1A7723CE8B182897
14C1C181343EC220B929336BB2F35056706DC481164F581BFB8B9492B4A93A76F4227DE34613
379B40D8682D58F56419B7B4FCEBB75E58D4D17BC1BDCC114B9E9AA0CE37136B2D92312A4064
3559A8C8A2DE53AF09CF1BF9F978AEA6CA80547EDC97A08A8677BDB27A599DC6027BCB206027
4F5034AF37C15D737307BED560998DF21BE030B0E57C4D03E2CB2E3DE42DAA26BA760EA72798
15E6175A6E98E496618CB4BCC6C071DC2CD94774B5DBC0F912A7AA808E8F4E92585D0A1BEBF2
259682257EC17A792283DFAAFE2E93BD4BDD75C1BC2190454B2DA333A335CDD0DCEC6561B83C
F0CCC9AC09E3B0B1E2E108F14B500358F8FBA4A4C3FC05DEEFFDD4F8BF2D0CADD592F37933AE
EFB253C717EDE98B3C870464382F1D97043A039E62024CEB9E25A50834E1134B4C553442B5D4
E763B2F833D494FF6F4F5FEDD022066AC62C41D32BAC09CC0FAA9F00CEA1AD21FFD7B62580D6
E4973EF82A0A88A94BA3481CFC5541B1AC68E633E53823ABE38DF4BC11DA9E41B6BFA4671082
CD0FA20DD5AEA26151A947F7345C69BDAD50C344EBD7D52C13F0ABB42669724BD7DCACE801A3
727F02B2A9C7452C890425F74EC7A473B2F6CDDB89FC02063349096616F0975B3F1360FFA516
2B577D556C21C1465B997795313DB5AD01A059D074D5186E5A039181AEB9281717D9FC71F2AE
7C423303317F66D2C145A432D40EA79B0CB5EB426A4DBC2548439630BD49C09C3AC56AA8C857
658BBE3C345CDBE60786DC1BAAEEA1E8134C053BFF0239C3B22D9F9811F0F986D34B10EBAD06
03B099E61A27F5DA9D88B88C435ED87C4906DE206849F5B4427EE0439CE2C99B3E52EB634AB5
287ABB15154D08932C6C360D85030A92BF8DCECAD523C123C7D992F742823AF495A83C4FB384
07E87946BEDFC719CC3998D3487589D773AC6DA3078B06CD5ECF77FFB84A96CD2CCA241B84A0
D35B0B340DFF221B9190C1AA2D6ADA767A0CFE147E3428CAD1C93DA6F3A01F821C6A410CF69F
D03A2E46F17A31DF33AF3FE25492C6EE8DFE79FFB29561F92F50C69B6FB2EE2841FF6E3723E1
8F86FA65CEB3BC0D61E2F19E9962320AA05E82BA9EC7FA6DDA9EDB2EADEE478C2DA6951A226E
BEF7B2FDFDEA854E541A449DB75700F057179623C32027CA181B1C8DD6D83EBB8BDA521D637B
32D7BB0900135F61D72BFC97AAD5CD3A2AFF218547CB96386023D3FB9A0B86D9AB93ACDAE4F4
EB855735357B77A24EC5ED31811FEAAA2F93D6E4CE512C9FE4830743BD3082F52BA17E2A4CCE
B5BFD2C31099D852BC1D1D1D4CE92C95B1868A8FD559E2950A55A8DD30ADB1F0AA7B40C90064
2E56C958764B81334AD25386C2B94732865805B994B5E9949B7B59FA4E9E27CDE175106E944D
0466FDB085A73FC4D329EFC235F368515BF6A5E9460C9E997CCDE7BB4691AA903911E9A414FC
8FEA294185F8D8D80A2A1359F9707121661201A72E571810F9CDCF792C05AB01AE9C0916BE20
70C264B0BAF34F63D78DF7CEFD0ABEFCA77639BF25C32FBC143A000E2CB1FBA326DECA8B3267
1AF989DF004E1F355B4FAF7323DA6CDEDD691C73F44CD381644C8D6987161B3A5ED5A36CB698
F94970A472A32DA1EBC8074DE29A2D9967F7F3E656DB600EB06DAA0778478AB53B653D19CBC0
96E39945331E0D325D2667226E85F7D5E3442E70AB51C294B8EB95EDB631CCCF964FB8FDB8F2
83D6DC2150B8C1C31F7A6B2990CFF2DAD2CCE88D8982C4F01DA6F41B271F4D434ECEA79D6A7C
3408D986DAD00D2173D387277E35095513A67DFF237C7D92B745F0ECF708B72515CB9B695E73
B321247A08834D084600B3EB7707B9F42CFF1205814C1D788E3BA40D49B97F15DF97173F1791
8D3E4DA33485081791990389E2EE7350EC14E7D2311D7EAA03718035BABF963053EC12E427A0
E503F8D0AAEF29AFAB22A7BA4410CD40626C21D29EEE1B4C5B632D68859D314670891F87F097
E29380A0A248DD3C0D940F119BAB3A42A4D5D62990A03D2DEE622E14DE8ED19396584DB30C49
E896782CF4E451269BFCC00F5525B1AD733C068798F41579CA6A6CCD3AEBE7DE7BBC0739B45C
D693227933D8F36FFDEBB558894780FDD8C2F58DEC0AD78ED417B05E089BF1C3C9FC389787A1
F510B7C8F103B2FF8FCFA06AAA41CB2268939A1649976475B1B3C90D2A69D30EF7D1B800C8FE
250FB605F04FBA5777760CDFF81066D7A7703574B0407EB78953DC8A21EA0864324E65C75060
FC889F0AA8D26A6342364972E530CB822AB91393E298075263A6F2F31C2CCED33C217AA41B15
E0ACAB0F88706B40B1BC490D9304F588C2DF3331B47AF241D0136216A1FD8869EE2CA67AA0B9
F3E0920F815ED5F91BFB5B3701402CCDF990D0111254CD4000EDC94F1960D511583F82F28F71
C30EB44E1366F83F98B8CE38BC0A620B07B49A0776D358F6E3D3EF6F145DFF0158FD83958340
1753FFF11CC7752CA1813CE28D9266AA71BC27A6CDB2C3EA9BF486E4CE62A112C65F44649D7B
D68D8B1D182B1B7D25CBEE30BB6C56BF8FE290FB44946C5C7C5561D6C24E97137E915449CA81
ADE634FF781CB95AC4C43EE88C6C8BB0A5FDFF6D0BBBFCD5801885B1BB4F42761B6F2C117BB9
0058466BEBC36BA78A4D229352347715965ADE47FDC175BDACF31DE2D37EA1106E0EF279DA2D
566E42F98FE6E5FDE8E3A292DA9B327541B7CFD5D60538874042DA03B15CE640EE2D940DDFFF
12EF13580EFD2EFCAC2E779B9EAC3964BA7E6CA66E05CF3673C49A18E35DF6C69F9C4CE16EAD
461BC5B09E9FC35D0D66DD4FB6D33066C8B15D6704A9890435742271EA33FB6AC8E5261C2D3D
B0D884D4ED885D5D4635A4E4898BE0EEFFEBFC0BA8A90BD92BEE924078802FF82FF9AFEE85F3
A4676BE2300906B95000516056165942CCDA64E891325DACD9B737505039D2520897CC43D9D4
04C299A9EE3884704408417D64512D9A6A2AFDABACF56BA334C51A72FC247DC3A079E3133517
055B607ADC13703FEE0DCA0F3F8DDD598656337980BF58F3AE667B81458D7D539BBEA00EE1F0
FBE756A22CF51817E7B08A7E28D2ACD83B912365AA69EC031C135A5160FCC55A5F9EF4D023C9
2C2F45988899B1ABBC1C8E957C2A416B1BE6EB1BEDC273B3CC91B1A220BC40B96463DEF958BB
E5B6E685B472E81A125263816FE2E4165960B7851EA8F65CF61AAAF130C104AB6C86EF0493D8
06386E889630FBF6AD9614041D92D35B5F788B63EE458EE2C6E3C06C60CD1F884AD3B1455043
757E32E0A35D910C2FA33AC3ABEFEAB3616C3023179FD264C8D3155DC6C73901A109ABC353D6
64FC19A09BA716398118C94B5CBDC6C23364CBFEEC6410AD2712EDAA9932769F4C369877A832
359D078559D1BE39204AD8B6324806AE945E18FE20F6A757A0470A2667BB7284A9FBF1B343E7
26DF689BF6D69574C6E63572E9532FB1E38BD046936D340C55EB8E14FE2E80B3A06D4B911C6B
3E8333C36B676AE8986469295CDE55929A1D1D767476CD47557ED438BEC525DE2D4B3F55AE52
A6FF18D00D5A1E1ABCA167A7D8B6DD2C6BF23FB4CA20701C9869CB5E930156DA33D3B2FCB704
04C0DF725D664DEB78814E17503502639A8935DFE80B8809086195A7CC4C354BFCDDF7798EDA
B74522BF447F2D4752532FE58DA8B5AA1C4484B50CE37678F001A6AA77EDBC7F0E2AB2B65E9A
463592DDDBF932A5141E9CA9F108ABD76DE7C6F73269FD00EB8211F3CE32B92B788C85933381
308F912476AB352462CE1E1D98FB6EEA4F690E0E036F3DECA9CF14351E24A41320B229DF0600
C764B7E09984E96501C18EEB9D8B9B6636BF3B6E7068581BCDD1DEF63429AFB5AED8EDD44646
A6DFC56B4F82F49D5819CDEF9A6F08C06C559F07D3F09C2B5956ACC01544800A24D0C22B00CB
B1C06B119521B967CB622981313C666AFAB4C96817C230807850620FE00BF98BE25DEFB29670
CBC6144090BE418D8263C478D879BB5EF72EEDE7207CC7B2DEA21957E9C476608ABCBDEED50E
7D58160952EBD4E840D604D28D68292C556DD79340BAE75C318A9F0B2F64F3616C680235BD7D
4470B7E440BC8B37F351780AAC3D311BA51D56CB5267FA2C0C45354D73FD084635552BF78898
E2BE90F5D7DAAF9353F58920A0FE0DE56EEDFDEA94349D207F4A5FFF48C14C6BFE03EB9B051D
28BC950574FDE10E2E5E7CC7B4D9282E005A2174C09C62ADDA2E15F87360D8C02030DE0B16AF
093FEED4C409B908426705DDAE110AA3ED8B1093702D8A50C08C2358B932E9B98B0B6E7CBD13
7B6B2AA51CA68DF71980EF797FD483F8DEA3E44357451E2B834DD0DF380AD9EBE1A974F1DAFD
E3620FFFED6385B1132DF572CB35C705614556BD07129C02909C2BCC8C5AA450E94EEF375EFD
8F77C0A8750C45F45379AF43A12F288EDE4A09358C67ECCB2733446F2A7CD0ADBC989B21D5AF
B11FCCB57BB350A39C13B3970E9017EC4F1E0C2AB7FE6310A4345D1934FCA54B386305F015EC
87CC15910C323450E1CB60B5A8E0DAB68412DAFC511811D7FB2CA08D9338A85BFC050E171DDA
308D4E58C9695CC8CD6AE5B14E1E5C47FC30E2F38D11C6F4964FD16934A8FFEA57268E489A33
4D073FAC76196DB7B3C8C6D4EB1B21171BA9D711433DFEEF3B7BC0A9A50751154D77EF7F6C6B
E0E35FD0D983A5C03BBB35B7AFDF952A9A883500A80BDA5F65CD7AAA71E5ABEF7260A089BB73
0A5DBDDE0A86C1E1A8ACAF76F998EB1755A0EDFE1207C5692C992741E653480788ACCB3D8FEA
8FFAFB73650AC8A8C349664E92A2A8DE84125C75D6155BB6165AEE20A0A8AC09EDE3A1FB800F
6FDF0B4B4214FA222A5CC6C41F7F7763891F5D578B6D989EE6FA56D8E0F77FB09ACF241A88F5
A24D4C08F569C4A305162247216455C4BF6E529128081B10F5CB09F748B8E264ED4ADC3A950C
5FFAC368799C4C031CA888D31CE9386986222DC3688F1C2282DD221F7463EC3CFDDE84651277
4CC9EE1B1A6A2091355B09A33D4CA85382378E5BABC5EB20B1883BBB71A6987AA178AA4DC237
8A344B5C6C3E214314C9FF3BDAD4563FBE133FD2FAADC70B5E36EC6DE0F2D757D49B51C623D4
2F148F31D730A0CF5953840E388B8C6F750E3DAE0677A00F78CD81EC1A76DCF0833DAB08F3F0
17B60777617649F85149C20FD9B13DAE3EFE3E8F1C7B801C5EC0A4E2ECE7CC009453C8067465
7D535BF0DBD60E31A2E9361671EBBD8591034FC5D77951CA9ABD342D1B3EF381CCD243F083B3
CA5CD79053A4B1EFE8A668B73E9295CB78A9CA0B6E90F22FDF826ED2561F5B4BD0E6D1ACB2FC
CDDBDE5DB08E82D9113EACB6260CFBE7AF67407EB89E4F29B5669F0172C6E4B1CFB81FD7D28F
F5167111B16EE4A349D5AB9408BE98A51AA4D17412F0D23F7678238BEE914506AE72B470FB58
1A898969EB6BB0137F9B38873CB5ECB0501E49DD3704719743A5BA4EC9BF5C7D397355788842
8D30D2FD228127ED32B484096EDB0C8ADFCF6FFE8CD030F3D5410E622FE54D615272A7BF503A
C89D0EF3ACE83754978673F9DB3E005807E470EA5B553649F61148D42E9E6FD19E4145980C7E
CFF2BBD8EF84B435E6562A920E88698F7D1105AF11926CD6180D6179EEB68823D99392DC95A9
48E48F3533FF1C4B2026B5EA505DB22A265D56441AB455024F4263C9AD36C3E25CE067A19373
03F9F216186AC443D0909A4AE76915584BBEF1F884C321FB823B724C58757E619FFAF20117E5
D826AFB62D2FB7A1E115429191C80AEDECF84CC71AC9E7ECEED3AAA33838861D5699440962F3
8DB466528BCD883AD8385E5B8B9AE1FC891152FFEDE5C2B139B1445E0DA532A4C9D19662C7B9
AF3A158ED868F5B11D284D19C850AD79BFDCFC4B44BA68537B205420140E803A16EB78111FDB
F1D89CD1EFD2663E3E30624584A5E70D413F73CC1F9392610D0C4A9A0A3E4E32906A058D8BBA
062C94FCF4E1E402024EFB1B7FF8379500D16FDD85B556002DE62F78C827DE10FC2550BF000D
FE81B29747882B8CAB4CD04ACBD92F009AE3F79956996CDD6CF5006E200CAF32E014FA4B4E67
EC87F6B76741006FA43E17F11E0ABA57592F481BFB8655BC34992E8BC3D57AD02B4744E1CDBF
A0A76C543BF214CB6C637EAF4A958B337665BAF1B286B40FAFD6D833D45B4FEDDF163BEA2716
D90DDB483F8978B5D92D8F78D13E9C24B1044543B289EFE180F0DC7FFFB90CB99F928458D36D
FCAA18145B130D7B6B57BE3F81244F6064B61F630AF5E876C8847AC278DC25AA942B9B90B259
16A2CE48A2F2546056F7D3C9E0F637B52EAC424C3C7B838B279E9CD310A520BE41AB8C7BDE64
AF685340F44D0D5E4BF793DA6D7FA368E9CCEC9C933251E56BBECD77B0A3A4566DC074E2BD55
EC1ADEAD11E4EC91937C8924B7FA593B24EF32DB66FE8B27D795C12DB95404B2C66945A9C312
4CACB24311FCA2567B10CEEC21E226678925A85067442DF6E02E21E10D6AC641DA354C318AB4
F244C1C2DEE6AF49732D3F390FE6BA7C84E415B35E390EE2037026C01E2FA69D1348871B867A
37AC2BCBDF84EBED1024EE8FED087491C8978051C47FC1AB12A4DEACFA17797DED28D929E212
172D3D8EFC3B04F5D074CA57271E604EF5D0B9893A6DADF516FD75CB84F1237EC510567264B2
F20AC77C21E0A623CA2E05F50BDC856D7352BB03DFDE6A0DB16E1AFE6D3B6CEE4E695D985B7F
BA36D64365C231FFCBB8BE40948810E8147D591BCF096BBF5D2B545C9945612F60869ABCAFB9
2FDE6616B5F863E55568C7DEC6B413EDC7473BB35C6907607AB5FBC91AD25F4C38707F57D229
02F2519F9A76338A0C3630D101E49F14089AEFB0E8D6C735493560900542402938B467E8437A
1089D9460027CA5851A788767167589784E55718D98528883657B4FA709F545100D0CB2EA421
3A44A337AFD552B19C10E3F6DBD866444735570DB480F037EF4D18EDCEFD8F6B14CDBA58E3FB
F75B469364D0E69C92B8BA3895207D8217C72FB26238E3C231451712BABCF6E08C08C637D319
867554B4426341E315217FB93C65BAC24552F95E6890B9DBE1BF7530D720E48E1DF460EED718
B0FADD1960EEC4F2F72742A1B8FA8846C10F1201B22C0D79B8C77350226476D4CED87E7B6764
9C9E661066879AB9DEA79EED6BB0FE1300A73FB3578C0628255273AE4CD379231E9CAEF0F8B7
2BF778BF14731C68EE50C2A2F31E848447190C3E42B5889F1623E196BFFC1D8DD1323067E075
FE70B4C762CE5FD8AFF0E4013F47C2E2DDFD06AD78F163DA5F4065A272D91F296E2665B219D6
E88C094523116AC9440EC2F9B25ADE7C5852659DDB699FD030656733C6D232A49E75D776A235
C1A56EE2F8901707A40F5B36AC3C98FE021BD1F28DFA10327CDEFA5F06B471E8967EAC5172DB
EFF6EF9EBFE7D129E8F99830E4A12C100D6C5BEF79114757CE26D8F0D67B95D9865C7A5DC91C
7D542A2A908B2227EF0B78C7A2BD562A8D73F9C20728917082A2C8DCB321DE1C8F89588908CF
E1A5833BF444F8944088E8742635774796D8D4A0040BCD9C64DDAB4DB438402813B59EDFA79D
FE26AFDC6A87093BAEABAE0C10305F70CEA65803702798DF945F6F45ED221FC9C2537151D086
E2DF720B8C689C4DF331EDC32ABF9D322CAD08E3C2C06921F3A2C9F7A13A4F51B184CB77A4E7
AEF35613740B2BFF9401D1488FC671828FEF4EE8AC4FDD247D6B778E5DF06179B5BBB462F2A2
E2976CB8794041897A65BC5A9E1C561DCC34C98DB07947A416C302B8F20A8614572639459E1E
A1E510A8F8432B78BC5D1E294D8F57DFC956EF227584D236D0F070A2AEA00D94E48110DECD62
9DB3727E5015BB0C99A794106D1145FD9FA8F407BF279F7B1762421B1F3A1437018EFC970412
1176E2185065901DF20159EECE5B808B749E7847B6AE9EA268F561B90F8F47ABDB6528A21A71
4B749377A335076108E9506DECC618E42DFA4EE0ABE77D1F771CDDE50143913F0407023E19FA
0CC7464E53218DA799FFE7A232241F3DEBFC6F68BCDC45A73E264B675E3AF587042E1E35B346
DE4C76875C656AAFE366C9097EDD12DF958335CEDF7E25A72755A88878FB21BDE7A863797C2F
0ADF73D3DCD928971E1543C594CB1A3A5C364840F0B5780B764655FCF831285671B076F7EEE0
F1C6245E47917124A832AC008EF608250C5220AF5E833B6AAE1038E9F7DC3C793C7C1ACECA66
B3C6B0377A4ACF9E5AA98FD729AE8EE375E831F507CEE9975B130402B78D84A9D685625AD309
D078BC2B645C48EC8503B02569BCCF978689A6AD2E2E06C1978F10BDB20D2F828237DF91CDCE
385991A328C94E0B556F4CB8987DE3A2698C78EB2F2FEF4E047292FE9832DFC6252EF732568E
87ACA6B40F113E45852B213BF6E3D1E822B61A34344B65B9C68246F682588EAA0DCE7C1D1E6A
3D3491C34F7DF5B0A55DA9A33F4D59B5EE49BEAE9267A4542C4BCF7D650E0B533DB67074F7A8
89568DC8D55DA631CFE65D1C305C2C49574E2358BBAB65E298B46EECAC4CAF9C79C918AE1862
6CB6EA3EA5ABAFD51C88FAF8309E2CC5EA3BF72FA7931475882DA87A9249CB713BD25DDD0F66
C98E58DC0EECE6BFC1D537F887887E3BF5F52AAA42254CEB85481732F4F22AD0C326321139E3
5D2066B859FAF9179D497DA1BCCC88614D1482CBF349474DD8487CFA8AE04A47CC440F9C08B7
916727FB9A48325D84DE181ACD84DB1F8450C72792F4D2472826883094A0BD330E79D8E79AA7
F0FB363D6F6432CF6B191877315F13B0BD9C5E0DAC052685F04B7314F1578E14042E777EF6C7
E49B4B1C4510D8A1E97CA72C77A81B757AD555437123F371534851FB922FB8AE6EB861D4CD4F
14A07CD933D97C711E58704ED2CC1313F4A899B401D7354709FCB8C5204A5144E100FD49513B
C03EB616B83FCB488905BCFC751EFE672CE1911CD55C48DC34E5922C1E300E2BE75C97AAFB6D
2C7D8B2A27DFCBB59A512E6498AF827FDCB3A7A3B5722FFD35467D2F4E23A1BC2AF72EFC4ED8
D0E86E983E5E822F5D7479203E7032BD1AE7A3A7930850325A42B803552A3B00753EB9031C57
185C5EE5B8A2C448555A91CB4522B8688D2A42C15EB2E1931FD963B2E10D09CBEF03E4EBF90F
F61976BE720E07614B853195DEE2EDEDF3F30C750DEAEEEBDAF86CDC35CF6BC8F05D7E9F35EE
F1E212B9C6ED696BB4673CD837A8FE736C883F042B0DD9F14BECA6A1128B204C2B57CD58E90F
046D8CE6EA694E1B71BA8BAF7CF6C3346CF0DD5642676B4FF8B45CACDB4975D45EDEADE19A7D
1970AD567E03CD0FA17222F638B873F60C0C085B714C18C6EC4AC1213946824452FCA1D2E85F
EBB6C071BC80CD3728CBD8B38A85376914273C134B8B8327FD591C5960A0CCF823512E936452
DF7302D19275FD19EE696EAC93D10B3BCFEC333E1FDB77439EEE7F7BA673BE0EDFA26C52B258
4F6A61BD87FC89F3CF7B662FA8760E30A800AA7D85E94E57749DC6ED26927AE54E1F84EDE593
601063711A345AFC9AD2DAEFB924AD66C9CF7EF4D7613CFFB79DE86FC6B5E378A0EEA2C69DF8
BD80D3B34F5E126DAFBC5030BF408FD0963E0949A537002F59DBC2180085F46BCF7FCA9356DD
630328B7EEF27B7577CE3C1682813C4DF17F86A68CA27E8309ECC6E6D580DF9D607370400871
4381148DA19ACB91CE6FD2AFA781A092B881B1E75C4525E668AC8450949EB5B4E49FF3880657
4657D45062A294972C441F8C354413102002790C9D27FCCCD3F98503D6CAC0F9A41C4966A389
9636A40DC223F07568EC42822A05AFD80E10795B86B05529FACA9C05F956766457DFAF489920
84889D76195CF5E72E3F689A85FADEDE52D52FDE83850DED200B05377FF550E9A26EE3E976D2
75C25B536BF429EFBBE8084C8908CED27091434606E6F8F76B7407BEBADB2BFEB03BBAC91987
5C308EA1C32BD56C30A1F61BBD705A87D63F4709D39100257C05A0FE66CDFDD0234CFCB67FD9
99F88F87C13DABFE1E7E91DB67B83A4A7F5033BCCA4D9E3AD4979B1091BA749E595729AEAD79
CCBE02ADEF217C049C29E05508A09CC4EEFCC004610ACD3F45849C63169768253242095ADDAD
40EC80726101B6D25A4E52E746A9F956906C32F2CB316777BFDF3A470DF987B5228620332983
F68625E7E32A9CA809F61E3C25983FE95987A2B032CBA145D2A9A31236D26E4BD86D71EA16A0
FD85B393F7E3E1FF5B6E418A25B54766AEE0D8272BB2D3C85401E788CB75BD8D676ACB121198
AFC3179DBCDC8281C914295FC4DEE61D150BD8623011B495AB2350E0047DCBDF9A9DB40A87C1
FE9464FF6E95562572C61346B1A00F37C3F0333C81753CF4C5911E5E370C70EDBBB4626B53F9
716A3B83D201957059546ED22831F5BA5DDF5EDA421B3167E5C58E4A5AB8437540334A3B3285
C1A94A5E2C87FCE09D00EF5DB6EE78400F1F9C4F4CDAF7BB85E56677C02DD2B46281C64522AE
B1BB1FC83907B4FEDD6678EC11EE46DACFA31B048910CC6C9463BBCEBF80AE98304FF2EE9D5C
05418C667CE54354D66D0C61AD5C8825941523CE6800C2FD3CC05A9BAB764F79369599D05508
5E008D36906DA59A1FE6D137605DD7707AD144285BCF31A6047978146B61A4DFDD01ED38E188
8896F8B02F0BD89A57402A92107E626383323A5FB2E943316575BBFEB707007CECB0EDF4AFC5
2419FA8AC4F6076E1DEA9CCE97C3F1E60B2212C239DEB4E71711CE691AD89C42074AD4C9B991
7B40119DAC1F9FBD5CB3E241E5AAA2CBBA248028A4AB8389FECF0ECBBBD9D0AB8450535F2F7C
85C02DB8C287F24EC8EEF67BAA4A0EB50A8BBBAF0841F4A24558044A0E41B7FB390B6512AEF6
D77952225F7BC00E6A6B3E5314FAC779A9EB11B38D36FACB40EC14E0D875640C90D9E856A5A8
8A273886288F14D44D0D9A8D4144827D587EE2CEFED089D6979793051660C322890D382117F3
8E35E643808FD66E48B521A6EACC926B748C7070B6F3CBADF2A3DFE4E2706DBCA9439FFAEBF1
522E180BC2876CF7F736698FA955FE1F036D145E3216487FB904045D5533E1B2C3BE21E1A64E
96BB132581BF0180B8E370FFA32192305D1075352F404F4E8E338EF2926E71118383A9B328F8
E55A5A938C737B7B771D6EF4F4D62D96D5BD1C64190FC6932AC6A91C92F267C502D3C1539B48
C6E0C511E83B687C80A8D290702C26ED02A355EC420667A8F1AB2E201B814B51DA7700C5FCBB
F06C1DE4B4FEEA2562D1CBAF47C4015B72AA22A9B6490E775D60F7B5FE4E7362C765A398B0C3
9B047CFC5ADA1D8ABD3EFD2894221D1676F04E24FD10F66A7A185403CAAE0A233896A2AE721C
0C74798EA526DB2A13A419F60883D4524D068379BFA6EFFA715D8907E4729A99ACF06D7E2348
EC9277C295DCBF30879C2A7E7AED3BF984BD8A3B73CD518F8A4F612A179AD16B5C8E6FB0C8F2
1692C764A39FBE7421D2584C7542F9F3E2E76B1A8D81F57DF2276E098DF6F9A2BCAAF783708D
5D966883D2BAFD88416177A159C304091202F2518F31E512E24F467C67BC619BCFD5B889B0D8
3229B76CCC9DB033745CA4AA2B7FA65E12421C95364BBEC1082D2828AC196ED6340D9C90BB5F
102678640D3481397C077EA83CDC3EE0927DC768113D2F4DEAFC9A6A982E129C5000EE2F5051
829969719FBE96BB73EAC332AC4C81C52BA840C1BE9CBE9C735639BD9CDE6DA5F0CC484B20AB
18CD8235FD2D8EAB0CD5A9FE4C276AD9AF585AA519DE92BE8AAEC2C7BA6185D7703C02C82A82
9B02D2CFA16188F5E3AB80AAA4526DC74BF173ABAFD7104C6C8351F5F36284A3DB9C28ACD707
FCA8A97979607F4D6DAE5B23E111639271F8EA152A6D56DBDD6A6C33C962020393E13A231018
99E3D2D3B1BE77F23DFE1BC8BB2C56FE0F8A4CA063369A0EFC593BE649FEEB516B5BFC6994AB
38A75BEAB00AFA4C406C2EF9A7F2533B5F766BF115A05AE0DD8BD4A0436CF2ABB04354D54C82
E3E706587CC932F95A254041B036B14D249D49D7390593231FACB2C2D80848E94B7700B06527
4B833E2A22722FF90731AA0F47166FD4FD286D5315E01CBEDEF249C9B740278D2A4E183D1148
433CC20CD3479D7EE981B0BDE4F7F46470D9EE2B6CEDC48B0D1581849271EBB8536F55B6712A
7BED80F2550298B1F81F3AA70D39261A187D7E6F2097660DE875CEA28E5583F475FA4E269508
53BF6FD5E9B9CEE59C1371780054B2238F9E6C3C9F3B4A1411FBB89FA1FBCD3052D189333206
3ADD912CA14890779B988149BB9D4DA1436A18891FC7F229C2F900FB6B272D55BA55E581F8D0
630D8BB6C022D366DBE8B4238058873514E0DF31D73920A720F6DCA145FBEF4D15C9411F5E03
22CC61990A48F98A63F23793318C22D178734FBEACC04988901481E1FF62D5A8C7AEC831AB49
C4B5721F68F693E442CBB62D13017DED5011EAA71F417707B7915B92E280D0A7FA0063D90CED
947C82FFB0A01B962D2B1AECDFB1839DD0E8335124FE352593C9938B4F4EC21A4D04BBA3A468
26DF0972C5D8401F68715C7B4906A37608DBD3F630D8F3BB64247D8E198CDF8AB8F891E00AED
DBD4826317227225811FE52A9DE08976CEFDB7D5E76DB46941B9576E87DD6B400C64A256A134
755011E3D4D27CB90EDED548F91E1ACD8CE08B7ADC929C1A02B22D65F10BBED695D8FB1337F7
15C792B04D103632223040EECF2703E597FDF30A8C42D44882E73B2A1C0A73919DF7A5CDDF25
B32AFB51F2D24DC4DAC2A747CBA641FC6FE7EC4ECFDFE98BCA936EC2819FF6016A17BDFB1C91
D893FF861A67FB1BA168C5EF59F774D859741C6606D680B68B67563B965EF7CB98E162F30750
4FB77BA9B3C34EBA8E45E161F8977FCC6FC2F4C2A677D8CAEF269E49C9F2F9FF6A309B2C21E5
C810DF536DB392CD1B7018DCA670F0D484CB7B6EE50EA1BD158AF5547DD96166DA10D10ACADE
AA04EB9D144A0D13D7A8F80B3E505177B3CF9893396CAB022350BC705BA65811A2C60FC9F0E6
F044206DCF524323B5CBF547D13D54EE0E87F00AD5A4F507757CEF3B458E792CDFBCC25339D8
BF388CA94BFC341D76AB42CAD16C3F37CB51C85FE91E387F8C1D84A03DA897A699FB80B5DE32
C0573014EA558D71A0EB713C0499438120B4702176B39A69BBF930309A555173D8558E7DF642
A40DD506F2498136A5CB19BBDEC74D7B436AF3AE2FEF171244FEF9711A9AE983E45220F3154B
E125816F948BB0D93B9853AE68C77AB71A8DF0D5DF10E4D6B7CDFF22C3BE071F0E5DC4B82293
025A27C4FF3CB5209CED6295FA9303B624737E0F3E8CB8EF7E39762C82C89627CF2E430AA0C3
39EEE58B684CA7FA818DD90AEDA2F85E0844963D933DA431FF54348D7D9BD3159549650FA956
E1395ABD116AEED54518649290B0B1F54950529F83B0D8D9620176D7A91B803EDC637642C83A
761CFC821B21787F83920DECFB906A5260DEF040E62E38135944DF33F2C4AD7EAB631F226AFC
F035FF68B4B709311D9D713AC6CAD9E7FCEEC73AE0ABEB5FBEAFCE2091481A0E537BD666719B
41028283CB1658F4AA7F4512FC61C7631FC4EDA8D678E7FDE9DB0FE0F89CF941FE65C32FC88F
490226ACBCBC93E5BA23DFC83AC4A289870E5ED31F2B5CF50A93525F381BD56D01BF11299258
DC387694FC0CFD877EAE32478D6933340343AE8D2FD1740BEB0EEE04C44614F9C1D45BEEA74F
D4C2D3F49D624388241C96BB392ADD3896E74B93F670DD8A5C415631B2834B3B8135B49CAACA
007FEAECA5FB75D9C4423F2F04EF576EAA87B69FF1033A70409CD5ECC93155C218D154BB1524
91F87A8A49A77C1B6B6BD09982A55C33601547DB6C8344C0BA64007C9487105CFD10A7BC3423
09D1AEBA097D21D9C1DA6E1AD1B1F05B2364678CE5E496C2E2056DCAC7B5C90BC5DD0B0853E3
0D01800F91597206DC2A1BB5F0FAD8735DAE0E61EB82138284FC4174B009D8DCB57C96B2897D
CE69785A571549D667F539640BB0092D7D130CE57428B10A985A48576D7F6EA6C4207A53BB62
C4855275CC7334B6FCB89BB496F3889377C1B0B5719254C3B9B19D041FAD4A399E671BA4B04B
4A62B1879DD7B04F3B93FE31A3C544EAF70855D695EB3112A05B05374C2196780E52FB906DEA
B5ADD98AD9A075A1DC44A5E6B5BA6CA0F8D2A634491DEACA8A763311E9544556B65082F93074
E5E4457956783C11DD6B1BE5749FE952D2F642E8BF267E5426A0EC324AF7D2E990254DE48C50
5B1FB742652AC86F38BCCC59509737401620910489D3A4AAE6E84F7B7001BCD617B0F09B5002
AD00122FB1DC4C7DB88585C31E637095D3D0DC7FAC2337EB79F02FA62D13AF0D4B76D43E6917
9BCA2B3685D635C6F2E1E26BF1A9A609853D1510FA03F78F0B7FB384586F3E9C1EE38DA709FD
02EA0FF4D5CE512F8352AA15B232CB91411D1E95965F485D7AB5421D700AF653B90839773FAB
6D37538AE3D61D9CDEF3BD4FF94EC113E9DA9A65F75ABCDFAC298717436AF9C1A1667E7FE803
39E1383BD3D45B94F76DD91EF1BA70A8BC50B51D6B51766722802205C0FC5E8EA0514FDFA5D5
B18482694E656FF5D21DC785B278F11B386E5812D42F0B4505F896D7F22B4BA42F4CFF11DBE5
07A53031462B3E29263851E0C91CEAA0573B49A2A6CBCC3C3C1A9C59C556DC2B12D1A9F6BCC7
51151CE62C3F30A0EF50EAE7A56AB9EB35F93975FD3AD2E2145952D709F052197A64AFBEE9FA
03EA2BB9201506C0B6441C9EF7250D73444E01D87EE3DD07CA8CDD5549F62D1726C8D69833E0
C9D2FF5AF11B1FEE0596853FB75B1387BFE18C4C747F83619A6096371FC6F444877FFAAFF4A8
F412847409BE666D6F96F3A2A6BDFD20F0BD08AFDD3506FACD35E4B62C58B4A4645E732A9B1A
CD6ACC71F018C9E0622A1705CA635F96C7315F9D876AFB459641315BF4CA0C4F79301C0E30A8
EEB441218C91D12647D5BDFE2512F2321BC51968C257FD339A24B1B4203BA90691564A9C83AA
E4FF68664D03B1A95DA707BFB90033444ECF3DEB43E6412FDEA0AE772206A398DE11C52B652A
C04499968E2CDD4345FEE97A40B865672ED4711234D27CCAE5F151D1825AF76E8624C0EBE4A5
BEC34B6998040C3B829276200FC70A6BFF7A15CEBB81E8B52221A45196FDA4087BB32D5A260D
077677B66E070D33AD1868A51F7201924825B04335BC192BFEFB74E496DAB3D54AC4553CF959
EC0DBFDEE94289A4A2C166909C26C130AC3AD182057644C8C2DCA84A30444E86E891FE1B0772
9531642E7374C9A272CEC66BC04A36DB2D0B74A622028ADCD6702773D0C9B6750C28A08902FC
DC9F8A290C80C0360BA8019799D33FA42361C66575AC108946C97F3AA027FF95D2A6753F9DCF
5949DF046CBAEA6333F197169C0593DB17459534DEDA9863A74B496A837C1D667DF9AFDAF543
20664D0319BB3BD41EF9A54B4594E6BE5DC416C275A73A26AF17E493F77CA7FFBEB2F7ABB317
035C249B4B5A33757BF9601B4DEF56A6207EBFCE6E073FC9427F95E4CC3799E55EEE6D0422A2
6449F713A74F0C114D3EA2E9B2E183DD857CF21BB3A53480B0A69C7D8FDE6DA71863F2B21EB4
07345E4D72C5667137F83610CD2C391218478C141F1F34BE21DD6FDD444AB1C4B0A59439617C
D0D04ED9FC568B0C70AB8222F17EE10C0934F9B567DBB26EE612929EF36036727E4B787015C7
6E78BEF4AEE020494896893FFA23AF70B4C6363F7B20DB155F496ED5A8609BE1E5173CE968CD
FF5B2FC5A3BC23894EC6F26B71A2AC555A5CAC33AA9F71C184B8F9569D286978C5860C4D0BE5
9E267AD86EDAC17B787CBB93DAFAB3AB4406D83AF0FDC7A29B0A0B8B478D2717FBBC87B305B3
F3020C69C358232B5B052D4376DB297EEF247ED2DD256437C1139017556F879427B786A15BDA
065A1C70C6DC959F8E0CF727BD50924AB82A8C56C225FB35F49C6937495F2B6C7A80D6ECD28B
0088B52558CB45B238A7DD65FC5F16EA69FEBDB60167D4DE4785B1ED69C9F40495CF1ACA058A
E2795FEE4812B5AE9A88EC6F37F8FC2A964E0170025FC558A7D5E093A498B018390064DA45F6
D3C9ABCC3AF22FB37946CC10AE42BD651E213D7E26570B1EED493C3742606E3861F1FA365824
D012B5BA6B6BDE3D198E0FE078C7C17B045109F6FA5700F486E7FA8B9C1A5AA9A14955877F9C
7CE8997CF709CE97211DAE33E406979E83E66ED2386C06B400C36404AC371EC3BF27DEA61B15
D3DB5A2EAF68B5E5366112D6A18AEB880BF2DF3F4C151CB23ED00AFD1F41EDB073022EA74633
6CCC2EEFF94B0C896643F9D44D67CA2600EABA8DB2A75A18EDFDBEEF3E55AAE36D93C115835A
A41CDCB41D00721EFA83CF094A623C356CD01F9F3E61B52336E039F3ECCCBCBBC3DB86211728
1A50BDECC0057520B748A4BEABB24B8A5F2D915EAE78B359C01243B351570DAE60FE822219D2
0AA73D0D2EEBFD64A13FB0F05512F1C25EB8CFDB1F85AEFE9CDBC6D213DB2396580AEE22E7F3
9CE8FCDD343C9A65F86263613EF5C8B1D3D2CE31961170DB7F3A930AACC827643FDDFEBBF77D
5A402BE5D1000DB4C80C05B38CB971BB260FB31F8A42750519FF7CA45076A75D3490B51CBCF8
B47E9C43F349DB24DEDD1C41E013DE99F4A02D7AFBE73517241DD78D1BB77FB815E023EC47E4
1C4F1F8CC34B6FA12CFB9837E7428A0EAA9769E786818556955407BA5079607225977B9D1329
E9837FA6ADE7DF59A7A5C3C6A9DE0791655B3A9C88A4B9D643F79ACBC20EB60019D7AFC63F30
C5430F0DFDB0750A899347EB1D9CF6047BDB596275613295AEA793D76F6C1C012385A29721CC
A1D4A49C666CD91E578B4CB177C7F24BB53B2A096E7ABFD475D8FDBD0BAD06AC17BE32807DBE
F46AFEF6743BFE9C65D9F41691F698027DADE394FB03A862D3C8AADD957F2E3D22AF692EFA91
8ACE6FCE92A690B5481D88638747EBEFAA504873781D51BBE392C8DE01B5AE4EFD418CDDFB84
6AE695CA0C4F4BB18DA6B54AC6DEAF533C552D8DC157A2336382159F28A121C9F2F486F9AD00
D487FDCEE4459470A5F8E3D3EE056B7CF51C860EE6E54886AEAC337F26D1FFC297B6903EF575
6F964318D3AEAF9BAB264111EF2AD05E4666CA98A320E0C30BDECB5D0BB00447C26E72A74CB5
067C4734854EF85A9EFEA96A40705A62B9FE6CE93FDC47DF59FDE42C957FC276C86696A70D3F
3503A4CE8C480C2F8ABB6B86D4C0B689DB26D606DBBFB1BA22960631D355BD6DF77BA3168660
36141960BEA735580E6B306B30232485F662B05284775DA99AAC580A53DC696DCC027A4B008C
7F55C8224E7C59EB86227BD3AB0F45F4080F27283721CE2C92B117EF4EC8540BF86AB9AAC4D1
42C87C483764691656F7B95D4C4969EB8403EB6E52EFFC8CE15CB9826FA477DABE136C2915D5
F9E03B80E83B7158013B8EF2817B1020DACD0B8F8C80E00450CDB8E1D794CBF23596D25116A6
EB716186870E761F3B024EF87136D248AF0077422381DDC0D997C10677E5C51C87C5873B5354
C2F429661B9ADB4B9C7CA76CCC878DAA248857EA3746DB53B3A5CB7E9B239744383E4652D32B
75B75A4D678A4ADBABE8E640F4E0A80FAB602E09C81B4C563DB440FC714DCD23D3A7E4AAFA65
5D569B7F6E4A3E02233027D740B6950F349D0CAF99AD47E7B40F3F9B88E1E6B32DCE22027029
EF7A470678CCB8651509BD9278055958C6C8802ACE0C1655FE5E52A9840513B7925150D092A1
F7CED5CC9938244B0BD766DEC4954AC6CDD1DB1304AE781383D253F65BD24ED05875EB50AD99
D1BCE15BE48A6A363CE8F7D1D89B37CA7BC55DD84FB7A925DDACB6134A1313EC21412CF11B11
82C1E88BE892863FB487C57918A111D4857D3A47406030978456C2AD7EFD34D949111DE4A616
362F218528474DACC220F86814F2543F50385F80CB9D39FBC70AE1F66855DCC1EF7982B3488F
719683AA5296E955D72A3ED56259FC3F9BC41B0E42514740D750A7C2987AC132EEF1F7546A7E
E8B073DCB7CB3077493E4CC2D0B8313968730BD2B0AB3D94258A840E25A52B96025704462C9F
93C3CD3C2F3C66FC7E954DBCD5FFCFFA622C797544121F91DB0CB7793112DC486996C71221BD
8318A1439007735826533BDCF1FAC581E5B3B8DD3356E4A578C87D73026EF076FCEC3124917C
CAFE0BF56F934DD8B57E2DBDA712020B1C4A7B7919D9D7BCB7D5F850104E668F597D1C6945AB
A72F2AC3FDD00FCFD4F3AA871EDAFA706E53C1FA0D376D1985655CF33ED3DC1791517E941486
0E0EA2505D280DB0864B7B02B80F72F10B5E92A7B79C71C656A14CE57F096EE937FBC8CCAE99
9900BF31A9EECF2689584976CC5D9D20F84C3796A4C9C200775C03DA8FD51644F3720EF4A635
4FDA3C562A001A95217B009A6B6F1ADF1EDA0BA99A5AE28FAF22594FD80D09EA4BC02BD5D63F
4E0116AD29CEBA0B961F2D0530DDAAFE3D3B3DF8FFAB804C7B7855117D0C0CD591B0828539C9
54E7B6C05BEE6E8002F9453CAEC5CD25AB4397C807B2AF43C2B2A883D87FDDAF6051F8B2BD6D
8C9BEB43EA821E48DE0D83CE6E93AC6959D8C7E4088B12240ECFD6A02E0A8A452161F878F024
DC8A078635EC88E6A33DC633147B9A2A1EF575E86048B9471713E0C8CC202D56C7BA584B9EDC
BFD980A069A994084180291A695144CA4E0AD3CA947180F6FBE8A709A3E5401E96B74F200934
4D43723B1215D2A145D0E1E91985375EFD8E340F01F825A5A0D457EB5C5B7DA3551BD7EDAFED
C14C3B6B9BFE7EABCB38BCEC9F1F94439145A32FFC10032228B5D1154D2E22D2EFED471A0651
C3B9FB04C1910052D08649C63D5B987EF316A90B2C1BDBCCA3CBB12F1F426BDEEDC8107C9F25
38BB506C7524983E3147012DD9DBC0DAFC96C65478BCF8EED378FEE8A20DC9DCB0F229088A1A
67336BBBB67E68EFA61FC6A5750C7B29B868EB5C050C493B97AD7DFAEF8F75C28A8092C5BE3C
1FE73D519C1625670C78C373765B2803B932DAB26C54664699AED14E20AEED56B0A70516517A
62473369E6541D759522598A0BE737CFC0F4B74B17D63A72FA6798B867A1CB133CBE5EA48401
FD4646773D5C377628A2560DD870283ECBA942F65F660A909811A5332596B84AC3E6B583A24C
7C5CE30ED978EBD6E0EA5B8F534D586B97B3D8F3D9511CF39B0AC45A21CB831C81E8B78B7824
B0D9211B916B64A0EFD2FB710B6777A93874DD625311BBB74A04C734BC3C8298B6609CF371F8
A04B6E13BB4C5CF308A042E4346959CC5E7209F5D7E2AC25911F4F2BB14EB97582F80998B777
14E872260CA785293E0F67ABA0A232D677515C3E56113BF6CC8C1B0D13219DB4EC3D600392CF
BA7C3C7602D29EE0583BAA53C160143376D3F84601E562B73E389EC97A1863BD0063C5B2EDBB
5DBF35208A9A19291F253913CC05C4EA5FE74C591893B53BD8BEBBED59F13BBEADA69CB75D3B
8FA31AFE3172B85CC8863F52B594621F80EB005E0D038ADB6802E1AD80492867EAF8EA046B39
1AC713A3FC24C0E036066C8C1143491E8854A4E8D3A6EAC1C063BF1CC60C3333732F67B43BF5
5B43631EB2931A9519AF5B44127B432871B99B3621236172D0EC4EDCC0BE44702893C0E749D7
FFD81AE042BE89442ED0D0F45FDFD2A34CFFD26E692DAC3F81CCFB7A7676444B48A5EE7DF7B3
7DA76B1C7C50654CF9DF7F47DA61082B64748C038E8B6FB6DCC2D82446064D826FC2406C3398
B5D24FC41EF1EA4B833F9C9818A78864DAAFFF9BFEAC577964EA167734F4A4E4FD85516A68DC
BC0A64B1D406651C9EC70E97BC15F4D0FC43E96BD31174DD4D0D228897A01BAD1530F486E86B
DE3B7FE8203FE79F3904CC70F3FE5B70A52CDC3AC40812974EE43EE335E05A5AAD251C22B83B
B027F8FD6A695A85EED610205C395F7EBBA3A6CF27DEC1048355636242F23E74B70640C1AFFA
52309879376C911B07074BF35F5DD74E2A963209EF85F1902784898DA3D4F43AF02744AFE667
9890B7AC96F3176FE1CEBE8D534617401E5342ECC07E115FA5CD1D77998D30C28DA15B763F1E
9412D314C535A574D0584A257487052C4F088066ED99E434BC8CC0F975436473F9C417588ECC
0C37BF0901211AEB658DD4D1B30A8155EC7CE8940F059935CF6DDB00E47D4DA7428DCE12920C
DD864ED00FED8A18C39D32556A2A1BEFECE0443BEB0F690FC9552F851ABA3862083D820DA900
09C546C0F8D974644C3F2033A81BC38E9432837E0469329715AD7C6D910A8506A4135FB4FD69
51DEDC46231DE609F65DC86D66AF10EEFF7A899F92EF897410D56AB4193039C558325C7240FF
E917284742076B218220DB2011C9DC6938F41D08634C9E07A81E91753F595A2FBB72752E0E2E
B941101C30A26CB976CDD181A4D8FB0187092773E56B47ACB7D6BC7C878A00BF69EAFE8C2FD1
665C3FE1B6358E3B6FC761BB19D8FDB16B77272F28C0DDCFDB4C7AFD48F12DAF1CCEE639E8CC
E5234F7E60905F7EF178B39CD17A5F5819AFBD6523B008E1E3FCB7EBF0A85E328B9845788B97
43BA205FF3809CDFF74C8F83AC937AB9B041F32E9CE0209B62D8021C5D05809FE51D277A31F5
31F8E62D2E0D143125B599D06C714B6220981F5E8B20E64BFC4BE032393B308CD99D1CDA5433
AEE558820C95DB7F5ED52E60BAF77CD27A60DB1D6FF7C907280B024E3C1D67263F3EBA29035B
B5D70090C199EC5682EF5FD7CE0563C453ECA594AB0349FA32A9707DF207E19461C79C33B3E6
FF2DC5700CBA1B297D9D215DBC3647F7920B82B31E7D22319352E83376B373197E03C4C42137
754961EC274A241C492DAAFB078D8F0B2C1127E57F13DE96D2BC9BE9B5120E063757FE6B05D4
E5BD7566B22D79CB78C01DEEACD07D86E961D0CB9DB376D61D1BEADA56B1A629A93F83405C7C
10C1ECA67A71AA87D7C0D28E295A01FDDF038BAD9B0DE720718EAE09D7EDBF128A7DDA8D786E
E0B16D4D21B3564133476FF42AE7D8A5347749EC2A2A4642E87E7B64E6166032AACB00247F1E
D8F552C94F3506F9939418EA62FF14D3FF98158EEE0424BD5E3FA77C2562CD5BC6C7F0FFA183
8653713E87B1DA2E1A4D202F04E60DD266D6D48653CAEA42CFC43D05894D1173CEE0FF773FCF
9803C2E5C150385F0C8DB67532B4012FD89C5558B045C3026017FA4CB17CECE11712AB0D6176
31B1A5096677062BE9A1289736FB1ABFD9630274E40393CC9988D2589F22612BCBA6B339C961
E5A4E1FBF411A7E719959A322DBB622C8A9CF51D6F405EBEBAC19E6051CA5B750D7506EC8A03
CDCC8E62C6D7AF9F6A32B0B585F66B26CA61E290E39E341F0B2D3784D104F82872BA0E1ED967
A064F708AACFE052002972006FE14CD4963E1B34EF38B99BE8A7A83EDE48C85D5C71D69E0E4A
E72D7B6B1A46BD26CC636DAE815786E9E0EEE89493BFEBB89037F3BAC832781C8B1630E31542
EF7CD6A483C9004AB161038AC6AEB38B48B8293AD11BF441DB1FEF2A168B77D69C4A79F921D7
AB9F1CBA257605D81928FC46C43A4F93D39B01B07FFD0006D38366393CC64B18D8B18FA2899B
9178C40F008044FA0D1A41E879573171478C147CF71731075421650FBB856ECA3B36A741E207
7245845E074DBDD2FCFBBC4581A2766F1830FCF33255695D54307EAC8196CBB693D536795388
233829CB670EA78B793C4C9AEB73F7E7DE4860712A5FBC17CE5AD07CA98D70EB3C94A7938333
8199A56951A45A766FEE0D58788E22740F2568E515AA495EDC80DA6A84A2797C198CC1F3D6FB
B2EB893F79F9F54AC81B39B6DAC070A763CC81959BAB607569423D423FC8FE5F98E14BCF769E
A77C0D11E5DBE2FB539CE15E09B68349A925949AFCBE381192BE5146D28382FED48E03EE3221
BEC2AA8C7270F43C948320A3CD0B831E529AA585A7C866F2EDBC5B569D4D95E3EC52C8A7D353
81CAFAC5C301508672352D9B0F582A739564B6CCA37B517019C7633561F33198DD54A8864080
80671E1E77C0D2E5023F489305CA314EF082008D37DA60896F6C4094451CCC52F7AC0D72286F
EBD7C8525ED8F36974B846D64BDAD643DB37D8EA837387E100432131B11D5C42E5EC117AD17B
2BCCEB463D68AE7AAD5B877B076F34609146884F216716186F4CDF7134C0F72D36EF9696D2B5
3EC3A3149A5B17F45BAD371CBD72F2699CD52636151546E3D22C085349F42BA0C21D90524A94
B37168FF489EFE6DE3CE97679298B18ECA37BEE071BA1F93D7D2FB811987973864DFAD11BB5C
645CE0A435F1DB7BF20671B3CAAA89DF0478215FB76EA26F00682F4656E63C358F3B0BC84C64
C17C3471DEE3C97400D051617C205D5815BA63FF38BF46F06A8FBAC182A4CA27038B0C8EE103
6A9A449CC5A9AC774DCB04BC9F48503A3F4A085114E2F190E57859724A8F1E36CF97CFCC15D1
96EF82AA6D2964DBD886C39C4E72E15D869DF1DBCE4169171F2768CAC43BE9C95E344BCF7F0A
F27B45D386AB6248608416BE5F432D582338D3FAC77B80E9874D5B65658698E21BD2D4BA153F
97D21223E488D4C5C2C8A7520E95F6FF8B1A19D4CC920DE4621166A4EAEA5774219AB3EFD4DC
9202C5225D4E650591C475337F68A2D870375BB8DEF9F4319AAEC852B76049401C121568F16B
9BE4ED27FF64C810B325BCA29B5642438E259135F361419E8B5B23F6AAB03AC0B22A348478B3
2E93FC448502B81B0626489F4A358702E7067B1BBDE9448C4AF59D24A72C83E0042AC510C6A9
1E5A9AE0A69D2BE865505238E396006527756734E9244E883E05ABFE0DC62F9BFD0E80251727
04111627916379044C3CFE0BD1D7E2C105ADFC871FF2DB60351210AF676444B37CE21AA14F18
79AE06EFE7B4338EB55F0AA768AC12DF6BD8B87FEAC0F48FDD26F6D2DE4AD88E898499608CB7
70F754D53571822BDB5DE28107B378F4B1BC67C0106A24E9D1785336BC80D1DA9636A5F6D25D
C355A88023F7189533E4A2416755821A03A069681F4B0554AB826D2819F2A4CC0726412E1D2A
0001A3CA49709DC21E7032ECCAB2F58D80A8163CC8129684B4277D3AD896600F610B1883CC97
3F8A975E328CF4B069B44E4D5207CE889BCC49684BB2F1EEBD711C8ADFD4607ABCED0FBA91B6
958BCD5874B01E8370C7264B9CFE66D1298374288F3D3F399700FDA41A7B193411D1873D321E
846B089A2E510426782A79990DA94D6182C912FE9752A93D6DE0D37EEE602F0907B8CD2F46DC
ED1179536BF9A3B74C0FBFE8974173A2C630C7360BD90F9C697B1D50684788147806F05C70DA
8A11EF065CEA507DE043415F855F595AEBD10AD001A0B68CD5A2EA7858041A9F40F05485B038
5BDF08007F4213AB76C70B463E7427B79F826EA7EBF94BC420F700A50A2BBF291C867D5B181B
8738738BBB76D93503E7C603A7F8354772C516443FBD33382B7913840785E5AE794FE571EB3F
C65070EAC273F00FD12BC28451FF8BE0DDE26DC63BEDB66ACC6570FB166A583D796FE9493793
BAF96A13BCE0E7952FEE6C6700A9180F5BA2D0CFB2963E0CC8606D48B9BE7BC99C9BEFB1A2DE
A357BA87D790C52F7A90A2DB476BDFB93F48910AE8CB5E91D1D146FC04736B13A017EE2216F2
86ED57965D2017ADEA323978D3FDAECF864B51FC9AFFCC24902E266B084D518F1F063A2D0BC6
25AD9B108E322019D1FFE9A26AEA642369EDD0537D1097BBD66DAD8D859E7F02BFB3A7776290
7F989CB8579A352A0719969ABD926A2CAAEB9DB6852B1494277FCFEF88795AF85F0750856B9A
764F94A65A120B04E33AAB0D36907B89BEE7586021221B27CA23559AE68A208FCA16703A2FD2
F1D8CEFF5274E64C441BEFC0EF7901E5EC1BE2FAABB271B3801C485713BB8846C95C6AC59604
6CB941FE5A5EF828EAD0808F0DBE808E96B5C48253CDC9ECA0F946A3877A9A0D61C0AD150F50
B186F841125A311D606CDE70D36F7C03AE8D027F88C6B92FA0F2D2B69F15A1563D5C76A3DB13
F43EEFF40C9DA317E8E0C93FEAD28D0FEFB5A253A9E998AE1CFF676DFD88F6D005B148948B74
07CB2428530235313AE2EB809B59813C15DDC621A69CB03E022A71DC1212627141A77C2441C4
39202C7F4B0937828648544B05288337535CD3D4D2B80A0B3241169C8898E4A5DB36B8230E8E
56E3D0CDB214DF9AB611003063037BACE671454A70C801ABA2AF35048AFEB620DC4FEA9975BB
A58857CE16D2439633989D9306914BB002B376CF00BE076BEAD119370763B131621C4DACCF9E
E58226A014D05C428C70E28BFC1CE9FBE10D94828D9510C22A7155BD28D6ABDFB16E48632223
6B678978BC49EB1E8572ABC47DE533C8CB98D80B4A529B7D05FFF2302FA2B099EFBE64F56186
F14D56771FF9802F23C1302732931A28BBCCF8016AA68241DA46B03C352237BF018290F3AFAE
514D05552932233857697A0AA8FE291D8CCFB8D85C5790157AFCE28CA0D50875E4107CDC0179
AFE2290120C6EF96EE34BEBFCCFDC2D47DE8CC301C14959A4F14717E9BD54454F382394D0C9D
653357C683D65857BE45C662E8468BB48F916C8BAF08D028E339E64803D910196D19335A65F8
3230A9E6C2BE9BAEB01F9776B81D665F0BDDD9A1A0CA31A0FB126B1AED8FFCC297786BD29CCA
18794FB704231664A4CBEDB3B41EC2D9066E6CA9D1B694A8D7BE8973E9CCB799F79ED2FBE63E
114DAF8C937E361D4B7E0FC4CAAC2B87F0C9406820E9448EA9FF98D053CE9D5A7DB9118707BF
DDA8F701BF6BAE1021CA34B924185AAB0526B046EA4FA65CD4412F43CFCDA0628F0F5790976C
D501621F5BA7937E6C04DD6700F9B35F3A5262640EE4BE7DB358B971C2AA5DF1DD7D090195FB
4FE96C8908D24529228E7F7FBFBE6138F00143A76B3C09E29F8EDA3D5C630AED311C3FC3C9C5
7B48BD070B18B44AA15009176D0CE7EC488C945C51B26950D522BF80226251FDE456D1C8399D
7FB77759130DE5E1620A47F6E8EABBC2AD48129F32E97974657C8AA6CB2E7EE0959FF4D70BB8
B307D2B6FABBC887C04A6E95A986CE189927FC97D8CA7DB8FEBEE699D3D193545B1937082373
E930AF3DB6EC7E4EB8C8E1D6E5615B93177B9A2BCE0D7616642DA91DE69B7DDB922A4F47EDA7
48A71EB4662D7476AC5B15184ACC7BD92E2542F853D72F1259020F66B782F837272244704050
99FDD181DD4210F96E8E28B257B8444FC35053A7DA19361B01BBC3BFE0F8600E582620D1AFBC
380356359CF6E9F1964635E0E734D7BB9A1E4C7D704426B8D2A0700411C226E13818F739CFC0
23921809D6B1C8639EAE19F014A519D6B71133C3E12451D21AA36CAE16F002286B5AEE0BC46D
5DC92AE3779D957212FB276D86CD0C6CEC26C2BC2DFDCC2C9FAC9EBD5B4C7324352806A0D989
4A1E809D8C9C2B1A4B56780CDCB7A548FBC3FAA955088FA50746598B134F64F4D88E8599CC48
A5D5F86F05F898F5C27018D50D256D761964C12AAAB06BEFC98A84307547B80839F8FB1B7E65
53D7E522C641DB4EBD8FABA0F24AF058C6DE88F1DDF478641C513423513002BFCBA37FF82336
A6AB4CE3D926CA060A4084F3BEB0073BCE8B91271A3B2614BC0AA19013EC694AFDECA7EEAD2A
6527ACD348D00458649AC2E475E8349D186FFAA64F2F058FA8C94E7202A8141F64CA347DFC8A
7CE7CE3C9402072E188C77290563B766223FDEEBC865FD7FFD4507E74A972BDC5BA05F1595C4
603627E07871268392522A6593D3035B5F05E8CAC3D90E3B6A8C8563BAA8F13D4D8A878445D2
30F71C257CA490D72B7697719B66B62055FB8581037905A422BAA45AAF39EFD0C40FBCC7109F
DC2EB4BD0F4AC59BEDD12F12DEB947F2008088321BE00902D555E22391A9921DEDA8691DDAEC
B8BE07CE75F459C1A5E9CE7C57386E8629BCFBBCCC796D3B0551E207F6E0FA063E926F6C663D
576B8D6069C022A51F9F9C21147C7AFBAAE7F697762DB69C73CFC80AFA498024870E3B7AF962
03CADDB5520BC20DB4B7DA0F36244B20A8110E753D6129C9DBBA86FB5581DD9BE7A021FB027F
5F0DDB40BB111AF0A019900EDECABAF3D5CDF84981FE2A659CF9F95A7F1D5146A566CFF83EC3
523E919D4A6AE54AC444E1E7F0A56746850186D8461721656B54BB784960B525170233D92E8C
89680F0C71ECDCBA4B15152F2C933908449052C4B4CE617FEA02A74BB715828D499D2208D85E
F7E45C08858BB344144802C885D102364E217253A7392F6442170B29F8E70B4B24BFA97C4340
38364A0C52084C204A09EA5D48873D0CDBDC712312C582F9A8CB516A5AAD8E30B591566389BE
57D444EE22BF80A06F768530BB9CFF7CBA7B8374F091FA17FF0C1755D6917B073A2E167A82E3
81793592CFEBF89561F0FDB63044F7636424BD0E406D622F957C740E6F0D3884702BADD12CFB
B07A20558193C10E5CF372010A7955ADF5D7E16E66C732BA52E3983026F0002B39B62B628DBB
D44D467904E8726E79D79987812F07EF14465CBEDAA194765692FA39D503DAF1F3F0A3AE881C
FBF7C6A0E4EC54D7D0572D810F8861DCAC41E4EFE176C5219721911C8AD2B3985328D49E4CC4
380892A6F108C62D711A8D9AC44C46936B90E4D1E6FC9CB7D01A6812D11A5BB0EABF497D0D3B
1EB09C2CBE15823ED1791D2199481C08C1F284BF72D428650319B881FCF79934C5EE86885B40
CC6240CB1F8D80B0C8F221D8CA58C228D6DA93DE005B11C15FECD9450293E3CD5005CF191803
A161DCA15FC2D187F22ECEE8335D58F21F69D15FBBE3C1AA3D595A142F8C3DCB7FA934830423
F072B0D7D5613C148A28806085BB7C18A8C53C6E43821AA5CFF8497822B48CB09AB2ECA0FFF0
54299726499124F7B25973CB9C80936AECE707B66985D7BC56F2980444CF3B1CE6A462A5B78E
C05A036BA12E479BCFAD5953786CED3F29D5F6E5B33ED9D46901DE314E87B831C376A21FF4C8
385D175AA0568B1EBC5F890A213483CD218194E15BDC61D51FEAC0401432859B5DCD253395DF
487A1FFAA708A64CE045EBF6C6DBB4C9ACC91DB63A3BC1680A697538F342AE8B6E022B1A4D77
293F596365503D5AA34712345D613E92A3B214CCCEC2A40D0E3A80E85CAEA6FA0145A6489E65
A252CE407FB0A3E1F6CE12D4FF4737AB514065A7A791F8D33DF8D52849FF5D97BFC8DBA6568F
B51667CD3F0179EC89C10D656AA50B2FF5305168AF18F77A28AC8573D8CBD277F8BC08482CC0
F23BBFC3C62C400C5F064143FC73B04FE2EA7D48F823DD9631968048820D81E97F2D6046992D
89770073B795682FE2FA6A9356EF89CDDBD94E66C7A61BC6D3A3FC6296432D576A90D30CD1FB
CF3D511E03374CA758A245FB43EF5DD1DBA49072A627E35C10F831569B3B1D57F8857AA5C7EB
7C0A9767BDC44D734D3F0794716B23F648310AF49C83E5AEB12DEDF627AF214C7C48F325F110
2545981025D38FA0BB579388CC5C94144F5643DCB8986714082941D358D35D2C8D8B3E5F731A
9C7940E81A03E3407B740234A2E20F1A7CE7F32B57D5F25B1788BC242F732540F0344950A6BB
6BD5BFE7D1D62B1596C7AC5796AD727A47864AA730E4FE4B0B36154BADCA57A83651D37F4344
A6520C67B41B3EF31444399933EF13F053627D361D7B3E5BD1D4B94FEE21034CA389BB4A6CD7
3C26021B23784BFA0BB621A17A13217D3CDA2B68284F41B869B70EE24A3ACF909A67686EB958
05C8E7EF912D0DBD5C3EAFD377F67F94B76BD18F35684F9C4FEFAEF7829534900B301A0EB355
7A73FAC07A977F81B55AC50A1386C7D6A4019A8C3BEC9BAC1D1D54E68E53E15BC58348207FA5
8BD989A20E2F3396354723AA3C823A957A133286080FBC124A11A42F416207AE673C0773C540
07F9420F92C6BCE228F5C93248E4BF7BCB85BB79FC6694ED1BB7E43E219B996905F6501948D0
575358667E52445EE9665035904804D45CF926D918288F1398B668941950AC0BB6FE53BCFC9F
DA2945245AEDCBD07CF07F85A7981B4CE9E84139A46DDAC48B8421FE99AEB64EA97F954B7581
75433E584D60CFFACAFC915B856E26DD41E000C1162F76D185F469D3271887505811E12E1558
D1ECC4562DE5BF7AA4C26CAB047001AFAE3C5D3EC9CEE9DD0B5EDEBEACC765924BA00624EC49
223CA7BE92CAC4583509AFF3016BCC446E14B5DD7D9A39007B5D222F70B0A977E0192E608016
0412B520A8E72F7BC93737E344F1C99ACB3630AEAC72D60D344D5CA010E962DE47CDA71D7045
87D266D0E584E17917CF528623677DA03619813BCBD6D360D945068E74F8EEDB6AEBF69C6E2D
2158B050DC402D55FDDF451AD0C1A407154B04A5904B6987662AF27231CF49118603A4E5DE4D
0B5AB40C7CCC71847EA1F330B2A54CE9CF1ABDD13208A6494D36C3FAD5CBEDF46D423BB07E72
8188F9BF937E0DB8D8566EFD8E056ACDC3F5689C8E19A27BE166A0EDB07BBA643EA6B53C4632
AE33E0616222A54391B8CCA32D7889F95F0039152B8DCCE8FFAFC0CCD4310FC6DCA19B0BB994
EE62E8085F3989737619C8C516F7A6A25F9E9887FD60A30CCEA017E50EBD5A2C32C553D0188C
FA26796AB530ACBB3EB090F8840112F6A52F0CA684D55CA2D414A36228D88A20B2EEC02D1823
92F0924987CF72AC92897708AF33BDCDB18C7437D103FE4A96DCEEF7788284878B4876333DE5
AF764617FCDD491C5C8095D19CD920DD3AD8B5B71A375F49520BBB6355EAC3A188D4FBDCD556
19EC3B6305F50D818F6EE5B5AE92DFE5A7F4F209E9F3CCBEDCDEB78AE0D055C3729429E9ED37
87B52545D480B5380E839374983B6224DFC56BC8BED147C1A8E7DFCB285AA1DB7716164CB63B
DAB011797C1A9BC76E73AB86958F325A7B7E15E987E90622824F2A12A220893F47737FE5B549
6696E7772E50A8CADA3B8C826724115A236C082389390FBD27B6C3BB10684CC720DCD875595B
39A47196058B06758E80443175359C3402E4E84AB850E42415516A19F6D10BA52369884BE3FA
91EB9A38D3AA07B0AA9294B7301FACA79B4A601E92428026C70A7C6300D3EC7256768B257FFE
BB593EB497CDE45D9ACB4B44CFDC6452AC1F9F612AF2C5C0BE0952971025E5919FE3836A145B
E9E264A8C7C36C658F2CCD1ACC9BB96A87F3A84ACAAD0A05F932907451EF8D050BEF2F693726
396152031B1F796103EE26C70551F75A9334D8FCAD954997D05E932C9F1F3A96E74C44E04FD1
8714A03D486F1CF8BA0688599FC8E6524E4D9BEB6816A4E2030D8EA06A3FC50183ABAD196668
F15BFA80281FDCCA6436B04CA4312E7FEEE8CE08CCBF90B1638B9FB57DB079755115F9FBC599
449BB101A7709FDFBA691318060F52BA610B818A849D50D2B11FBB0D8B5F859EC9ED3ECE3641
1D3D58D58F14827B14CD5C2A0EC4DCE72A73C4520E1DAB33AA33CA4CD3DFDB103C5579BDF050
6853A7D08821CE69D4614D1A7C679E9E9294526B50CC284ADF3EB0CAC4F6DF491756F1216105
E5C25D898C70EDACDFE0ADE3D98DAA6C07F6B2F04D3CB19D108D63B432BA6DB41E68121250E5
EBEA3D85B413AFC8D87B934D14A663A62B4B18841B78F5965EB483631B4232CDF87FC3159B35
4B6F70C2B595F46F43FCA2A19667B0F91F5EC7A31972B10462A6E83D5AFFA53F7C8E4B30436F
7DA31B6C41B831B30F9D98034708F1C5C3E34C451BC39AAFF97AE2C477748C7F96AFDCA8655C
9DBD84F30BC1B568C3F9B6F495F17E188CE2286696CCE2367ABCDB42E4000DBAE8BED2D6D187
B7E9FD616A17DF7BB16DDDAD03B29D51489C5092E032B6EC2F365774810771E2B03CE94F5B97
CEC5A896086909F0DD481C8028A720977FC8FBF5AA62F6CFD91A798210FDF28B3DF8F4F3937E
7306048DDA7C69AA5F4912E7C6192E72B1E9700A3FE380B3C9B63FB3153D48787B1DA476FD22
E986874E123E30E532167BB3F17323094FC84143CCB8D7C8B5EF54126BD9D5E3EAC00459B363
6803A6DD2B3673EE865B1FC2828AE38B74FD8C0E3FDAC44F7C5111D6BA2661DBC47A0D13E751
B10DE1E1346633EFA2607A7AD1DB1A062202C4FACD05E829E37661014675F2DF3775D88FE44E
7DDBB3AEA3EC27D7B4BF413D54DDBE1957CFF63A267BCB8EF99C27280879F5AED3B55C288E31
2D3BF0C631894B30E0C3C8179F277CC63A395D98B66F99A87351550545DFA98CAE027EE68D26
C098D586537A2B3F0AE3DE112AAD1EA133ADB4BBF5FEC1F1472AB941AA2DB1318CF1DABFA8EE
0A184398F9DBB7E6D29229830FE091B487F04D8FF7D1DAEE5253CB84FBE492A4D1E117BBD910
7F9EC521D924F115441F3ABE66446A1D4CED84CAFFD29E221C1E42C7379FF700ABE131DE0F36
3226A90ABFB0401E970DD4A2727EADB374F5E933EE1A11E9E85A9740E0B9A850F3EDA6E90477
0F69BC3EDBD52FFACC16513D4EEAAA948E533A8D693D184660DD89FF3F945CCD2D5F602CC243
AB739B4D488E2577E58648D78716FAD157FBB814E0C7991764A3E0BF9D6DA3925E634A1FB3D6
DE50B563D90DC8AE3BE33C6369A1A96BA6FB8C16F2A0DB154373ADFF4E920C0B32EC6AEE5588
7D4670A2C2340A12556E5B9D688FC299283E19469A14A8068EFA9B489522E2F44C293278D138
C732129AA7D97A8EE41C30D2F40E8A7E241CE4D1596E6A1CD065E90167A52AEDD2635E746514
4DF866E99DAC70F78425C9E68340EA5D19AD3D0FA0F944D2AD489911EB5ABEBD7B48BB956E8A
C0948AA564552395DE41AA2A72646FB369AE9D08958F759AFC10185BAB4B34349C12294ABC68
02BB1EBE3357F3B0C0CA227067F3768E57DBCA68C2D1955F5D18A7BE0B9805FC2BC4B3287EF1
A9D16350E5997F642ED6A9BBF46A68AA0BA080102F020E5A331FDF8217FC1BF0DA21EA7F20E9
BE95C1B59FBB458E4A5CB47DB38FB3A3C0CEAC39788794E47ECDD42B81C5F8DC6B6E9AF7349B
ABC8FA79FC77DF3B5B303AA5DD5A2949CEAC2FD202423A918F8355253F20CD86D49D8AC956B0
2993C270FE41C6C7C4FBA75B10A777191F33618E4158DD046C5BA0B145A0B04E18A5F4CA5A76
62BF6B913975D6FA9B4D1E6B71F0ECA1029ED9440C91EDB1D2467657D9ECFD8981EACD537757
A8BAA5318631C688D1D865D9645B4E52CCB9DB3D6549A792A1F207DF608B6278DEC2956A2B00
AA3783630F6C516D448DACCF72C53557436AE09B66E0EF1F1156945AFA125EAE9CED158B8301
F19EFB2DAA86A71AFCE1B319F87F0955FB113973ADEB7F175590020BEAA16DB43BB361FEC1DC
F3C4D21A58D9D01F40B86F5059C437ECF83367EA8ACB91BAF187E03FC51CBF4C07A674C5F63E
7C7F8400C171F93AC7D3DE26D141938CFBD6163240565995F44A6254C840C1B4BD66F05C2C08
B55747540D267DEEB6673F1ED54AC99BA83D15D6354B1DF05680BB93B9237883261A3A475B13
8373C573EFEF4011F042102289A50DC31EAC543DF910695B1971D03C256F258CA48878E6C1F3
170017E3EE97B9B705AD2241AC927A86B4A44F05F37D260F451C0FB10DAED031D67872764FA2
73A95C183E9BE8497C3F68236F32027F8C01FD707D2CBDD339B07DFAEF35F9EFA1D43A245ABA
59558C3C0B172E30C3A64ED18C9EB7141A00F8862583CC9AB16B9184E09910FF30EAF0638988
CF54D6E40E2A0FF8E5832CEF7DC239EE90FD1EB079D0345DCDCE0A6D9EC621DC6EA7AEC3EEE0
9EAA05CB6505865B90274FA890BB64D19D74A618A951E3B6E74AE3C65C84CB5D48FFE4ECB86C
859CCE068C1665C7AA9D982B951B95E10C6EC1DFF747EBB981B380056D9EC5125CE14266BF81
036A581AA8F23D76432C7E846BC7D737EF0F3B91262E7CBBA277966545940C67CF4FEB14682B
F557E45E6F44B120C90862F3F1DA74E9B0B35571CCA2C2860168821289D2F836897569D07277
4CECEFB2CEB1F55460EA5AEB252A2A9F653C8B646DABB7D1DD531E1DA1C098CC5E5E41893944
EBC6DA81CE44D8096813F4323E97BADBF6C2A118942E44874E63004F7B925D6F5B3A15A42C68
08062EED0880A8893C816DEDF67496F49C25CA5F2BB1F1F49B178490C1EC6AEC6BB3590005F4
0F339C7EFAAC56A88F132F9943EDABB2FD1F3B8B1CA97C90D376F5F62C5EC6B3AA6C88EA7BB2
8EB8687E8D24498CE4C7CC7C2DC4C60BEADAB36D50F0705606C4777BE8F391B7856056C87740
ED507A3C4AEC3C115F837DE4A620B2B8A028E9CE52213F3E7C425E0CA2756EFDFD243E55E094
020FC74B820530051C414A32129CEA783402238EFA46B98348AD5CBF27B1137BA5D7AC1EA2D6
E8DF85908325F75BFC130BBF0B1056F0F1815BDA877BF922F7F71488CD63F22107AB224DA5AF
9F0BD07526DF7B78EA18223EEA608CB614BD38228782A8F6DD42D559A894B814F08F9120BA31
4FC85D800B6909C98735B0BEA839012811ECDA1B5AC66974262A232EB06DAF952B70E07BB417
767FD420961262FC68C7F9C4084FC324D1B7C9550DB0C3AA665CCCDF684EF077CF33DC707A14
8E325DD3FCEFB13B3D531849202F83A7909406C1F2190623658C0F9E483B8EC4379F43360F31
C1C259F4A8DD369405AFFA2FD4FF1FC6BF7C57BE200DF6F16D82FE62F9DAA00D10BFB79FE035
1C7D5044BB6E6EF64914651EC046E9A6E9544E7FB5A983007A59DC78EFACD8BAC06DC49148D0
DF947B24DB81551C6E8D05A75DBAD023F1C600F6455EB1783AEE8E2841B63659C57BC309605F
E21524B5B59865EC7EAF6DF1CAC0032B10B9736DA197620B86125DB8A97F6D7E8E305F92B491
2641B692BFD1B98193967D2847EDF3C7E1EFCEE96B1239CDD35FF4C843564827F9F5ADC858BA
2B911637205A9FA8312675D021B259F56342E9B395D3EBF837E945C7F08494FC2960B92F7F6B
BA9BC2F5455B5582FD670E6500DDCE38653D5DEC5497726C15F3DDF885302A430F9B7946BB9A
B2D9EFB3C3F81AD02394AA54141E3849B5ED816A717044BAB44EAC003A8095BC03E6B6B11CDE
C77E979FECF2E780AFA121E03278FC99D25C0BD241C657558AD88128F0BA7FA7482EE6F643BC
EEE670E0BDD932290624086DF2198CA3BCDBB976379EDC7204607F8DB0F6457B3BCAC7EBA651
3E9B8DCF6A47C075E7418B0CADE13C43180970D4BA6EFCF574C4F9DA83B289A7A6D2A495B6FF
32316B905F878579ED5565F7509437FA02A28C87083FDA09105649BEEEE44FD1A80B0092F064
F7600D3BEA4C549E914AD8D595D8A278AEB78B5751EB2FEB3B8099AE0495ECEEDBD747361DF1
5659A9C64718304F7780A881472317605A38A9C3F7A39E03FB7169390A5282ACDAC387D888FA
9AC46D3885E65BE61519C131016D65F85BD2D1D6B321ED9BDB5F7210C4F362254CEB44CE75E7
9D8AEBB96654A28E96BE766C19439E26FFEF7F185BF62856B0FDE276533CC68618B17221426F
86406A5B0C999F7468D764DD92A632BC5998CE34724E7DDEBB53E9C125A2BE5B2712D029AFDB
A0FF9826583FD261C85A79517E0C89058D87E2105DDD8BA7E277E9BCB1CEA56D64F2DDB3A3E9
2751D718E18AE8EB8D55D1A35EDAFF938C5F6D95EC089C727953C3FF6DE24F7FCDB38CF73AB4
1EBE06A67AD901BA536EE1D5B208B86E692498215075ABC3AF597DBF93AA87B584876A167D59
3C5FC0C487235B6CD349D3EDAAB4265DA66F7C4EE4967768FD89C7C28A64C97E20C3A34973B9
142314A1511A6FC6DEB13DD451EF69710513F18DD1C960E712D73B1DB1E8E534096C255C6398
7AB4D32E1A8BFE145777FD1CA548762F7B4F7447D03A61E770C12ACE3860C6189B3D0E41F055
1CF722CB3DC09073F0567D0BE9F39E8BFB0F338D6EFD8E1279CBD43F6C4A063819ACA553C54A
A2346EB9D433C5426BCB9B81CE88B557A2D59BC7863397A9994DD6BFD6C7C7FAAC380B128642
A86241BBF8A4FFE9887758F94A153D6B2C138442C5AE670FB50218D1FD57D841AF8F328B3317
3E4B8AC9B6DB3006741EB323A502045702EEDE107DFCBD4081770E3D07DCF9CFCCB7E56E3F0C
7DA3767AC373A12F3164F81B493F12D549AC50605430DAFCBD4A9F49EDCA82B594FF829ED3BA
E596A825A618D49A96A16B61F8E8B0E5B3FA032561747B96FA1935D74D0130AE01ACCB3DA668
A887F6D09741836DE17DABB950D84738DC5FF722838B507DFA7F4A88DE4D9AAB12FF9A341DB2
7ABB24FB8686161443341A975CC810AD1A7E352037DAFC33682A5556E6FE46BCD08277461C74
CAF2EC1CA2DB253D82DC72FFCF5CD471900B7C0F2390AAA4EB6196020E305EDCE04643A2FAAA
4FA9DF91D3E21121DA099CE25975D4C950DFF59F5E4CA3F426AF7B33B958ED1FF3E1D1970EEA
0B97DA7212E8A42124372638CFFDB6C5DAC17629C3D04FF2344DF5CB39F6F156B6B8A4BF38C7
7D421A26ED40EB2E4E1D274CE7B5934C69506C1705AD076C58CCC5E27C580EC2DD978DD1074D
286163D79BAF91E3FF30A507CF1C1691F60E28C780B8F2B2CD7A66E18413094DD4381A15CC3A
2B8CA189320DF07DD3A25580DCDF91A2B33B3D8FC89CE71CC0878C0D5D4FD12545BDC7FE4AF1
B9CBA1652DC8C076DF6DD029AD8B09D75631B4DE63B3EE38B3D133D0D3B7D6C991CBAE09A8AC
A77AD4E0351AD54D2A4A1A2C84B62A8DC9646EA4CFD1B66AF0707EB5FCFFA78223898C0F377A
D55E5657661BC1DEE331CBD9FEC4677181D3577978EC08DBDA4C684CD0266CE6D1E487CFAC64
EF8462873D034AD7D22518A7E767BA80E8514317710A71A228F76A66AD59B345C4DBF03E056E
B6C9B2C444F2199C8488C037C37934D449F0049E14C588523D9ACC7850538DA9EA98E537418F
811AFB492818C285BDB80A31987B41A1671A77AB530EBE57D8B71B6F9C95F7474FAEC60705C2
132010887AD668B1D7D53E26B480590C28367553EF4CD87EE973A99346FBD55A2AB67635DBF2
DF12D4CED638B733A9214DA2B898CBD41632807B34FAFDA648B3C1F53D0E5C835B0CD3803CCB
34A447B76A5BCA240CB0B1DB849D40DCE5FC8F2E3F711FF47E7B0E1A71CABBCB4C42E2651F48
2C194C301B4FFDE9F787F9AC37C620AD634E7D1BEE6BF1DC92ACB38C1E6FFC4F531F5E8959E5
5C5D6A97DAF9B11841EE4B14C4BA58E7F0DC9AFF440E2A5E61B046B0D47D4ED606B4055077BF
C0D7C033B3E4FB817A02BE0891FA360B62058CFABFA60198F426BB7CA31877E4273912547E17
38446C2816CCC6B796898310CE86F1F01654CF02B7E6F647E9A884041655A76D9D646E2E0098
B15123DE9ECE8580C5E8B36946F2AECBD1922D21D15092617486D2A7DA0419C430FF83A76428
D183C15D0520B821C22E0AA806EAEDD6DF9392B6DD93DB8F22072044883F7102DC2ABF3AB094
B1CFF83BFAFDBC0F115D1CA965885356039BD90C76A78BFF2B7F931EC1A762B750146183F408
0B7161D9E313C90A3D0BA031DCA89F5155EF2C77D1E9949D07A2A318ED5BB9F43EA2DF854DD1
5C45C09595450B0CC355DB139F6A15792D516FFBF05D2FFDE2CCB492BC5F8582C88695EB42FF
075F1393D04E19E05BBB51E286F578EE126792068106DB3960CA7E7DA8838C52381D1853E731
F46AFC759825CDFD1C50CCA5E63E1A24A9D3EB21A032CD4333648AB4B6725EF7EE644BC1C072
06312E241AE8C4206F8D211752AC7CB76F2569E2213C113A3D4F22772FB6C2DF9461DA1B36A0
860CF2DD52CEBA0CB8FA5134D94438458DC4EF5661660931F0A13A88452FABBA8805471B38D7
76FCFC616C602F91AD0072B92A13DA5808F716287712DE4F6ACC57630B3C4343C37C5156FB61
0F2455795CC9E6804DE0C7B6B16DA5B274460BDFAA1A5249A3219CAA1DBDA045CE35C3B34D62
8D0A6E043935F09635D6063592DFEE4E8713FB04A74E0BBF8BDD6EFDDD86D6EAB693DF65D7E7
1B96D3AB69D78763F6C06B6EE1FC2B8BFC274D33E58F7C13E46F884F64CD2FF2091D63D8D0D2
305704D42A18C353B55956F11057A920DC00A5C78EE5C61E0AB73272866A3B5C6A46683CD4F7
61F267FC8E98A5EE0E55A9D8CBA48CDE5215C96D0FB18F757705697C13055D7F2AF893A097B5
94FC5200A1FFF0D231487F94C6217AD21609874754AFB8DE70A84F92EB3999AD348EE6BAEFB4
76097FF1CB8BDAFCE224290BFAA04D3184D02EA2C8525232B1F62D8A3EBC5ED8D2AA1F7B009C
83D427E281551583FF6D1690692648D7E65E7C98B67C8D181CE0736F1518F1509C2B13EF0135
118FADB78E58FB01F90FD846FD9E7FDEA4A8CC481333305B1E954D0037FDFB31D34BDAFF1E1C
0AD0F30683BFCB8510C30ECA21008147A17589E72A8B2971C2C6E8D45259BE84E4884FA79791
F7BC3ABFD138B8B4556BB75E4F68BB934676F740E015396C5DDCD224834F53DCC17FB33BC79E
15374249C1D06A1BF20F3B29858DDB1CFD470449E098195AA1A64C187FBFE6488B89DB49851B
AB87C77B617543570E105C27E7AC73583F02D0541AFD6139AE5EBD8382464456731B67797884
12DFC026575E27A197C5295E3A261864C9AA91442ED12D3024DB79CD1025564F9CBF56862440
00BF2CAA92DF14DB97BD2A10535891FF3A84008209D9CAD7566B8800EE7287EDE867D79ECADA
749AA5E7AD22B01A9F211AB18E5F755E6736BB2FDB47E4152AAF887AFF350A7A74EB69430287
AFC58D46E2C171ABA4CCA01792B0DD4B0A67624D82B71B19C331E355A909EAC5BB94802233E6
E3310F97DA3C5D40EA74ED3CE0D283233D1C5907FE29DAD678A9C3309402167881D3DAA74E3F
E4255AC1A73F15F90DDB601D827332115538F1BF93811A35B441E4442327D7FA2DD901F3D66B
7E79E09F83F9BEF5F5FE1C01FEE76381AD3394861155CD08FDF2EC5778E4CBA57ACDEFE6A351
91C613CF12C946AD8B2B40B6026B5BD4B9CD909D1779782F4AF32D295B2E8F881A18D2CB0570
104768449EE2E960F082921BE9AD82731065B3C3EF18ABA3F9BEEE050545D766B4BB012CB05E
36C98916000B22F7DD0D60090FD5812D9C7E0B7F109EEB4C225C9B6260F687A39429E4EE4DCB
2B1C5F8CFAE108E005887B30A949DF06BCFC34700B69A5103330E400E4666A1D5C758B6D5C2A
D8A733882AC3CF1E6A1395534C3A9300371D3992436227635313531D453AE6142BC47F086F80
5FAAE0543B21D52962343B25F64BD46CA8F63F25BEC767324D38576447056A6F508EFB68E491
AF661B46F7BA81DA215FE797A16EF03CFA53DB0B51E39A7C71897AC5BA31D902964AAF3B148E
7ADA10FB7603D4C9B1585312DB95625D45A286228DBE2217D6BBA65C9A7DCBBDB7BACB5BEEFA
3C8A43F848F473D9BF37ABE92A2CA91D26707AC230F577F7A1618A02D2DCA08BB84B3343F917
5EBB3E89B36A46EB75B83B62DF50B0108D6118F790DABBDE765D53B27CAC6ABE7B5440325ADE
E21BE51B9367EB9CDF8FED87A081679E7AE6AEFBB6E6589CC42556FD865F312B54CFF53284CD
F8B442C4B3326EEB8D39ABB1E0D2E95B316E87B7615B0C37E908D4391F1AD9D2715E94BF8DE5
7A1C624512C23FBA4D519150B26A4F13BE2E9CED538D80EF807612D561DC8D3F5B602F4886B8
C9F2466C5C948EC6DAE5B87D00C03CAFF6C7C241F4B965A6C6368A30013EE2AD5E1E50009430
8AECC238F659E736965842B290ADE6F05B5152A27FBDE7A90FD97CD59509F5F05FAB13461BD7
374399BC6DA554ACD718E4F67D8696718FACF56D5AC10468CAC7833BA92C74BF186EC50FDBB0
43223974986E2012C1D18DF40F5A9C52FD3997DF5F9E5F3A827D50B6EBD6909E7A0DE29FB979
20A03E32422CD71D66BF5C52357A8D8EB241C6C8BE42B67CFAC2C3777A0FA43D2838DB8250E2
B5B8EFD3C36780B19339332F67D477CD3600B04C05B87B7A41D0DEF6BF82FADA771804A5A756
BEC34265B6FC9E11790F8D1306D36C0514F6BCC76E93B584BDF86384AC22A96E31549EEC6890
9FD34BFCC467CC742DFA628B15ABB7AA6A181DC3AC0FD08A20979480ABC06FCFBD81E7D4EA35
8839DB58C30C3A7EB5D698CCA371F7630939149EB897B24F6D957C084CF0E2932331FB5C0B50
1068B4551812A9B9ABD4EC27DF7CE824D672FFE6E5971ECF816F447482130819902D26039390
F84FB513D2D89662DEFD5725EB153A074C84DAB1D4D666D6E1A4AE2B078AC16F80CAA6314A1F
63FB6D7EB530CCD833EE1F4946790344CA86668CB3DE69C3013C73C971D7BF583095539DBE02
E8F18E2DA3BF9FDE9CC5A5E859F9E5BAC8721E36A1D50192140ED21FA6FCC212ED167A50E940
B38A0AB78D3053507500D768D1EA9C7BCC7B3100A05D1DB9350EE33C7A492F4543B45E25740A
A99A76A1DC7940B8B52883974B07A407DF7560CDF1B103C75746FCFC418580816597424C0AA3
6E0DD38EAF524E593512174A0EBCAC0488958B01C1199D786F93CCEFC14D219B2DBABD5B50C5
7AC6C195FE51A6FAC81DB1FAE5052F21B3AF4CE8280BDEB5F27E15F069ECE57B0B628858947E
BCF41C69D0C023D67CD21B9E0DB1366BA5ABEBFB9C98752A6C63CF1C8333D7185403199B82E9
E5FA15D33E646E63459352F829FC039EF185E004CC63FE21BFBEEE4C8102CEF70F56AAB4E35C
4A7AD51C85D985F42D54E4CF5678BA7EF4BB3C768056FD223FBD6AE0A390E0E7489F5582D4AD
805A6ED2E5CC0502BE6F58CEB1E3DE8CD4425A053F84FF85CA7A1B9C679B9B57457F91C441D9
28946925545234C45D58AE796A7F21B960C8DD3195854FF59E6914DCCA262AF6E5DB7F150976
B91527A1F0F00CAA0953E082F5DFEA46C0029BED4EFF22BE6A32A9BB591334B168DA599128F4
B31034E20C0EFD5E532B9DED85E5633AE8631E83EC1D6069FF76AA302B99F88E0E4070E4B93E
1CFE528123928AE67733BF6FE6068C22328F16AE3FA5B130D9651B531EA4E197AE3D3C169485
03F1842D967EB3C5504E13986933CC0A3228269139D68AAF3480875149E25ACD6AA8E14F5C21
FD12096E274A1CB1223159AE0B531804C1A8F8DBB9101D3D0E435292F0452990AC4A64605865
10253ED58CC6FC71EEA6EA99C6F96F029B65F1C24CF911A35076564CEF64DBBF82F87DE0C4F2
FAF3E56A1659D2B56DDA42A3F63E277645B9BCD5C92C05C8B05ADF7535B3AA4C341358C7C792
7B8E9937C087E5E142B14DBE5E5F709634AE97BC9F2AA82A2F3C3DC16B1ABBD1E3F33559F867
0E1DC70A9E3B0B717EA458518357740B75A9B2B9CB076E81BB95D786D4720DD59120200DFE86
0B6E40F2C723DADB84BAE83A80A7C874B9D36A1843D3AB1DC330EB986D25D6E036940F89670C
D41D7FF20A9E19EE36A1C334C779093950BEA2854369F4EF24DDE7B17E4581C9C2F5E5D749BF
C7A6A9433EF9DC465362BB2B252D7505369B40AB4ED1280C690599765D3F6C395D4F3955DC9E
7ADCACD0F85B34E33C1D5B0DA79E54132E115002728FBCC9DEF9AD99C3C72EF5FB77D883F47E
417BD26CC8A13824297BBE6102CF7F60013B3410E61D06F4D9AFE6D9EAFC92B97459A0433A89
28FD24240F6F3E388373EFAC1BEDCB5DAD56B55D248DFA546329CE77F4F94C388362E8361956
38066D636A1E9DE34A86088831A498A52821E2843D704BC01D386E7F268855AF107AB35982B5
9A474A271C205B19EF717C66CDCFFF8E53E207C2C1FBFB8129F045F0C150A05333787D5DD2D7
322B3EC6F9193A891C3C1B414F27FEA3635A1C1D88C21C18CDC91805F3214E8536500B67AC22
EE4FC1AAF6A12BE4F8FE82E021A734937F0A05EB3DE81D728121FA862A4993320C1FAFB719EF
1851929AC2EFBE7C1E8D2A3E35B25DBE28DAC5DDCE834663B196E17BE78FEF40BE1FF3885293
DC9B6DB2A79734080730556C0B64D66176078983B062CB073D32000E12E8CCE47FF23F877078
B5A42207A050C62E39733BCDF87F6B71E39758F531CF55A874FE76548CCF8ECD227D9C0D76DA
8F0EA5B1971E71559203F2C731BF31F9563A58D6D110EA507BB7734D3BAA443805C67207F333
7FFE88E0A052EAB7B73296E7011FBEBC3984ABF533821F38A1483B88EED29606B25619ACF5E2
1E6764DFAC4559E8AB2E8B987C05CB3F23F7A9B18FC54C10E59B1DCE3E3BEE7299F9E98CB58D
F0FB48AA79C6B87476E4BCB73DE1EB9603CEF10B6FF191174E23741CFC9711EE68311A8E739D
C52A1B69B6BD1AFD81DF4F6B1AE5DF916FAF6C6FA778F9330059FB88B5E97BA8B864E485B274
7A1A7CF32E259AB7737530E55B2FE980CCC088C3F5E2815E960BEAA9ECAD530436A2C0B86F3C
3AEF098A8DD927AD13F9FF34B87A1A9F07F455B913CF1147270ACC6DB471E53DC3715CFF25AC
42D6786C3E9D90EA77873B301CAB084B147271C0CDD6E088BF710114AC00E1D6D215E5445605
034B771390D0FF76D2F7DC341A065F905F258D223B0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300 (wetice-ieee.dvi)
@start /Fa 134[17 1[25 17 19 10 15 15 19 19 19 19 27
10 2[10 19 19 10 17 19 17 19 19 10[23 1[21 19 23 1[23
27 25 31 1[25 1[12 3[23 27 25 23 23 6[12 19 1[19 2[19
1[19 19 1[10 9 12 3[12 12 12 36[19 2[{ TeXBase1Encoding ReEncodeFont }
50 37.500000 /Times-Italic rf /Fb 87[12 17[19 27[17 19
19 27 19 19 10 15 12 1[19 19 19 29 10 19 10 10 19 19
12 17 19 17 19 17 3[12 1[12 23 2[35 27 27 23 21 25 1[21
27 27 33 23 27 15 12 27 27 21 23 27 25 25 27 6[10 19
19 19 19 19 19 19 19 19 19 1[9 12 9 21 1[12 12 37[21
2[{ TeXBase1Encoding ReEncodeFont }70 37.500000 /Times-Roman
rf /Fc 134[22 1[22 22 22 22 22 22 1[22 22 22 22 22 1[22
22 22 22 22 22 22 22 22 22 1[22 8[22 5[22 4[22 3[22 1[22
1[22 2[22 2[22 13[22 22 4[22 22 22 4[22 34[{
 TeXBase1Encoding ReEncodeFont }37 37.500000 /Courier
rf /Fd 105[21 32[23 14 16 18 2[21 23 1[12 2[12 3[18 1[18
1[21 94[23 2[{ TeXBase1Encoding ReEncodeFont }13 41.666668
/Times-Bold rf /Fe 134[25 3[25 25 25 25 1[25 25 25 25
3[25 2[25 25 25 25 25 25 16[25 8[25 71[{ TeXBase1Encoding ReEncodeFont }
18 41.666668 /Courier rf /Ff 134[23 3[25 14 23 16 1[25
25 25 1[12 1[12 12 25 25 1[23 25 23 25 23 16[28 9[25
2[30 1[30 9[23 23 23 23 23 23 23 2[12 43[25 2[{
 TeXBase1Encoding ReEncodeFont }31 41.666668 /Helvetica-Bold
rf /Fg 28 120 df<EB0FE0EB7FF8EBF81C3801E07C1203EA07C0A2143891C7FCA3EBC1
FEB5FCA23807C03EB0393FF9FFC0A21A20809F1D>12 D<1238127C12FEA3127C12380707
7C860F>46 D<137013F0120712FF12F91201B3A4387FFFC0A2121D7D9C1A>49
D<EA03FC381FFF8038381FC0387C07E038FE03F0A214F81301127C1238EA000314F0A2EB
07E0EB0FC01400131E5B13705B3801C018EA0380EA0600481338381FFFF05A5AB5FCA215
1D7E9C1A>I<EA03FC380FFF80381C0FC0383C07E0387E03F0A31307003C13E01200EB0F
C0EB3F803803FE005B38000F80EB07C0EB03E014F014F81238127C12FEA214F012FC3878
07E0383C0FC0381FFF803803FC00151D7E9C1A>I<EB01C013031307A2130F131F133B13
73136313C3EA01831203EA0703120E120C12181238127012E0B512FEA2380007C0A6EBFF
FEA2171D7F9C1A>I<B512FEECFFC03907E007F0EC01F86E7E157E81A2ED1F80A316C0A9
1680A3ED3F00A2157E5D4A5AEC07F0B612C04AC7FC221F7E9E28>68
D<D8FFE0EC3FF86D147F00071600D806F814DFA3017CEB019FA26DEB031FA26D1306A290
380F800CA2903807C018A3903803E030A2903801F060A2903800F8C0A2EC7D80A2EC3F00
A3141ED8FFF0903803FFF8140C2D1F7E9E32>77 D<EB1FF890B5FC3901F81F803907E007
E0390FC003F0391F8001F890C7FC4814FC4814FE007E147EA200FE147FA9007E147E007F
14FEA26C14FCEB8001001F14F8390FC003F03907E007E03901F81F806CB51200EB1FF820
1F7D9E27>79 D<B512FEECFF803907E00FE0EC03F0EC01F8A215FCA515F8A2EC03F0EC0F
E090B51280ECFE0001E0C7FCACB5FCA21E1F7E9E24>I<EA07FC381FFF80383F07C0EB03
E0EB01F0A2120C1200133FEA07FDEA1F81EA3E01127C12F8A3EAFC02EA7E0C383FF87E38
0FE03E17147F9319>97 D<EA01FE3807FF80381F0FC0123EA2127CEB030000FCC7FCA612
7C127E003E1360003F13C0EA1F813807FF00EA01FC13147E9317>99
D<EB07F8A21300AAEA01F8EA07FEEA1F83EA3E01EA7E00127CA212FCA6127CA2127EEA3E
01EA1F07380FFEFFEA03F818207E9F1D>I<EA01FE3807FF80380F83C0381E01E0383E00
F05A14F812FCB5FCA200FCC7FCA3127CA26C1318121E380F80703807FFE0C6138015147F
9318>I<EB3F80EBFFC03803E3E0EA07C71387120FEB83C0EB8000A5EAFFFCA2EA0F80B0
EA7FF8A213207F9F10>I<B4FCA2121FAAEB0FC0EB3FE0EB61F0EBC0F813801300AD38FF
E7FFA218207D9F1D>104 D<121C123E127FA3123E121CC7FCA6B4FCA2121FB0EAFFE0A2
0B217EA00E>I<B4FCA2121FB3AAEAFFE0A20B207E9F0E>108 D<3AFE0FE03F8090391FF0
7FC03A1E70F9C3E09039407D01F0EB807E121FEB007CAC3AFFE3FF8FFEA227147D932C>
I<38FE0FC0EB3FE0381E61F0EBC0F81380EA1F00AD38FFE7FFA218147D931D>I<48B4FC
000713C0381F83F0383E00F8A248137CA200FC137EA6007C137CA26C13F8A2381F83F038
07FFC00001130017147F931A>I<38FF1FC0EB7FF0381FE1F8EB80FCEB007EA2143E143F
A6143E147E147CEB80FCEBC1F8EB7FE0EB1F8090C7FCA7EAFFE0A2181D7E931D>I<EAFE
3EEB7F80381ECFC0138FA2121FEB030090C7FCABEAFFF0A212147E9316>114
D<EA0FE6EA3FFEEA701EEA600EEAE006A2EAF800EAFFC0EA7FF8EA3FFCEA1FFE1203EA00
1FEAC007A212E0EAF006EAF81EEAFFFCEAC7F010147E9315>I<1203A45AA25AA2123FEA
FFFCA2EA1F00AA1306A5EA0F8CEA07F8EA03F00F1D7F9C14>I<38FF07F8A2EA1F00AD13
01A2EA0F063807FCFF6C5A18147D931D>I<39FFE07F80A2391F001C00380F8018A26C6C
5AA26C6C5AA2EBF0E000015B13F900005B13FF6DC7FCA2133EA2131CA219147F931C>I<
3AFFC7FE1FE0A23A1F00F0030014F8D80F801306A29038C1BC0E0007140CEBC3BE3903E3
1E18A29038F60F380001143001FE13B03900FC07E0A2EBF80301785BA290383001802314
7F9326>I E /Fh 1 16 df<EA03C0EA0FF0EA1FF8EA3FFCEA7FFEA2B5FCA4EA7FFEA2EA
3FFCEA1FF8EA0FF0EA03C010107E9115>15 D E /Fi 107[18 18
24[18 21 21 30 21 21 12 16 14 21 21 21 21 32 12 21 12
12 21 21 14 18 21 18 21 18 3[14 1[14 3[39 2[25 23 28
1[23 30 30 37 25 30 16 14 30 30 23 25 30 28 28 30 6[12
21 21 21 21 21 21 21 21 21 21 12 10 14 10 2[14 14 14
35[23 23 2[{ TeXBase1Encoding ReEncodeFont }70 41.666668
/Times-Roman rf /Fj 133[16 18 18 28 18 21 12 16 16 1[21
21 21 30 12 1[12 12 21 21 12 18 21 18 21 21 8[25 35 25
1[23 21 25 30 25 30 1[35 23 1[18 2[30 25 25 30 28 1[25
16[21 12 10 14 10 2[14 14 36[21 21 2[{ TeXBase1Encoding ReEncodeFont }
51 41.666668 /Times-Italic rf /Fk 136[36 1[28 17 19 22
28 1[25 28 41 14 28 1[14 1[25 17 22 28 22 28 25 13[28
36 1[30 39 1[47 3[19 2[30 2[36 1[36 10[25 25 25 25 25
25 2[12 46[{ TeXBase1Encoding ReEncodeFont }35 50.000000
/Times-Bold rf /Fl 134[10 1[15 10 10 6 8 7 1[10 10 10
16 6 10 1[6 10 10 7 9 10 9 10 9 16[12 6[7 15 2[13 1[14
9[10 1[10 5[10 1[6 5 1[5 44[{ TeXBase1Encoding ReEncodeFont }33
20.833334 /Times-Roman rf /Fm 133[22 25 1[36 1[25 14
19 17 2[25 25 39 14 2[14 25 1[17 22 25 22 1[22 6[30 5[30
28 9[17 36 2[30 1[33 9[25 25 5[25 1[25 2[17 12 44[{
 TeXBase1Encoding ReEncodeFont }31 50.000000 /Times-Roman
rf /Fn 133[19 5[14 1[19 2[25 25 1[14 22 1[14 25 1[14
22 1[22 25 19[33 41 1[33 7[33 1[30 46 17[12 46[{
 TeXBase1Encoding ReEncodeFont }20 50.000000 /Times-Italic
rf /Fo 134[30 3[33 20 23 27 2[30 33 50 2[20 17 2[20 27
33 27 33 30 13[33 2[37 47 5[23 4[43 2[43 19[20 45[{
 TeXBase1Encoding ReEncodeFont }23 59.999973 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
/setpagedevice where {
pop 1 dict dup /PageSize [ 595 842 ] put setpagedevice
} {
statusdict /a4tray known {
statusdict begin a4tray end
/a4 where { pop a4 } if
} {
/a4 where {
pop a4
} {
statusdict /setpage known {
statusdict begin
595 842 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 148 187 a Fo(A)15 b(Pr)o(oduct)f(Inf)o(ormation)g(System)g
(based)h(on)g(an)g(Object-Oriented)612 262 y(Inter)o(net)f(Database)h
(System)440 420 y Fn(A.)e(K)n(obler)204 500 y Fm(Institute)f(for)g
(Information)e(Systems)487 558 y(ETH)239 616 y(CH-8092)i(Zurich,)h
(Switzerland)348 697 y Fn(kobler@inf)o(.ethz.c)o(h)1216
420 y(M.)g(C.)g(Norrie)1013 500 y Fm(Institute)f(for)f(Information)g
(Systems)1296 558 y(ETH)1047 616 y(CH-8092)h(Zurich,)h(Switzerland)1157
697 y Fn(norrie@inf)o(.ethz.c)o(h)-41 872 y Fl(Copyright)7
b(1997)h(IEEE.)d(Personal)i(use)g(of)f(this)g(material)h(is)f
(permitted.)k(Ho)o(we)o(ver)o(,)f(permission)e(to)g(reprint/republish)g
(this)-91 922 y(material)g(for)h(advertising)g(or)g(promotional)g
(purposes)i(or)d(for)h(creating)g(ne)o(w)g(collecti)o(ve)g(works)g(for)
g(resale)g(or)f(redistribution)h(to)-91 972 y(servers)d(or)h(lists,)f
(or)g(to)h(reuse)g(any)f(copyrighted)j(component)f(of)e(this)h(work)f
(in)h(other)f(works)h(must)g(be)f(obtained)i(from)f(the)f(IEEE.)308
1071 y Fk(Abstract)-41 1173 y Fj(W)l(e)10 b(pr)n(esent)g(a)g(pr)n
(oduct)f(information)d(system)11 b(whic)o(h)e(supports)-91
1223 y(enterprise-wide)17 b(access)h(to)f(pr)n(oduct)g(structur)n(e)g
(data)g(thr)n(ough)-91 1273 y(the)11 b(W)l(orld-W)n(ide)d(W)l(eb)j
(\(WWW\).)f(This)h(information)d(system)k(pr)n(o-)-91
1323 y(vides)18 b(r)n(eady)g(access)h(to)e(data)g(on)g(pr)n(oducts,)i
(their)e(structur)n(es,)-91 1373 y(variants)h(and)g(con\002gur)o
(ations.)38 b(T)l(o)19 b(meet)g(the)g(needs)h(of)e(var)o(-)-91
1423 y(ious)i(enterprises)h(and)e(types)i(of)f(user)-5
b(,)25 b(the)20 b(system)h(is)f(based)-91 1472 y(on)e(a)h(pr)n(oduct)f
(data)f(model)i(whic)o(h)f(is)h(both)e(\003e)o(xible)i(and)f(e)o(x-)-91
1522 y(tensible)o(.)49 b(The)22 b(system)i(has)e(been)g(implemented)g
(using)f(the)-91 1572 y(OMS)11 b(object-oriented)g(database)g
(management)f(system)j(and)e(its)-91 1622 y(generic)f(WWW)f(interface)o
(.)-91 1795 y Fk(1.)k(Intr)o(oduction)-41 1910 y Fi(Fundamental)8
b(to)f(the)h(operation)f(of)h(global)e(and)j(virtual)d(manu-)-91
1960 y(facturing)h(enterprises)i(is)f(ready)i(access)g(to)f(product)e
(data)i(by)g(a)g(v)o(a-)-91 2010 y(riety)f(of)h(employee)g(types)f
(such)i(as)f(project)g(managers,)h(designers)-91 2060
y(and)g(salesmen.)k(Such)c(information)e(includes)h(the)g(types)h(of)f
(prod-)-91 2110 y(ucts)g(a)o(v)o(ailable,)h(product)e(characteristics)i
(and)f(details)g(of)f(product)-91 2159 y(structures)i(including)e(v)o
(ariants)i(and)g(con\002gurations.)-41 2212 y(W)m(e)j(use)h(the)f(term)
h Fj(pr)n(oduct)f(information)d(system)k Fi(to)f(refer)h(to)-91
2262 y(a)19 b(shared)h(repository)d(of)i(such)g(product)e(data)j
(thereby)e(distin-)-91 2311 y(guishing)7 b(it)h(from)h
Fj(pr)n(oduct)g(data)f(management)f(systems)j Fi(\(PDMs\))-91
2361 y(which)i(ha)o(v)o(e)h(a)h(more)e(specialised,)i(and)f(more)g
(comple)o(x,)h(role)e(in)-91 2411 y(supporting)h(the)j(manufacturing)e
(process)i(itself.)29 b(As)16 b(we)g(shall)-91 2461 y(see,)c(the)e
(product)f(data)i(model)f(of)g(a)h(PDM)f(is)h(therefore)f(typically)-91
2511 y(less)j(general)g(than)f(that)g(of)g(our)g(proposed)g(product)f
(information)-91 2560 y(system)i(in)e(that)h(it)g(tends)g(to)f(be)i
(tailored)e(to)h(a)h(particular)f(type)g(of)-91 2610
y(user)e(and)h(acti)o(vity)m(.)-41 2663 y(A)f(product)g(information)f
(system)i(is)g(not)f(a)h(replacement)g(for)g(a)987 872
y(PDM,)g(b)o(ut)f(rather)g(serv)o(es)i(a)f(dif)o(ferent)f(and)g
(complementary)h(pur)o(-)987 922 y(pose)f(in)g(supporting)d(the)j
(general)h(product)e(information)f(require-)987 972 y(ments)k(of)f(the)
g(v)o(arious)g(departments)g(of)g(an)h(enterprise.)k(Further)n(,)987
1022 y(it)11 b(may)h(also)g(serv)o(e)h(as)f(the)g(central)g(product)e
(information)g(broker)987 1071 y(across)g(enterprises)g(pro)o(viding)d
(information)h(about)h(the)g(products)987 1121 y(of)h(v)o(arious)f
(enterprises)i(and)f(links)f(to)h(product)f(catalogues)h(of)g(in-)987
1171 y(di)o(vidual)e(enterprises.)1037 1223 y(The)31
b(W)m(orld-W)n(ide)f(W)m(eb)h(\(WWW\),)g(together)f(with)g(its)987
1273 y(bro)o(wsers)18 b(such)g(as)g(Netscape)h(Na)o(vigator)n(,)h(pro)o
(vides)d(a)i(con)n(v)o(e-)987 1323 y(nient)8 b(means)i(of)e(accessing)i
(a)g(product)d(information)g(system)i(both)987 1373 y(within)f(and)j
(across)g(enterprises)f(via)g(Intranet)g(and)g(Internet)f(tech-)987
1423 y(nologies.)34 b(It)17 b(is)g(therefore)g(appropriate)g(that)g
(such)g(a)h(product)987 1472 y(information)12 b(service)j(be)f(based)h
(on)e(a)i(database)g(system)f(with)f(a)987 1522 y(WWW)e(interface.)1037
1574 y(In)g(this)g(paper)n(,)i(we)g(describe)f(a)g(product)f
(information)f(system)987 1624 y(that)j(has)h(been)g(de)o(v)o(eloped)g
(using)e(an)i(object-oriented)e(database)987 1674 y(management)19
b(system,)h(OMS)e([6].)35 b(The)19 b(underlying)c(product)987
1724 y(data)i(model)h(is)f(both)f(\003e)o(xible)h(and)h(e)o(xtensible)f
(and)g(combines)987 1774 y(adv)o(antages)d(of)g(v)o(arious)f(e)o
(xisting)g(PDM)h(product)f(data)h(models.)987 1823 y(Internet)f(\(and)h
(Intranet\))f(access)k(is)d(pro)o(vided)f(through)f(Internet)987
1873 y(OMS)f(which)g(is)g(a)h(generic)f(WWW)h(interface)f(to)g(OMS)g
(support-)987 1923 y(ing)e(both)h(object)f(bro)o(wsing)g(and)i(ad-hoc)f
(database)h(queries.)1037 1975 y(In)j(Section)g(2,)i(we)f(describe)g
(the)g(main)f(requirements)h(of)f(an)987 2025 y(enterprise-wide)9
b(product)f(information)g(system.)13 b(Section)c(3)h(then)987
2075 y(details)17 b(the)g(product)f(data)i(model)f(we)h(ha)o(v)o(e)g
(de)o(v)o(eloped.)35 b(The)987 2125 y(implementation)15
b(of)i(our)f(product)g(information)f(system)i(based)987
2175 y(on)11 b(the)f(Internet)h(OMS)g(object-oriented)e(database)j
(management)987 2224 y(system)h(is)f(described)g(in)g(Section)g(4.)19
b(Section)12 b(5)g(outlines)f(future)987 2274 y(work)e(and)i
(concluding)d(remarks)j(are)h(gi)o(v)o(en)d(in)h(Section)g(6.)987
2398 y Fk(2.)j(Requir)o(ements)1037 2513 y Fi(The)20
b(v)o(arious)e(users)i(within)d(an)j(enterprise)f(ha)o(v)o(e)h(dif)o
(ferent)987 2563 y(product)10 b(information)f(requirements.)15
b(A)c(designer)g(may)g(wish)g(to)987 2613 y(identify)f(products)h(with)
f(particular)h(characteristics)i(that)e(can)h(be)987
2663 y(used)d(in)g(his)f(design.)k(A)d(marketing)f(manager)i(may)g
(require)f(infor)o(-)p eop
%%Page: 2 2
2 1 bop -91 42 a Fi(mation)12 b(on)g(product)g(concepts)h(before)g(the)
f(products)g(ha)o(v)o(e)h(e)o(v)o(en)-91 91 y(been)f(designed)f(and)g
(therefore)g(the)g(structure)g(is)g(unspeci\002ed.)16
b(A)-91 141 y(salesman)f(wishes)e(to)g(be)h(able)f(to)g(con\002gure)h
(a)g(particular)e(prod-)-91 191 y(uct)i(for)g(his)g(customer)g(by)g
(selecting)g(the)g(appropriate)f(v)o(ariants,)-91 241
y(parameters)j(and)e(options.)25 b(Further)n(,)16 b(these)f(v)o(arious)
f(users)h(may)-91 291 y(ha)o(v)o(e)i(a)f(wide)f(geographical)g(distrib)
o(ution)e(and)j(drastically)e(dif-)-91 340 y(ferent)f(computing)f
(platforms.)21 b(In)13 b(the)g(case)i(of)e(a)g(salesman,)j(he)-91
390 y(may)e(use)g(a)h(mobile)e(computer)g(and)h(require)f(access)j(to)d
(product)-91 440 y(information)8 b(via)i(the)g(Internet.)-41
500 y(Clearly)m(,)18 b(these)f(problems)f(of)g(user)n(,)k(information)
14 b(and)j(plat-)-91 550 y(form)e(heterogeneity)f(are)i(e)o(v)o(en)g
(greater)g(in)e(the)h(case)i(of)e(virtual)-91 600 y(or)d(global)g
(enterprises.)20 b(It)12 b(is)g(increasingly)g(the)g(case)i(that)e
(infor)o(-)-91 650 y(mation)e(services)h(are)g(being)f(placed)h(on)f
(the)h(Internet)e(via)i(the)f(use)-91 699 y(of)15 b(WWW)g(interfaces)h
(to)e(database)i(systems,)i(thereby)d(pro)o(vid-)-91
749 y(ing)9 b(a)h(platform-independent)e(means)j(of)e(remote)h(access)i
(to)e(data.)-91 799 y(W)n(ithin)i(an)h(enterprise,)h(the)g(bene\002ts)f
(af)o(forded)g(by)g(WWW)h(may)-91 849 y(be)h(pro)o(vided)g(on)f(an)i
(Intranet)e(basis.)28 b(A)16 b(global)e(or)g(virtual)g(en-)-91
899 y(terprise)9 b(is)h(likely)e(to)h(require)g(Internet)g(access.)15
b(In)10 b(the)f(conte)o(xt)h(of)-91 948 y(this)d(paper)n(,)j(we)f(use)g
(the)f(term)h(Internet)e(to)h(co)o(v)o(er)h(both)f(cases)i(since)-91
998 y(we)h(focus)f(only)f(on)h(WWW)h(technologies)e(which)h(are)h
(common.)-41 1058 y(T)m(o)i(meet)h(the)g(requirements)f(of)h(the)f(v)o
(arious)g(users,)i(we)f(pro-)-91 1108 y(pose)j(an)h(Internet)e
(database)i(system)g(for)f(general)g(product)f(in-)-91
1158 y(formation.)24 b(An)15 b(Internet)e(database)j(system)f(is)f(one)
h(which)f(has)-91 1208 y(a)21 b(WWW)f(interface)g(that)g(pro)o(vides)g
(access)i(via)e(the)g(Internet)-91 1257 y(through)7 b(one)i(of)g(the)g
(usual)g(WWW)g(bro)o(wsers,)h(such)f(as)h(Netscape)-91
1307 y(Na)o(vigator)n(.)k(The)d(product)f(information)f(system)j(we)f
(ha)o(v)o(e)h(de)o(v)o(el-)-91 1357 y(oped)j(uses)h(our)e(o)o(wn)h
(object-oriented)e(database)k(system)e(OMS)-91 1407 y([6)o(,)e(4].)20
b(The)13 b(OMS)f(system)h(has)g(a)g(number)f(of)g(adv)o(antages)h(with)
-91 1457 y(respect)h(to)e(the)h(de)o(v)o(elopment)g(of)g(such)g(an)h
(Internet)e(product)g(in-)-91 1507 y(formation)7 b(system.)14
b(First,)8 b(the)h(underlying)e(object-oriented)g(data)-91
1556 y(model)13 b(OM)h(pro)o(vides)f(rich)h(modelling)e(constructs)h
(in)g(terms)i(of)-91 1606 y(structures)f(and)h(constraints)f(which)h
(lead)g(to)g(a)g(simple,)i(yet)e(e)o(x-)-91 1656 y(pressi)o(v)o(e)d
(product)f(data)h(model.)17 b(Second,)c(the)e(use)h(of)g(an)g(object-)
-91 1706 y(oriented)i(model)h(pro)o(vides)g(a)g(con)n(v)o(enient)g(way)
g(to)g(form)g(an)g(in-)-91 1756 y(te)o(gration)f(database)i(with)e
(links)g(to)h(other)f(application)g(systems)-91 1805
y(via)f(methods.)24 b(The)14 b(OMS)g(system)g(also)g(supports)f(a)h
(full)f(query)-91 1855 y(language.)30 b(Further)n(,)18
b(Internet)d(information)f(services)j(are)g(sup-)-91
1905 y(ported)f(through)g(a)i(generic)f(WWW)i(interface)e(to)g(OMS.)g
(This)-91 1955 y(contrasts)12 b(with)f(man)o(y)i(e)o(xisting)e(WWW)i
(interfaces)g(to)e(database)-91 2005 y(management)i(systems)f(which)f
(require)h(an)g(application)e(speci\002c)-91 2055 y(interface)e(to)g
(be)h(de)o(v)o(eloped)f(using)g(queries)g(embedded)i(in)e(HTML)-91
2104 y(pages.)13 b(The)d(Internet)e(OMS)i(interface)f(mimics)g
(directly)f(the)h(gen-)-91 2154 y(eral)h(OMS)h(bro)o(wser)n(.)i
(Clearly)m(,)d(ho)o(we)o(v)o(er)n(,)i(it)d(can)i(also)f(be)h(adapted)
-91 2204 y(to)e(produce)i(an)f(application)f(speci\002c)i(interface.)
-41 2264 y(The)18 b(underlying)d(product)i(data)h(model)f(has)h(to)f
(be)h(general)-91 2314 y(enough)9 b(to)g(support)f(the)i(information)e
(needs)i(of)f(the)h(v)o(arious)f(user)-91 2364 y(groups,)16
b(and)g(\003e)o(xible)g(enough)f(that)h(it)f(can)h(be)g(adapted)g(to)f
(the)-91 2413 y(requirements)e(of)g(a)h(particular)e(enterprise.)23
b(W)m(e)13 b(de)o(v)o(eloped)h(our)-91 2463 y(o)o(wn)e(product)g(data)h
(model)g(which)g(allo)o(ws)f(both)g(the)g(concept)i(of)-91
2513 y(a)f(product,)e(as)i(well)f(as)h(details)f(of)f(product)h
(structures)f(and)h(con-)-91 2563 y(\002gurations,)j(to)f(be)h
(represented.)28 b(Further)n(,)16 b(the)f(set)g(of)f(product)-91
2613 y(characteristics)c(are)h(not)f(\002x)o(ed,)h(b)o(ut)e(rather)h
(are)h(modelled)f(e)o(xplic-)-91 2662 y(itly)f(by)h(the)h(user)f(allo)o
(wing)f(ne)o(w)i(characteristics)g(and)g(their)f(asso-)987
42 y(ciated)h(v)o(alue)g(sets)h(to)e(be)h(added)g(and)h(updated)e(as)i
(required.)i(This)987 91 y(contrasts)8 b(with)f(the)h(product)f(data)h
(models)g(of)g(e)o(xisting)f(PDM)h(sys-)987 141 y(tems)i(which)g(tend)f
(to)g(be)h(less)g(\003e)o(xible.)j(F)o(or)d(e)o(xample,)i([2)o(])e
(allo)o(ws)987 191 y(a)f(product)f(to)g(be)h(represented)h(in)e(the)h
(database)h(independently)d(of)987 241 y(its)j(structure,)g(b)o(ut)g
(assumes)j(a)e(\002x)o(ed)g(set)g(of)f(product)g(characteris-)987
291 y(tics)h(which)g(can)i(only)d(be)i(modi\002ed)g(by)f(using)f(a)j
(special)f(tool)e(for)987 340 y(changing)f(the)i(database)g(schema.)
1037 390 y(Additionally)m(,)g(a)i(product)f(information)f(system)i
(should)f(sup-)987 440 y(port)7 b(not)h(only)f(the)h(representation)g
(of)g(product)f(v)o(ariant)h(structures)987 490 y(and)h
(con\002gurations,)g(b)o(ut)g(also)g(the)h(con\002guration)e(process)i
(itself.)1037 540 y(In)17 b(the)g(follo)o(wing)e(section,)k(we)f
(present)f(our)g(product)f(data)987 589 y(model)f(in)g(detail)g(before)
h(continuing)d(in)i(later)g(sections)g(with)g(a)987 639
y(description)9 b(of)h(our)f(system.)987 753 y Fk(3.)k(Pr)o(oduct)f
(modelling)1037 859 y Fi(An)18 b(essential)h(and)g(crucial)f(aspect)i
(of)e(an)o(y)h(product)f(infor)o(-)987 909 y(mation)13
b(system)i(is)f(its)f(underlying)f(product)h(data)h(model.)24
b(This)987 958 y(model)16 b(should)e(support)h(not)g(only)g(the)g
(description)g(of)g(v)o(arious)987 1008 y(product)e(structures,)h(b)o
(ut)f(also)h(the)g(process)g(of)g(product)f(con\002g-)987
1058 y(uration.)23 b(Hence,)16 b(it)d(follo)o(ws)g(that)g(such)h(a)h
(product)d(data)j(model)987 1108 y(should)9 b(ha)o(v)o(e)i
(characteristics)g(such)g(as)1028 1180 y Fh(\017)21 b
Fj(Fle)o(xibility)1070 1230 y Fi(It)11 b(should)f(not)g(be)i(a)g
(problem)e(to)h(model)g(dif)o(ferent)f(kinds)h(of)1070
1280 y(comple)o(x)g(structured)e(products)g(and)i(their)e(v)o(ariants.)
1028 1339 y Fh(\017)21 b Fj(Extensibility)1070 1388 y
Fi(No)9 b(major)h(redesign)f(of)h(the)f(model)h(should)e(be)i
(necessary)h(if)1070 1438 y(ne)o(w)f(requirements)h(ha)o(v)o(e)g(to)f
(be)g(ful\002lled.)1028 1497 y Fh(\017)21 b Fj(P)m(ortability)1070
1547 y Fi(The)10 b(inte)o(gration)d(of)i(the)g(data)h(model)f(into)f
(speci\002c)i(applica-)1070 1597 y(tion)f(domains)h(should)f(be)i
(possible.)1037 1669 y(Another)i(important)g(issue)h(in)g(this)f(conte)
o(xt)h(is)g(the)g(selection)987 1719 y(of)c(an)h(appropriate)f(data)h
(modelling)e(concept.)14 b(Our)c(proposal)g(for)987 1769
y(a)i(simple,)h(b)o(ut)e(po)o(werful,)g(product)g(data)h(model)f(is)h
(based)g(on)g(the)987 1819 y(generic)g(object)g(data)h(model)f(OM.)h(A)
f(short)g(description)e(of)i(OM)987 1868 y(is)e(gi)o(v)o(en)g(in)g(the)
g(ne)o(xt)g(section.)1037 1918 y(In)k(our)g(product)g(data)h(model,)h
(we)f(distinguish)d(and)j(support)987 1968 y(four)i(main)h(acti)o
(vities)e(which)i(are)g(necessary)h(to)e(pro)o(vide)g(user)987
2018 y(modelling)9 b(of)h(a)g(product)g(on)g(dif)o(ferent)f(conceptual)
h(le)o(v)o(els:)1028 2096 y Fh(\017)21 b Fj(Pr)n(oduct)10
b(Classi\002cation)1070 2146 y Fi(A)k(con)n(v)o(enient)f(way)g(of)h(e)o
(xpressing)f(the)h(more)f(conceptual)1070 2196 y(vie)o(w)h(of)g
(products)g(is)g(by)g(classifying)f(them)i(according)f(to)1070
2246 y(certain)h(criteria)g(into)g(dif)o(ferent)f(product)g(groups,)i
(respec-)1070 2295 y(ti)o(v)o(ely)m(,)10 b(product)f(families.)1028
2354 y Fh(\017)21 b Fj(Pr)n(oduct)10 b(Structuring)1070
2404 y Fi(The)f(result)f(of)g(this)f(acti)o(vity)g(is)h(usually)f(a)i
(hierarchy)f(of)g(com-)1070 2454 y(ponents.)26 b(This)15
b(hierarchy)f(is)h(described)g(best)g(with)f(some)1070
2504 y(sort)c(of)g Fj(part)p 1260 2504 13 2 v 14 w(of)15
b Fi(relationship)9 b(between)i(products.)1028 2563 y
Fh(\017)21 b Fj(Pr)n(oduct)10 b(Char)o(acterisation)1070
2613 y Fi(The)f(characteristics)f(of)g(a)g(product)f(such)h(as)g
Fj(size)p Fi(,)i Fj(length)c Fi(and)1070 2663 y Fj(colour)11
b Fi(ha)o(v)o(e)g(to)f(be)g(identi\002ed)f(together)h(with)f(their)g(v)
o(alues.)p eop
%%Page: 3 3
3 2 bop -50 42 a Fh(\017)21 b Fj(Pr)n(oduct)10 b(Description)-8
91 y Fi(Product)h(Descriptions)g(such)i(as)g Fj(Rules)p
Fi(,)g Fj(Constr)o(aints)p Fi(,)e Fj(F)l(or)o(-)-8 141
y(mulas)e Fi(and)h Fj(Queries)g Fi(are)g(required)f(for)g
(speci\002cation)h(of)f(the)-8 191 y(o)o(v)o(erall)i(product)f
(structure,)h(and)g(for)g(supporting)d(the)j(prod-)-8
241 y(uct)f(con\002guration)f(process.)-91 345 y Fg(3.1.)17
b(Ov)o(erview)g(of)h(the)g(OM)g(mo)q(del)-41 450 y Fi(In)11
b(this)f(section)h(we)h(want)e(to)h(gi)o(v)o(e)g(a)h(brief)f
(description)f(of)g(the)-91 499 y(generic)16 b(object)f(data)g(model)h
Fj(OM)g Fi(which)f(speci\002es)i(constructs)-91 549 y(and)e(operations)
e(for)i(the)f(management)i(of)e(interrelated)g(collec-)-91
599 y(tions)9 b(of)h(objects.)k(The)d Fj(OM)f(model)g
Fi(is)g(generic)h(in)f(that)g(it)g(is)g(inde-)-91 649
y(pendent)i(of)g(the)g(form)g(of)h(indi)o(vidual)c(objects)k(and)f
(hence)h(of)f(the)-91 699 y(underlying)c(type)i(model)g(and)g
(programming)g(language)g(system.)-41 749 y(Data)j(modelling)f(can)h
(be)h(seen)g(as)f(the)g(construction)f(of)g(con-)-91
799 y(ceptual)h(models)g(of)g(reality)m(.)21 b(It)12
b(is)h(therefore)g(in)n(v)o(olv)o(ed)f(with)g(the)-91
848 y(description)g(of)g(general)i(concepts)g(of)e(the)h(application)f
(domain.)-91 898 y(On)c(the)g(other)g(hand,)h(a)g(database)h(schema)g
(is)e(considered)h(not)e(only)-91 948 y(as)15 b(a)h(description)d(of)i
(reality)f(b)o(ut)g(also)h(as)g(a)h(description)d(of)h(the)-91
998 y(representation)9 b(of)h(that)g(reality)f(in)h(the)g(database.)-41
1048 y(The)g Fj(OM)e(model)h Fi(distinguishes)e(these)j(two)e(forms)i
(of)e(descrip-)-91 1098 y(tion)i(through)h(the)g(concepts)i(of)e
(classi\002cation)h(and)g(typing.)17 b(The)-91 1147 y(former)f
(corresponds)f(to)h(classifying)f(entities)g(into)f(cate)o(gories,)-91
1197 y(the)8 b(latter)g(corresponds)g(to)g(describing)g(the)g
(representation)g(of)g(en-)-91 1247 y(tities)h(within)f(the)i(database)
i(in)d(terms)i(of)f(types)g(\(\002gure)g(1\).)40 1520
y
 currentpoint currentpoint translate 1.6044 1.6044 scale neg exch neg
exch translate
 40 1520 a 40 1520 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 40 1520 a @beginspecial 6 @llx
694 @lly 276 @urx 785 @ury 1079 @rwi @setspecial
%%BeginDocument: figs/classification.eps
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/RR1 {
pbox top get pbox bottom get sub abs
pbox left get pbox right get sub abs
2 copy lt {
Min
2 div dup dup dup
pbox left get add pbox left 3 -1 roll put
pbox right get exch sub pbox right 3 -1 roll put
pbox left get pbox bottom get moveto
pbox right get 0 3 -1 roll 90 -90 arcn
pbox left get 0 3 -1 roll -90 90 arcn closepath
} {
Min
2 div dup dup dup
pbox bottom get exch sub pbox bottom 3 -1 roll put
pbox top get add pbox top 3 -1 roll put
pbox left get pbox bottom get moveto
pbox left get add pbox top get
2 index
180 0 arc
dup pbox left get add pbox bottom get
3 -1 roll 0 180 arc
closepath
} ifelse
} bind def
/RR2 { 
dup dup dup dup dup dup dup dup 
pbox top get add pbox top 3 -1 roll put 
pbox left get add pbox left 3 -1 roll put 
pbox bottom get exch sub pbox bottom 3 -1 roll put 
pbox right get exch sub pbox right 3 -1 roll put 
pbox bottom get add pbox left get exch moveto 
pbox right get pbox bottom get 3 -1 roll 90 0 arcn 
pbox right get pbox top get 3 -1 roll  0 270 arcn 
pbox left get pbox top get 3 -1 roll  270 180 arcn 
pbox left get pbox bottom get 3 -1 roll 180 90 arcn closepath
} bind def 
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
/A1 {msave
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 5 -1 roll -90 add 5 -1 roll -90 add arcn
mrestore} bind def
/A2 {msave 0 0 moveto A1 closepath mrestore} def


/BitMap {
 /buffer ^1 string def
 ^2 ^5 2 div add 792 ^3 sub ^6 2 div add translate
 ^4 57.3 mul rotate
  0 ^5 2 div sub 0 ^6 2 div sub translate
 ^5 ^6 scale
 ^5 ^6 ^7 [^5 0 0 -^6 0 ^6] {currentfile buffer readhexstring pop} image
}bind def 
/note {
gsave pbox astore pop
0 792 translate 1 -1 scale CTM currentmatrix pop exch translate
pbox right get pbox left get sub 2 div
pbox bottom get pbox top get sub 2 div
translate 57.3 mul rotate setlinewidth
noteBody aload pop moveto
noteBody length 2 div 1 sub cvi{lineto}repeat
dogEar aload pop moveto
dogEar length 2 div 1 sub cvi{lineto}repeat
0.992 0.975 0.507 setrgbcolor gsave fill grestore
gsave newpath
stickem aload pop moveto
stickem length 2 div 1 sub cvi{lineto}repeat
0.760 0.760 0.760 setrgbcolor fill 
grestore
0 0 0 setrgbcolor stroke
noteShadow aload pop moveto
noteShadow length 2 div 1 sub cvi{lineto}repeat
dogEarShadow aload pop moveto
dogEarShadow length 2 div 1 sub cvi{lineto}repeat
0 0 0 setrgbcolor gsave stroke grestore fill
grestore
}bind def


 /redTbl4   [0 0 1 1 1 1 2 2 3 3 3 4 4 4 5 5] def
 /greenTbl4 [0 1 1 2 2 3 3 4 4 5 6 6 7 7 7 8] def
 /blueTbl4  [0 0 0 0 1 1 1 1 1 1 1 1 1 2 2 2] def
 /RGB4toGray4 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup
		-4 bitshift redTbl4 exch get
		exch 15 and greenTbl4 exch get add
		RGBBuf i 1 add  get dup
		-4 bitshift blueTbl4 exch get 3 -1 roll add  4 bitshift
		exch 15 and redTbl4 exch get
		RGBBuf i 2 add  get dup
		-4 bitshift greenTbl4 exch get 3 -1 roll add
		exch 15 and blueTbl4 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB8toGray8 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get 0.33 mul
		RGBBuf i 1 add get 0.55 mul add
		RGBBuf i 2 add get 0.12 mul add round cvi
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB24toGray8 {RGB8toGray8} bind def
 /redTbl2   [0 0 1 1] def
 /greenTbl2 [0 1 1 2] def
 /blueTbl2  [0 0 0 0] def
 /RGB2toGray2 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup dup
		-6 bitshift redTbl2 exch get
		exch -4 bitshift 3 and
		greenTbl2 exch get add
		exch -2 bitshift 3 and
		blueTbl2 exch get add
		6 bitshift exch 3 and
		redTbl2 exch get
		RGBBuf i 1 add  get dup dup dup
		-6 bitshift greenTbl2 exch get
		exch -4 bitshift 3 and
		blueTbl2 exch get add
		4 -1 roll add
		4 bitshift 4 -1 roll or
		3 1 roll -2 bitshift 3 and
		redTbl2 exch get exch 3 and
		greenTbl2 exch get add
		RGBBuf i 2 add  get dup dup dup
		-6 bitshift blueTbl2 exch get
		5 -1 roll add
		2 bitshift 5 -1 roll or
		4 1 roll -4 bitshift 3 and
		redTbl2 exch get
		exch -2 bitshift 3 and
		greenTbl2 exch get add
		exch 3 and
		greenTbl2 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB1toGray1 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup
		1 bitshift 128 and exch
		3 bitshift 64 and or exch
		5 bitshift 32 and or
		RGBBuf i 1 add get dup
		-1 bitshift 16 and exch
		1 bitshift 8 and or or
		RGBBuf i 2 add get dup dup
		-5 bitshift 4 and exch
		-3 bitshift 2 and or exch
		-1 bitshift 1 and or or
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB16toGray8 {RGB8toGray8} bind def
/ScalePoint {
	0 0
	4 -2 roll
	0 0 1 1
	8 4 roll GetBoxesRatio scale
} bind def
/PointDict 4 dict def
PointDict begin
/XPoint {
		-.5 .5 moveto
		.5 -.5 lineto
		.5 .5 moveto
		-.5 -.5 lineto
	} bind def
	/DiamondPoint {
		0.0 .5 moveto
		.5 0.0 lineto
		0.0 -0.5 lineto
		-.5 0.0 lineto
		closepath
	} bind def
	/PlusPoint {
		0.0 .5 moveto
		0.0 -.5 lineto
		-.5 0.0 moveto
		.5 0.0 lineto
	} bind def
	/SquarePoint {
		-.5 .5 moveto
		.5 .5 lineto
		.5 -.5 lineto
		-.5 -.5 lineto
		closepath
	} bind def
end
/DrawPoint {
	gsave
		[] 0 setdash
		0 setlinecap
		translate
		msave
			ScalePoint
			PointDict exch get exec
		mrestore
		1.0 setlinewidth stroke
	grestore
} bind def
/Subscriber { 
 msave 
 R PC PF LC SS newpath
 mrestore 
} bind def 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def


/rampdelta {
/len 0 3 -1 roll add def
/i2 0 3 -1 roll add def
/i1 0 3 -1 roll add def
/nRampSteps len cellPenW div cvi 1 add dup 512 gt {pop 512} if def
/rampPenW len nRampSteps div def
rampColors i1 get aload pop c1 astore pop
rampColors i2 get aload pop c2 astore pop
c2 0 get c1 0 get sub nRampSteps div d 0 3 -1 roll put
c2 1 get c1 1 get sub nRampSteps div d 1 3 -1 roll put
c2 2 get c1 2 get sub nRampSteps div d 2 3 -1 roll put
d aload pop
} bind def
/adddelta {
d astore pop
 mycurrentrgbcolor c1 copy pop
c1 0 get d 0 get add c2 0 3 -1 roll put
c1 1 get d 1 get add c2 1 3 -1 roll put
c1 2 get d 2 get add c2 2 3 -1 roll put
c2 aload pop setrgbcolor
c2 mycurrentrgbcolor copy pop
} bind def
/rampline {
segbox ulx get rampPenW add segbox ulx 3 -1 roll put
segbox llx get rampPenW add segbox llx 3 -1 roll put
segbox ulx get segbox uly get moveto
segbox llx get segbox lly get lineto
delta aload pop adddelta stroke
}bind def
/slantrampseg {
gsave newpath
segbox ulx get segbox urx get sub abs
rampdelta delta astore pop
segbox ulx get rampPenW .5 mul sub segbox ulx 3 -1 roll put
segbox llx get rampPenW .5 mul sub segbox llx 3 -1 roll put
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
rampPenW setlinewidth nRampSteps {rampline} repeat
grestore
}bind def
/flipramp {
rampColors 0 get rampColors 3 get rampColors 0 3 -1 roll put rampColors 3 3 -1 roll put
rampColors 1 get rampColors 2 get rampColors 1 3 -1 roll put rampColors 2 3 -1 roll put
} bind def
/leftrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
} bind def
/rightrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
} bind def
/drawslantramp {
segbox urx get segbox ulx get sub 3 div dup dup dup dup dup dup dup dup dup
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
segbox aload pop
0 0 1 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
segbox aload pop
1 1 2 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
2 2 3 slantrampseg
}bind def
/tan {
dup sin exch cos div
}bind def
/rampbox {
pbox top get dup rbox uly 3 -1 roll put rbox ury 3 -1 roll put
pbox left get dup rbox ulx 3 -1 roll put rbox llx 3 -1 roll put
pbox bottom get dup rbox lly 3 -1 roll put rbox lry 3 -1 roll put
pbox right get dup rbox urx 3 -1 roll put rbox lrx 3 -1 roll put
}bind def
/LoadSegBox {
4 copy
segbox llx 6 -1 roll put
segbox lly 5 -1 roll put
segbox lrx 4 -1 roll put
segbox lry 6 -1 roll put
segbox urx 5 -1 roll put
segbox ury 3 -1 roll put
segbox ulx 4 -1 roll put
segbox uly 3 -1 roll put
} bind def
/TransToCenter {
gsave
flattenpath
pathbbox
grestore
2 index
sub 2.0 div exch
3 index sub 2.0 div
4 -1 roll add
3 1 roll add
translate
} bind def
/RotRampGrad {
gsave
TransToCenter
-1.0 mul 180.0 add rotate
flattenpath
pathbbox 
clip
newpath
LoadSegBox
flipRatio 1 lt dup{flipramp}if flipRatio 0 gt and
{
/flipRatio 1.0 flipRatio sub def
segbox rbox copy pop leftrbox drawslantramp flipramp rightrbox drawslantramp
}
{drawslantramp} ifelse
grestore
} bind def
/bbg {
pbox exch get
} bind def
/DR {		% Directional ramp
/workingMatrix mstore def
objectCord setmatrix
flipramp
gsave
flattenpath pathbbox
grestore
pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
rampAngle RotRampGrad
RF
workingMatrix setmatrix
}bind def
/ramparc {
gsave
circum rampdelta delta astore pop
/rampPenW 60.0 nRampSteps div def
/ang1 exch rampAngle sub def 
/ang2 rampPenW ang1 add def 
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor 1 setlinewidth
nRampSteps {ramparcseg}repeat
grestore
}bind def
/ramparcseg {
newpath
rampcenter aload pop moveto
rampcenter aload pop rampradius ang2 ang1 arcn fill
/ang1 ang2 def 
/ang2 ang2 rampPenW add def
delta aload pop adddelta
}bind def
/GetRadius {
rbox urx get rbox llx get sub 2 div rampcenter 0 get abs add dup mul
rbox lly get rbox ury get sub 2 div rampcenter 1 get abs add dup mul
add sqrt
} bind def
/circularRamp {
rampbox
/rampradius GetRadius def
CalcCrcm
flipramp
0 0 0 1 ramparc
1 60 1 2 ramparc
2 120 2 3 ramparc
flipramp
0 180 0 1 ramparc
1 240 1 2 ramparc
2 300 2 3 ramparc
}bind def
/GetCircumf {
2.0 mul 3.1415926 mul
} bind def
/CalcCrcm {
rampradius GetCircumf
/circum exch 6.0 div def
} bind def
/CR {
gsave
clip
MTC currentmatrix pop
CTM setmatrix
flattenpath
pathbbox pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
pbox left get pbox right get sub abs 2 div 
pbox left get add rampcenter 0 get add rampcenter 0 3 -1 roll put
pbox top get pbox bottom get sub abs 2 div
pbox top get add rampcenter 1 get add rampcenter 1 3 -1 roll put
circularRamp
MTC setmatrix
grestore
RF
}bind def
/SBR {
gsave
clip
/workingMatrix mstore def
objectCord setmatrix
flattenpath
/BaseBox pathbbox 4 array astore def
/len BaseBox 2 get BaseBox 0 get sub dup mul
BaseBox 3 get BaseBox 1 get sub dup mul
add sqrt
12.0 div
def
/EndBox
BaseBox aload pop
3 -1 roll sub
3 1 roll
exch sub
/dbx exch def
/dby exch def
BaseBox aload pop pop pop
/blly exch def
/bllx exch def
sbox 0 get 100.0 div dby mul blly add
sbox 1 get 100.0 div dbx mul bllx add
sbox 2 get 100.0 div dby mul blly add
sbox 3 get 100.0 div dbx mul bllx add
exch
4 -2 roll
exch
4 -2 roll
4 array astore
def
BaseBox EndBox ShapeBurst
workingMatrix setmatrix
grestore
} bind def
/GetBoxCenter {
2 index
sub 2.0 div
3 -1 roll add
3 1 roll
1 index sub
2.0 div add
exch
} bind def
/GetInterBox {
/boxInter exch def
4 1 7 {
-1 roll
7 index
} for
sub boxInter mul
8 -1 roll add
7 1 roll
sub boxInter mul
7 -1 roll add
6 1 roll
sub boxInter mul
6 -1 roll add
5 1 roll
sub boxInter mul
5 -1 roll add
4 1 roll
} bind def
/GetBoxCenterDeltas {
GetBoxCenter
6 2 roll
GetBoxCenter
3 -1 roll exch sub
3 1 roll sub
exch
} bind def
/GetBoxCornerDeltas {
pop pop
4 2 roll pop pop
3 -1 roll sub
3 1 roll exch sub
exch
} bind def
/getpath {
/k 0 def
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{}pathforall
/pfa k array def
/k 0 def
{{moveto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{lineto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{curveto} 7 array astore pfa k 3 -1 roll put /k k 1 add def}
{}pathforall
}bind def
/ShapeBurst {
getpath
newpath
/SBERect exch 4 array copy def
/SBBRect exch 4 array copy def
/interRect1 SBBRect aload pop SBERect aload pop .3333333 GetInterBox 4 array astore def
/interRect2 SBBRect aload pop SBERect aload pop .6666666 GetInterBox 4 array astore def
0 0 1 SBBRect interRect1 ShapeBurstSeg
msave
interRect1 0 get interRect1 1 get translate
SBBRect aload pop interRect1 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
1 1 2 interRect1 interRect2 ShapeBurstSeg
mrestore
msave
interRect2 0 get interRect2 1 get translate
SBBRect aload pop interRect2 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
2 2 3 interRect2 SBERect ShapeBurstSeg
mrestore
} bind def
/ShapeBurstSeg {
/sbr1 exch 4 array copy def
/sbr0 exch 4 array copy def
/blx sbr0 0 get def
/bly sbr0 1 get def
len rampdelta delta astore pop
sbr0 aload pop sbr1 aload pop GetBoxesRatio
/ratioY exch def
/ratioX exch def
sbr0 aload pop sbr1 aload pop GetBoxCornerDeltas
/dlly exch nRampSteps div def
/dllx exch nRampSteps div def
/scaleStepX 1.0 ratioX sub nRampSteps div def
/scaleStepY 1.0 ratioY sub nRampSteps div def
/currentScaleX 1.0 scaleStepX sub def
/currentScaleY 1.0 scaleStepY sub def
/translationX blx dllx add def
/translationY bly dlly add def
/currentScaleX 1.0  def
/currentScaleY 1.0  def
/translationX blx def
/translationY bly def
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
nRampSteps {
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
delta aload pop adddelta
/translationX translationX dllx add def
/translationY translationY dlly add def
/currentScaleX currentScaleX scaleStepX sub def
/currentScaleY currentScaleY scaleStepY sub def
mrestore
} repeat
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
mrestore
} bind def
initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.000 15.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.000 49.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 39.500 52.500 0.000 0.000 10.000 31.000 rect
%@EndRect
gsave
68.000 44.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -15.000 3.000 S
(r) -9.996 3.000 S
(o) -7.001 3.000 S
(d) -1.998 3.000 S
(u) 3.004 3.000 S
(c) 8.007 3.000 S
(t) 12.507 3.000 S
grestore
%@EndText
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 52.000 7.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 69.000 21.000 0.000 0.000 11.000 44.000 rect
%@EndRect
gsave
43.000 74.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(P) -21.500 4.000 S
(r) -14.830 4.000 S
(o) -10.940 4.000 S
(d) -4.832 4.000 S
(u) 1.275 4.000 S
(c) 7.384 4.000 S
(t) 12.943 4.000 S
(s) 16.270 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 42.000 61.000 0.000 0.000 0.000 1.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
93.000 44.000 moveto
/Triangular 12.924 9.399 false -30.966 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 128.000 23.000 94.179 43.292 Line
%@EndLine
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 7.000 131.000 0.000 0.000 33.000 145.000 rect
%@EndRect
gsave
203.500 23.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica-Bold) fess
0.000 0.000 0.000 setrgbcolor 
(T) -72.500 -9.000 S
(y) -67.002 -9.000 S
(p) -61.999 -9.000 S
(e) -56.501 -9.000 S
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 7.000 131.000 0.000 0.000 33.000 145.000 rect
%@EndRect
gsave
203.500 23.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(D) -72.500 1.000 S
(e) -66.002 1.000 S
(f) -60.999 1.000 S
(i) -58.499 1.000 S
(n) -56.501 1.000 S
(i) -51.498 1.000 S
(t) -49.501 1.000 S
(i) -47.000 1.000 S
(o) -45.003 1.000 S
(n) -40.000 1.000 S
( ) -34.997 1.000 S
(o) -32.496 1.000 S
(f) -27.493 1.000 S
( ) -24.992 1.000 S
(O) -22.492 1.000 S
(b) -15.491 1.000 S
(j) -10.488 1.000 S
(e) -8.491 1.000 S
(c) -3.488 1.000 S
(t) 1.011 1.000 S
( ) 3.512 1.000 S
(R) 6.012 1.000 S
(e) 12.510 1.000 S
(p) 17.513 1.000 S
(r) 22.516 1.000 S
(e) 25.511 1.000 S
(s) 30.514 1.000 S
(e) 35.014 1.000 S
(n) 40.017 1.000 S
(t) 45.020 1.000 S
(a) 47.521 1.000 S
(t) 52.524 1.000 S
(i) 55.024 1.000 S
(o) 57.022 1.000 S
(n) 62.025 1.000 S
(s) 67.028 1.000 S
0.000 0.000 0.000 setrgbcolor 
(=) -72.500 10.000 S
( ) -67.244 10.000 S
(S) -64.743 10.000 S
(e) -58.740 10.000 S
(t) -53.737 10.000 S
( ) -51.237 10.000 S
(o) -48.736 10.000 S
(f) -43.733 10.000 S
( ) -41.232 10.000 S
(P) -38.732 10.000 S
(r) -32.729 10.000 S
(o) -29.734 10.000 S
(p) -24.731 10.000 S
(e) -19.728 10.000 S
(r) -14.725 10.000 S
(t) -11.730 10.000 S
(y) -9.229 10.000 S
( ) -4.729 10.000 S
(S) -2.229 10.000 S
(p) 3.773 10.000 S
(e) 8.776 10.000 S
(c) 13.780 10.000 S
(i) 18.280 10.000 S
(f) 20.277 10.000 S
(i) 22.777 10.000 S
(c) 24.775 10.000 S
(a) 29.275 10.000 S
(t) 34.278 10.000 S
(i) 36.778 10.000 S
(o) 38.776 10.000 S
(n) 43.779 10.000 S
(s) 48.782 10.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
59.000 84.000 moveto
/Triangular 12.924 9.399 false -8.427 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 113.000 76.000 60.360 83.798 Line
%@EndLine
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 58.000 118.000 0.000 0.000 33.000 121.000 rect
%@EndRect
gsave
178.500 74.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(C) -60.500 -9.000 S
(l) -54.002 -9.000 S
(a) -51.502 -9.000 S
(s) -46.499 -9.000 S
(s) -41.495 -9.000 S
(i) -36.492 -9.000 S
(f) -33.992 -9.000 S
(i) -30.997 -9.000 S
(c) -28.496 -9.000 S
(a) -23.493 -9.000 S
(t) -18.490 -9.000 S
(i) -15.495 -9.000 S
(o) -12.995 -9.000 S
(n) -7.497 -9.000 S
grestore
restore
save
gsave
178.500 74.500 T translate
0.0 rotate
1 1 scale
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(S) -60.500 1.000 S
(e) -54.497 1.000 S
(m) -49.493 1.000 S
(a) -41.999 1.000 S
(n) -36.995 1.000 S
(t) -31.992 1.000 S
(i) -29.492 1.000 S
(c) -27.494 1.000 S
( ) -22.994 1.000 S
(G) -20.494 1.000 S
(r) -13.493 1.000 S
(o) -10.499 1.000 S
(u) -5.495 1.000 S
(p) -0.492 1.000 S
(i) 4.510 1.000 S
(n) 6.507 1.000 S
(g) 11.510 1.000 S
( ) 16.514 1.000 S
(o) 19.014 1.000 S
(f) 24.017 1.000 S
( ) 26.518 1.000 S
(O) 29.018 1.000 S
(b) 36.019 1.000 S
(j) 41.022 1.000 S
(e) 43.019 1.000 S
(c) 48.022 1.000 S
(t) 52.522 1.000 S
(s) 55.023 1.000 S
0.000 0.000 0.000 setrgbcolor 
(=) -60.500 10.000 S
( ) -55.244 10.000 S
(C) -52.743 10.000 S
(o) -46.246 10.000 S
(l) -41.243 10.000 S
(l) -39.245 10.000 S
(e) -37.248 10.000 S
(c) -32.245 10.000 S
(t) -27.745 10.000 S
(i) -25.244 10.000 S
(o) -23.247 10.000 S
(n) -18.244 10.000 S
( ) -13.241 10.000 S
(o) -10.740 10.000 S
(f) -5.737 10.000 S
( ) -3.237 10.000 S
(O) -0.736 10.000 S
(b) 6.263 10.000 S
(j) 11.267 10.000 S
(e) 13.264 10.000 S
(c) 18.267 10.000 S
(t) 22.767 10.000 S
(s) 25.268 10.000 S
grestore
%@EndText
restore
end
%%EndDocument
 @endspecial 490 1520 a
 currentpoint grestore moveto
 490 1520 a 40 1520 a
 currentpoint currentpoint translate 1 1.6044 div 1 1.6044 div scale
neg exch neg exch translate
 40 1520
a 71 1611 a Ff(Figure)i(1.)g(Classi\002cation)f(and)h(types)-41
1709 y Fi(The)18 b Fj(OM)g(model)f Fi(speci\002es)i(v)o(arious)e
(collection)g(constructs)-91 1759 y(and)i(structural)e(constraints.)38
b(Speci\002c)20 b(support)e(is)g(gi)o(v)o(en)h(for)-91
1809 y(the)10 b(representation)f(of)h(classi\002cation)g(structures)f
(and)i(for)e(binary)-91 1858 y(associations)15 b(of)g(collections)g
(\(Figure)g(2)g(and)h(3\).)29 b(Further)n(,)16 b(the)-91
1908 y(model)11 b(speci\002es)h(a)g(general)g(set)f(of)g(operations)f
(o)o(v)o(er)i(collections)-91 1958 y(which)e(we)g(refer)h(to)f(as)h(a)g
(collection)e(algebra.)40 2474 y
 currentpoint currentpoint translate 1.34938 1.34938 scale neg exch
neg exch translate
 40 2474 a 40 2474 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate

40 2474 a @beginspecial 11 @llx 569 @lly 332 @urx 785
@ury 1283 @rwi @setspecial
%%BeginDocument: figs/structures.eps
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/RR1 {
pbox top get pbox bottom get sub abs
pbox left get pbox right get sub abs
2 copy lt {
Min
2 div dup dup dup
pbox left get add pbox left 3 -1 roll put
pbox right get exch sub pbox right 3 -1 roll put
pbox left get pbox bottom get moveto
pbox right get 0 3 -1 roll 90 -90 arcn
pbox left get 0 3 -1 roll -90 90 arcn closepath
} {
Min
2 div dup dup dup
pbox bottom get exch sub pbox bottom 3 -1 roll put
pbox top get add pbox top 3 -1 roll put
pbox left get pbox bottom get moveto
pbox left get add pbox top get
2 index
180 0 arc
dup pbox left get add pbox bottom get
3 -1 roll 0 180 arc
closepath
} ifelse
} bind def
/RR2 { 
dup dup dup dup dup dup dup dup 
pbox top get add pbox top 3 -1 roll put 
pbox left get add pbox left 3 -1 roll put 
pbox bottom get exch sub pbox bottom 3 -1 roll put 
pbox right get exch sub pbox right 3 -1 roll put 
pbox bottom get add pbox left get exch moveto 
pbox right get pbox bottom get 3 -1 roll 90 0 arcn 
pbox right get pbox top get 3 -1 roll  0 270 arcn 
pbox left get pbox top get 3 -1 roll  270 180 arcn 
pbox left get pbox bottom get 3 -1 roll 180 90 arcn closepath
} bind def 
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
/A1 {msave
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 5 -1 roll -90 add 5 -1 roll -90 add arcn
mrestore} bind def
/A2 {msave 0 0 moveto A1 closepath mrestore} def


/BitMap {
 /buffer ^1 string def
 ^2 ^5 2 div add 792 ^3 sub ^6 2 div add translate
 ^4 57.3 mul rotate
  0 ^5 2 div sub 0 ^6 2 div sub translate
 ^5 ^6 scale
 ^5 ^6 ^7 [^5 0 0 -^6 0 ^6] {currentfile buffer readhexstring pop} image
}bind def 
/note {
gsave pbox astore pop
0 792 translate 1 -1 scale CTM currentmatrix pop exch translate
pbox right get pbox left get sub 2 div
pbox bottom get pbox top get sub 2 div
translate 57.3 mul rotate setlinewidth
noteBody aload pop moveto
noteBody length 2 div 1 sub cvi{lineto}repeat
dogEar aload pop moveto
dogEar length 2 div 1 sub cvi{lineto}repeat
0.992 0.975 0.507 setrgbcolor gsave fill grestore
gsave newpath
stickem aload pop moveto
stickem length 2 div 1 sub cvi{lineto}repeat
0.760 0.760 0.760 setrgbcolor fill 
grestore
0 0 0 setrgbcolor stroke
noteShadow aload pop moveto
noteShadow length 2 div 1 sub cvi{lineto}repeat
dogEarShadow aload pop moveto
dogEarShadow length 2 div 1 sub cvi{lineto}repeat
0 0 0 setrgbcolor gsave stroke grestore fill
grestore
}bind def


 /redTbl4   [0 0 1 1 1 1 2 2 3 3 3 4 4 4 5 5] def
 /greenTbl4 [0 1 1 2 2 3 3 4 4 5 6 6 7 7 7 8] def
 /blueTbl4  [0 0 0 0 1 1 1 1 1 1 1 1 1 2 2 2] def
 /RGB4toGray4 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup
		-4 bitshift redTbl4 exch get
		exch 15 and greenTbl4 exch get add
		RGBBuf i 1 add  get dup
		-4 bitshift blueTbl4 exch get 3 -1 roll add  4 bitshift
		exch 15 and redTbl4 exch get
		RGBBuf i 2 add  get dup
		-4 bitshift greenTbl4 exch get 3 -1 roll add
		exch 15 and blueTbl4 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB8toGray8 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get 0.33 mul
		RGBBuf i 1 add get 0.55 mul add
		RGBBuf i 2 add get 0.12 mul add round cvi
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB24toGray8 {RGB8toGray8} bind def
 /redTbl2   [0 0 1 1] def
 /greenTbl2 [0 1 1 2] def
 /blueTbl2  [0 0 0 0] def
 /RGB2toGray2 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup dup
		-6 bitshift redTbl2 exch get
		exch -4 bitshift 3 and
		greenTbl2 exch get add
		exch -2 bitshift 3 and
		blueTbl2 exch get add
		6 bitshift exch 3 and
		redTbl2 exch get
		RGBBuf i 1 add  get dup dup dup
		-6 bitshift greenTbl2 exch get
		exch -4 bitshift 3 and
		blueTbl2 exch get add
		4 -1 roll add
		4 bitshift 4 -1 roll or
		3 1 roll -2 bitshift 3 and
		redTbl2 exch get exch 3 and
		greenTbl2 exch get add
		RGBBuf i 2 add  get dup dup dup
		-6 bitshift blueTbl2 exch get
		5 -1 roll add
		2 bitshift 5 -1 roll or
		4 1 roll -4 bitshift 3 and
		redTbl2 exch get
		exch -2 bitshift 3 and
		greenTbl2 exch get add
		exch 3 and
		greenTbl2 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB1toGray1 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup
		1 bitshift 128 and exch
		3 bitshift 64 and or exch
		5 bitshift 32 and or
		RGBBuf i 1 add get dup
		-1 bitshift 16 and exch
		1 bitshift 8 and or or
		RGBBuf i 2 add get dup dup
		-5 bitshift 4 and exch
		-3 bitshift 2 and or exch
		-1 bitshift 1 and or or
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB16toGray8 {RGB8toGray8} bind def
/ScalePoint {
	0 0
	4 -2 roll
	0 0 1 1
	8 4 roll GetBoxesRatio scale
} bind def
/PointDict 4 dict def
PointDict begin
/XPoint {
		-.5 .5 moveto
		.5 -.5 lineto
		.5 .5 moveto
		-.5 -.5 lineto
	} bind def
	/DiamondPoint {
		0.0 .5 moveto
		.5 0.0 lineto
		0.0 -0.5 lineto
		-.5 0.0 lineto
		closepath
	} bind def
	/PlusPoint {
		0.0 .5 moveto
		0.0 -.5 lineto
		-.5 0.0 moveto
		.5 0.0 lineto
	} bind def
	/SquarePoint {
		-.5 .5 moveto
		.5 .5 lineto
		.5 -.5 lineto
		-.5 -.5 lineto
		closepath
	} bind def
end
/DrawPoint {
	gsave
		[] 0 setdash
		0 setlinecap
		translate
		msave
			ScalePoint
			PointDict exch get exec
		mrestore
		1.0 setlinewidth stroke
	grestore
} bind def
/Subscriber { 
 msave 
 R PC PF LC SS newpath
 mrestore 
} bind def 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def


/rampdelta {
/len 0 3 -1 roll add def
/i2 0 3 -1 roll add def
/i1 0 3 -1 roll add def
/nRampSteps len cellPenW div cvi 1 add dup 512 gt {pop 512} if def
/rampPenW len nRampSteps div def
rampColors i1 get aload pop c1 astore pop
rampColors i2 get aload pop c2 astore pop
c2 0 get c1 0 get sub nRampSteps div d 0 3 -1 roll put
c2 1 get c1 1 get sub nRampSteps div d 1 3 -1 roll put
c2 2 get c1 2 get sub nRampSteps div d 2 3 -1 roll put
d aload pop
} bind def
/adddelta {
d astore pop
 mycurrentrgbcolor c1 copy pop
c1 0 get d 0 get add c2 0 3 -1 roll put
c1 1 get d 1 get add c2 1 3 -1 roll put
c1 2 get d 2 get add c2 2 3 -1 roll put
c2 aload pop setrgbcolor
c2 mycurrentrgbcolor copy pop
} bind def
/rampline {
segbox ulx get rampPenW add segbox ulx 3 -1 roll put
segbox llx get rampPenW add segbox llx 3 -1 roll put
segbox ulx get segbox uly get moveto
segbox llx get segbox lly get lineto
delta aload pop adddelta stroke
}bind def
/slantrampseg {
gsave newpath
segbox ulx get segbox urx get sub abs
rampdelta delta astore pop
segbox ulx get rampPenW .5 mul sub segbox ulx 3 -1 roll put
segbox llx get rampPenW .5 mul sub segbox llx 3 -1 roll put
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
rampPenW setlinewidth nRampSteps {rampline} repeat
grestore
}bind def
/flipramp {
rampColors 0 get rampColors 3 get rampColors 0 3 -1 roll put rampColors 3 3 -1 roll put
rampColors 1 get rampColors 2 get rampColors 1 3 -1 roll put rampColors 2 3 -1 roll put
} bind def
/leftrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
} bind def
/rightrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
} bind def
/drawslantramp {
segbox urx get segbox ulx get sub 3 div dup dup dup dup dup dup dup dup dup
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
segbox aload pop
0 0 1 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
segbox aload pop
1 1 2 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
2 2 3 slantrampseg
}bind def
/tan {
dup sin exch cos div
}bind def
/rampbox {
pbox top get dup rbox uly 3 -1 roll put rbox ury 3 -1 roll put
pbox left get dup rbox ulx 3 -1 roll put rbox llx 3 -1 roll put
pbox bottom get dup rbox lly 3 -1 roll put rbox lry 3 -1 roll put
pbox right get dup rbox urx 3 -1 roll put rbox lrx 3 -1 roll put
}bind def
/LoadSegBox {
4 copy
segbox llx 6 -1 roll put
segbox lly 5 -1 roll put
segbox lrx 4 -1 roll put
segbox lry 6 -1 roll put
segbox urx 5 -1 roll put
segbox ury 3 -1 roll put
segbox ulx 4 -1 roll put
segbox uly 3 -1 roll put
} bind def
/TransToCenter {
gsave
flattenpath
pathbbox
grestore
2 index
sub 2.0 div exch
3 index sub 2.0 div
4 -1 roll add
3 1 roll add
translate
} bind def
/RotRampGrad {
gsave
TransToCenter
-1.0 mul 180.0 add rotate
flattenpath
pathbbox 
clip
newpath
LoadSegBox
flipRatio 1 lt dup{flipramp}if flipRatio 0 gt and
{
/flipRatio 1.0 flipRatio sub def
segbox rbox copy pop leftrbox drawslantramp flipramp rightrbox drawslantramp
}
{drawslantramp} ifelse
grestore
} bind def
/bbg {
pbox exch get
} bind def
/DR {		% Directional ramp
/workingMatrix mstore def
objectCord setmatrix
flipramp
gsave
flattenpath pathbbox
grestore
pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
rampAngle RotRampGrad
RF
workingMatrix setmatrix
}bind def
/ramparc {
gsave
circum rampdelta delta astore pop
/rampPenW 60.0 nRampSteps div def
/ang1 exch rampAngle sub def 
/ang2 rampPenW ang1 add def 
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor 1 setlinewidth
nRampSteps {ramparcseg}repeat
grestore
}bind def
/ramparcseg {
newpath
rampcenter aload pop moveto
rampcenter aload pop rampradius ang2 ang1 arcn fill
/ang1 ang2 def 
/ang2 ang2 rampPenW add def
delta aload pop adddelta
}bind def
/GetRadius {
rbox urx get rbox llx get sub 2 div rampcenter 0 get abs add dup mul
rbox lly get rbox ury get sub 2 div rampcenter 1 get abs add dup mul
add sqrt
} bind def
/circularRamp {
rampbox
/rampradius GetRadius def
CalcCrcm
flipramp
0 0 0 1 ramparc
1 60 1 2 ramparc
2 120 2 3 ramparc
flipramp
0 180 0 1 ramparc
1 240 1 2 ramparc
2 300 2 3 ramparc
}bind def
/GetCircumf {
2.0 mul 3.1415926 mul
} bind def
/CalcCrcm {
rampradius GetCircumf
/circum exch 6.0 div def
} bind def
/CR {
gsave
clip
MTC currentmatrix pop
CTM setmatrix
flattenpath
pathbbox pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
pbox left get pbox right get sub abs 2 div 
pbox left get add rampcenter 0 get add rampcenter 0 3 -1 roll put
pbox top get pbox bottom get sub abs 2 div
pbox top get add rampcenter 1 get add rampcenter 1 3 -1 roll put
circularRamp
MTC setmatrix
grestore
RF
}bind def
/SBR {
gsave
clip
/workingMatrix mstore def
objectCord setmatrix
flattenpath
/BaseBox pathbbox 4 array astore def
/len BaseBox 2 get BaseBox 0 get sub dup mul
BaseBox 3 get BaseBox 1 get sub dup mul
add sqrt
12.0 div
def
/EndBox
BaseBox aload pop
3 -1 roll sub
3 1 roll
exch sub
/dbx exch def
/dby exch def
BaseBox aload pop pop pop
/blly exch def
/bllx exch def
sbox 0 get 100.0 div dby mul blly add
sbox 1 get 100.0 div dbx mul bllx add
sbox 2 get 100.0 div dby mul blly add
sbox 3 get 100.0 div dbx mul bllx add
exch
4 -2 roll
exch
4 -2 roll
4 array astore
def
BaseBox EndBox ShapeBurst
workingMatrix setmatrix
grestore
} bind def
/GetBoxCenter {
2 index
sub 2.0 div
3 -1 roll add
3 1 roll
1 index sub
2.0 div add
exch
} bind def
/GetInterBox {
/boxInter exch def
4 1 7 {
-1 roll
7 index
} for
sub boxInter mul
8 -1 roll add
7 1 roll
sub boxInter mul
7 -1 roll add
6 1 roll
sub boxInter mul
6 -1 roll add
5 1 roll
sub boxInter mul
5 -1 roll add
4 1 roll
} bind def
/GetBoxCenterDeltas {
GetBoxCenter
6 2 roll
GetBoxCenter
3 -1 roll exch sub
3 1 roll sub
exch
} bind def
/GetBoxCornerDeltas {
pop pop
4 2 roll pop pop
3 -1 roll sub
3 1 roll exch sub
exch
} bind def
/getpath {
/k 0 def
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{}pathforall
/pfa k array def
/k 0 def
{{moveto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{lineto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{curveto} 7 array astore pfa k 3 -1 roll put /k k 1 add def}
{}pathforall
}bind def
/ShapeBurst {
getpath
newpath
/SBERect exch 4 array copy def
/SBBRect exch 4 array copy def
/interRect1 SBBRect aload pop SBERect aload pop .3333333 GetInterBox 4 array astore def
/interRect2 SBBRect aload pop SBERect aload pop .6666666 GetInterBox 4 array astore def
0 0 1 SBBRect interRect1 ShapeBurstSeg
msave
interRect1 0 get interRect1 1 get translate
SBBRect aload pop interRect1 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
1 1 2 interRect1 interRect2 ShapeBurstSeg
mrestore
msave
interRect2 0 get interRect2 1 get translate
SBBRect aload pop interRect2 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
2 2 3 interRect2 SBERect ShapeBurstSeg
mrestore
} bind def
/ShapeBurstSeg {
/sbr1 exch 4 array copy def
/sbr0 exch 4 array copy def
/blx sbr0 0 get def
/bly sbr0 1 get def
len rampdelta delta astore pop
sbr0 aload pop sbr1 aload pop GetBoxesRatio
/ratioY exch def
/ratioX exch def
sbr0 aload pop sbr1 aload pop GetBoxCornerDeltas
/dlly exch nRampSteps div def
/dllx exch nRampSteps div def
/scaleStepX 1.0 ratioX sub nRampSteps div def
/scaleStepY 1.0 ratioY sub nRampSteps div def
/currentScaleX 1.0 scaleStepX sub def
/currentScaleY 1.0 scaleStepY sub def
/translationX blx dllx add def
/translationY bly dlly add def
/currentScaleX 1.0  def
/currentScaleY 1.0  def
/translationX blx def
/translationY bly def
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
nRampSteps {
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
delta aload pop adddelta
/translationX translationX dllx add def
/translationY translationY dlly add def
/currentScaleX currentScaleX scaleStepX sub def
/currentScaleY currentScaleY scaleStepY sub def
mrestore
} repeat
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
mrestore
} bind def
initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 40.000 35.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 40.000 69.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 41.000 74.000 0.000 0.000 10.000 31.000 rect
%@EndRect
gsave
89.500 46.000 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -15.500 3.000 S
(r) -10.496 3.000 S
(o) -7.501 3.000 S
(d) -2.498 3.000 S
(u) 2.504 3.000 S
(c) 7.507 3.000 S
(t) 12.007 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 53.000 27.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 70.000 41.000 0.000 0.000 11.000 44.000 rect
%@EndRect
gsave
63.000 75.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(P) -21.500 4.000 S
(r) -14.830 4.000 S
(o) -10.940 4.000 S
(d) -4.832 4.000 S
(u) 1.275 4.000 S
(c) 7.384 4.000 S
(t) 12.943 4.000 S
(s) 16.270 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 138.000 35.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 138.000 69.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 139.500 87.000 0.000 0.000 10.000 16.000 rect
%@EndRect
gsave
95.000 144.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -7.500 3.000 S
(a) -2.496 3.000 S
(r) 2.506 3.000 S
(t) 5.501 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 151.000 27.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 168.000 50.000 0.000 0.000 11.000 26.000 rect
%@EndRect
gsave
63.000 173.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(P) -12.500 4.000 S
(a) -5.830 4.000 S
(r) -0.270 4.000 S
(t) 3.618 4.000 S
(s) 6.945 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 40.000 212.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 40.000 246.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 41.500 249.500 0.000 0.000 10.000 31.000 rect
%@EndRect
gsave
265.000 46.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -15.000 3.000 S
(r) -9.996 3.000 S
(o) -7.001 3.000 S
(d) -1.998 3.000 S
(u) 3.004 3.000 S
(c) 8.007 3.000 S
(t) 12.507 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 53.000 203.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 70.000 217.000 0.000 0.000 11.000 44.000 rect
%@EndRect
gsave
239.000 75.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(P) -21.500 4.000 S
(r) -14.830 4.000 S
(o) -10.940 4.000 S
(d) -4.832 4.000 S
(u) 1.275 4.000 S
(c) 7.384 4.000 S
(t) 12.943 4.000 S
(s) 16.270 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 138.000 161.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 138.000 195.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 139.500 198.500 0.000 0.000 10.000 31.000 rect
%@EndRect
gsave
214.000 144.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -15.000 3.000 S
(r) -9.996 3.000 S
(o) -7.001 3.000 S
(d) -1.998 3.000 S
(u) 3.004 3.000 S
(c) 8.007 3.000 S
(t) 12.507 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 151.000 153.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 168.000 173.000 0.000 0.000 11.000 32.000 rect
%@EndRect
gsave
189.000 173.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(C) -15.500 4.000 S
(h) -8.280 4.000 S
(a) -2.172 4.000 S
(i) 3.386 4.000 S
(r) 6.165 4.000 S
(s) 10.054 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 138.000 259.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 138.000 293.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 139.500 296.500 0.000 0.000 10.000 31.000 rect
%@EndRect
gsave
312.000 144.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -15.000 3.000 S
(r) -9.996 3.000 S
(o) -7.001 3.000 S
(d) -1.998 3.000 S
(u) 3.004 3.000 S
(c) 8.007 3.000 S
(t) 12.507 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 151.000 251.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 168.000 270.500 0.000 0.000 11.000 33.000 rect
%@EndRect
gsave
287.000 173.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(L) -16.000 4.000 S
(a) -9.891 4.000 S
(m) -4.332 4.000 S
(p) 4.556 4.000 S
(s) 10.665 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
67.000 99.000 moveto
/Triangular 12.924 9.399 false 90.006 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 67.000 100.375 67.000 136.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
240.000 101.000 moveto
/Triangular 12.924 9.399 false 143.540 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 238.894 101.817 194.000 135.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
253.000 103.000 moveto
/Triangular 12.924 9.399 false 391.505 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 254.172 103.717 302.000 133.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginBezi
/saveobj save def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {} def
/PC {} def
1.000 0 107.000 207.000 0.000 0.000 15.000 79.000
pbox astore pop
0 792 translate 1 -1 scale exch translate pop CTM currentmatrix pop
/objectCord mstore def
pbox bbox copy pop
/CP {aload pop moveto /CP {aload length 2 eq {lineto}{curveto}ifelse} bind def} bind def
[0.000 3.000] CP
[7.000 6.000 10.000 10.000 19.000 13.000] CP
[29.000 15.000 35.000 15.000 46.000 14.000] CP
[56.000 12.000 62.000 10.000 71.000 6.000] CP
[73.000 4.000 74.000 2.000 77.000 1.000] CP
[77.000 0.000 77.000 1.000 78.000 1.000] CP
[78.000 0.000 78.000 0.000 79.000 0.000] CP
/useClip true def
PC PF
LC SS
saveobj restore
%@EndBezi
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 120.000 235.000 0.000 0.000 13.000 38.000 rect
%@EndRect
gsave
254.000 126.500 T translate
0.0 rotate
1 1 scale
12.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(d) -18.500 4.000 S
(i) -11.829 4.000 S
(s) -9.166 4.000 S
(j) -3.166 4.000 S
(o) -0.502 4.000 S
(i) 6.167 4.000 S
(n) 8.831 4.000 S
(t) 15.501 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 201.000 11.000 0.000 0.000 22.000 107.000 rect
%@EndRect
gsave
64.500 212.000 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(s) -40.010 -3.000 S
(u) -35.510 -3.000 S
(b) -30.506 -3.000 S
(t) -25.503 -3.000 S
(y) -23.003 -3.000 S
(p) -18.503 -3.000 S
(e) -13.500 -3.000 S
( ) -8.496 -3.000 S
(r) -5.996 -3.000 S
(e) -3.001 -3.000 S
(l) 2.001 -3.000 S
(a) 3.999 -3.000 S
(t) 9.002 -3.000 S
(i) 11.502 -3.000 S
(o) 13.500 -3.000 S
(n) 18.503 -3.000 S
(s) 23.506 -3.000 S
(h) 28.006 -3.000 S
(i) 33.009 -3.000 S
(p) 35.006 -3.000 S
0.000 0.000 0.000 setrgbcolor 
(b) -46.757 7.000 S
(e) -41.754 7.000 S
(t) -36.751 7.000 S
(w) -34.250 7.000 S
(e) -27.753 7.000 S
(e) -22.750 7.000 S
(n) -17.747 7.000 S
( ) -12.744 7.000 S
(m) -10.243 7.000 S
(e) -2.748 7.000 S
(m) 2.254 7.000 S
(b) 9.749 7.000 S
(e) 14.752 7.000 S
(r) 19.755 7.000 S
( ) 22.750 7.000 S
(t) 25.250 7.000 S
(y) 27.751 7.000 S
(p) 32.251 7.000 S
(e) 37.254 7.000 S
(s) 42.257 7.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 201.000 180.000 0.000 0.000 22.000 129.000 rect
%@EndRect
gsave
244.500 212.000 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(c) -48.342 -3.000 S
(o) -43.842 -3.000 S
(v) -38.838 -3.000 S
(e) -34.338 -3.000 S
(r) -29.335 -3.000 S
( ) -26.340 -3.000 S
(|) -23.840 -3.000 S
( ) -21.502 -3.000 S
(d) -19.001 -3.000 S
(i) -13.998 -3.000 S
(s) -12.001 -3.000 S
(j) -7.501 -3.000 S
(o) -5.504 -3.000 S
(i) -0.500 -3.000 S
(n) 1.496 -3.000 S
(t) 6.499 -3.000 S
( ) 9.000 -3.000 S
(|) 11.500 -3.000 S
( ) 13.838 -3.000 S
(p) 16.338 -3.000 S
(a) 21.342 -3.000 S
(r) 26.345 -3.000 S
(t) 29.340 -3.000 S
(i) 31.840 -3.000 S
(t) 33.837 -3.000 S
(i) 36.338 -3.000 S
(o) 38.335 -3.000 S
(n) 43.338 -3.000 S
0.000 0.000 0.000 setrgbcolor 
(|) -19.420 7.000 S
( ) -17.082 7.000 S
(i) -14.582 7.000 S
(n) -12.584 7.000 S
(t) -7.581 7.000 S
(e) -5.081 7.000 S
(r) -0.078 7.000 S
(s) 2.916 7.000 S
(e) 7.416 7.000 S
(c) 12.420 7.000 S
(t) 16.920 7.000 S
grestore
%@EndText
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 7.000 32.000 0.000 0.000 14.000 79.000 rect
%@EndRect
gsave
71.500 14.000 T translate
0.0 rotate
1 1 scale
12.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(S) -39.500 4.000 S
(u) -31.496 4.000 S
(b) -24.166 4.000 S
(c) -16.835 4.000 S
(o) -10.165 4.000 S
(l) -2.834 4.000 S
(l) 0.499 4.000 S
(e) 3.833 4.000 S
(c) 10.503 4.000 S
(t) 17.174 4.000 S
(i) 21.167 4.000 S
(o) 24.501 4.000 S
(n) 31.832 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 7.000 194.000 0.000 0.000 28.000 99.000 rect
%@EndRect
gsave
243.500 21.000 T translate
0.0 rotate
1 1 scale
12.000 (_Helvetica-Bold) fess
0.000 0.000 0.000 setrgbcolor 
(C) -47.663 -3.000 S
(o) -39.000 -3.000 S
(n) -31.669 -3.000 S
(s) -24.339 -3.000 S
(t) -17.668 -3.000 S
(r) -13.675 -3.000 S
(a) -9.008 -3.000 S
(i) -2.337 -3.000 S
(n) 0.996 -3.000 S
(t) 8.326 -3.000 S
(s) 12.319 -3.000 S
( ) 18.990 -3.000 S
(o) 22.324 -3.000 S
(v) 29.654 -3.000 S
(e) 36.325 -3.000 S
(r) 42.996 -3.000 S
( ) 47.663 -3.000 S
0.000 0.000 0.000 setrgbcolor 
(S) -42.666 10.000 S
(u) -34.662 10.000 S
(b) -27.332 10.000 S
(c) -20.002 10.000 S
(o) -13.331 10.000 S
(l) -6.001 10.000 S
(l) -2.667 10.000 S
(e) 0.666 10.000 S
(c) 7.337 10.000 S
(t) 14.008 10.000 S
(i) 18.001 10.000 S
(o) 21.335 10.000 S
(n) 28.665 10.000 S
(s) 35.995 10.000 S
grestore
%@EndText
restore
end
%%EndDocument
 @endspecial 575 2474 a
 currentpoint grestore moveto
 575 2474 a 40 2474 a
 currentpoint currentpoint translate 1 1.34938 div 1 1.34938 div scale
neg exch neg exch translate
 40 2474
a 66 2565 a Ff(Figure)k(2.)e(Classi\002cation)g(structures)-41
2663 y Fi(A)17 b(more)g(detailed)g(description)f(of)h(the)g
Fj(OM)f(model)h Fi(can)h(be)1118 239 y
 currentpoint currentpoint translate 1.27022 1.27022 scale neg exch
neg exch translate
 1118 239 a 1118
239 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 1118 239 a @beginspecial 11 @llx 664 @lly 352 @urx
777 @ury 1363 @rwi @setspecial
%%BeginDocument: figs/associations.eps
/MAV 300 dict def
MAV begin 
/useClip true def 
/top    0 def 
/left   1 def 
/bottom 2 def 
/right  3 def 
/CM     6 array def 
/CTM    6 array def 
/CTMR   6 array def 
/MTC    6 array def 
/blimit 1500 def 
/bcnt   0 def 
/rbox 8 array def 
/segbox 8 array def 
/bbox1 4 array def 
/c1 3 array def 
/c2 3 array def 
/d 3 array def    
/delta 3 array def 
/mycurrentrgbcolor 3 array def 
/ulx 0 def 
/uly 1 def 
/llx 2 def 
/lly 3 def 
/urx 4 def 
/ury 5 def 
/lrx 6 def 
/lry 7 def 
/sp [0 0] def 
/ep [0 0] def 
/bbox 4 array def 
/pbox 4 array def 
/scrnProc currentscreen 3 1 roll pop pop def
/currentcolorscreen where {
begin
currentcolorscreen
end
3 1 roll pop pop 
4 2 roll pop pop 
5 -2 roll pop pop 
6 -2 roll pop pop 
/kProc exch def 
/bProc exch def 
/gProc exch def 
/rProc exch def 
} if 
/Max {2 copy gt {pop}{exch pop} ifelse} bind def
/Min {2 copy lt {pop}{exch pop} ifelse} bind def
/cellPenW 72.0 /currentcolorscreen where
{begin currentcolorscreen end pop pop
10 1 roll pop pop 8 1 roll pop pop
 6 1 roll pop pop Max Max Max }
{currentscreen pop pop} ifelse div 2.0 div def
/rect { 
 /saveobj save def 
 R PC PF LC SS 
 saveobj restore 
} bind def 
/R { 
 newpath
 pbox astore pop
 0 792 translate 1 -1 scale CTMR currentmatrix pop exch translate
 /objectCord mstore def
 pbox right get 2 div
 dup pbox left get exch sub
 pbox left 3 -1 roll put 
 dup pbox right 3 -1 roll put
 pbox bottom get 2 div 
 dup pbox top get exch sub
 pbox top 3 -1 roll put
 dup pbox bottom 3 -1 roll put
 translate 
 CTM currentmatrix pop
 57.3 mul rotate
 RT
} bind def
 /SaveScreenBW {
 currentscreen
 /scrnProc exch def
 /scrnAngle exch def
 /scrnFreq exch def
 } bind def
 /RestoreScreenBW {
 scrnFreq scrnAngle MAV /scrnProc get setscreen
 } bind def
 /SetFreqAngleBW {
 currentscreen
 3 1 roll
 pop pop
 setscreen
 } bind def
 /SaveScreenColor {
 currentcolorscreen
 /grayProc exch def
 /grayAngle exch def
 /grayFreq exch def
 /bProc exch def
 /bAngle exch def
 /bFreq exch def
 /gProc exch def
 /gAngle exch def
 /gFreq exch def
 /rProc exch def
 /rAngle exch def
 /rFreq exch def
 } bind def
 /RestoreColorScreen {
 rFreq rAngle MAV /rProc get gFreq gAngle MAV /gProc get bFreq bAngle MAV /bProc get grayFreq grayAngle MAV /grayProc get setcolorscreen
 } bind def
 /SetFreqAngleColor { 
 currentcolorscreen 
 3 1 roll pop pop
 4 2 roll pop pop
 5 -2 roll pop pop
 6 -2 roll pop pop
 4 1 roll 
 6 1 roll 
 8 1 roll 
 10 1 roll 
 setcolorscreen 
 } bind def 
/initmsaverestore { 
userdict begin 
/mdict 10 dict def 
mdict begin 
/mindex -1 def 
/mstacksize 25 def 
/mstack mstacksize array def 
/incmindex { 
/mindex mindex 1 add def 
} bind def 
/decmindex { 
/mindex mindex 1 sub def 
} bind def 
/checkmindex { 
mindex 0 lt { 
(%ERROR: msave/mrestore stack underflow: Offending command 'mrestore'
) print flush 
stop 
} 
{ 
mindex mstacksize ge { 
(%ERROR: msave/mrestore stack overflow: Offending command 'msave'
) print flush 
stop 
} if 
} ifelse 
} bind def 
/mpush { 
incmindex 
checkmindex 
mstack mindex 
3 -1 roll put 
} bind def 
/mpop { 
checkmindex 
mstack mindex get 
decmindex 
} bind def 
end 
end 
} bind def 
/msave { 
mdict begin 
matrix currentmatrix mpush 
end 
} bind def 
/mrestore { 
mdict begin 
mpop setmatrix 
end 
} bind def 
/msavelevel { 
mdict begin 
mindex 1 add 
end 
} bind def 
/mstore {
matrix currentmatrix
} bind def
/AutoSizeY {
0 0 pl
dup 3 1 roll
4 -1 roll  
add
pl exch pop
exch sub
} bind def
/pl {  
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bind def
/pll {
transform
round exch
round exch
itransform
} bind def
/pr { 
dtransform
round exch
round exch
idtransform
} bind def
/m { 
pl  moveto
} bind def
/l { 
pl lineto
} bind def
/c { 
pl curveto
} bind def
/rm { 
pr rmoveto
} bind def
/rl { 
pr rlineto
} bind def
/ar { 
5 -2 roll pl
5 2 roll
arc
} bind def
/an { 
5 -2 roll pl
5 2 roll
arcn
} bind def
/MakePatternFont {
/FontDict 20 dict def
FontDict begin
/FontName exch def
/Encoding exch def
/FontMatrix [1 0 0 1 0 0 ] def
/FontType 3 def
/FontBBox [ 0 0 1 1 ] def
/PatternDict exch def
/RenderPattern {
patternDict exch get
exec
} bind def
/BuildChar {
exch begin
1 0 0 0 1 1 setcachedevice
Encoding exch get RenderPattern
end
} bind def
FontName FontDict definefont pop
end
} bind def
/SnapToPattenGrid
	{
	exch
	dup 0 lt {
		1 index sub
	} if
	1 index
	div truncate
	mul
} bind def
/FillPatternString {
dup length
1 sub
0 1 3 -1 roll {
2 index
2 index
3 -2 roll
put
} for
pop pop
} bind def
/AutoSizeY {
	0.0 exch dtransform
	round
	idtransform exch pop
} bind def
 /AutoSizeX {
	0.0 dtransform
	exch
	round
	exch
	idtransform pop
} bind def 
/AutoCellSize {
	AutoSizeY
	exch
	AutoSizeX
	exch
} bind def
/CheckPath {
	false
	{ pop pop pop true exit}
	{ pop pop pop true exit}
	{ pop pop pop pop pop pop pop true exit}
	{ pop true exit}
	pathforall
} bind def
/PatternFill {					%		patternCharacter
	/patternString 1 string def
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/patternSize exch 24.0 mul def
	/PatternSizeX exch 24.0 mul patternString length mul def
	/flaterror 0 def
	patternString FillPatternString
	gsave
		flaterror 1 add setflat
		flattenpath
		pathbbox
	grestore
	psy add flaterror add psy SnapToPattenGrid
	exch psx add flaterror add psx SnapToPattenGrid
	3 -1 roll flaterror sub psy SnapToPattenGrid
	4 -1 roll flaterror sub psx SnapToPattenGrid
	4 2 roll pll
	4 2 roll pll
	/llxsnap exch def
	/llysnap exch def
	/urxsnap exch def
	/urysnap exch def
	gsave
		useClip true eq {clip}{eoclip} ifelse newpath
		/PatternFont findfont [psx 0.0 0.0 psy 0.0 0.0] makefont setfont
		llysnap patternSize urysnap {
			llxsnap exch moveto
			llxsnap PatternSizeX urxsnap {
				pop
				patternString show
				%currentpoint am
			} for
		} bind for
	grestore
	cm setmatrix
} bind def				%		End 'PatternFill'
/DefaultPatternFont {
	/cm mstore def
	patternMatrix setmatrix
	1 1 AutoCellSize
	dup 0 eq { pop 1} if
	exch
	dup 0 eq { pop 1} if
	exch
	/psy exch iSizeY mul def
	/psx exch iSizeX mul def
	/patternDict 64 dict def
	patternDict begin
		/NotDef {} def
		/LiteDiagLines {
			iSizeX iSizeY false [iSizeX 0.0 0.0 iSizeY -1.0 mul  0.0 iSizeY]
			{pat}
			imagemask
		} bind def
	end
	/CustEncoding 256 array def
	0 255 1 {
		CustEncoding exch /NotDef put
	} bind for
	CustEncoding 65 /LiteDiagLines put
	patternDict CustEncoding /PatternFont MakePatternFont
	/pathSegProc {
		strokepath
		CheckPath {
			65 PatternFill newpath
		} if
	} bind def
	cm setmatrix
} bind def
/XRound {
	dup
	3 -1 roll
	exch mul round
	exch div
} bind def
/RoundMatrix {
	/i 0 def
	dup {
		100000.0 XRound
		1 index
		exch i exch put
		/i i 1 add def
	} forall
} bind def
/GetBoxesRatio {
3 -1 roll sub
7 1 roll
exch sub
6 1 roll
3 -1 roll sub
5 1 roll
exch sub
4 1 roll
3 -1 roll div
3 1 roll
exch div
exch
} bind def
/T {792 exch sub} bind def
/sx 0 def
/sy 0 def
/ex 0 def
/ey 0 def
/lw  0 def
/siz 0 def
/U {gsave 0 setlinecap
/lw siz 0.078125 mul def  /ey exch neg def /ex exch def /sy exch neg def /sx exch def
fontkind plain eq 
 {
  lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
 }
 {
   currentdict /outlineFontSize known outlineFontSize 0 gt and
     {
       fontkind outline eq
         {
           /sy sy 0.0119444 siz mul sub def
           /ey ey 0.0119444 siz mul sub def
           gsave 
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
       fontkind shadow eq fontkind outlineshadow eq or
         {
           /sy sy 0.0358332 siz mul sub def
           /ey ey 0.0358332 siz mul sub def
           lw setlinewidth
           lw 2 div sx add sy
           lw 2 div sub moveto
           lw 2 div ex add ey
           lw 2 div sub lineto stroke 
           gsave
           1 1 1 setrgbcolor lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto stroke
           grestore
           lw siz 0.0119444 mul sub setlinewidth sx sy moveto ex ey lineto
           strokepath 0.0119444 siz mul setlinewidth stroke
         } if
      } if
 } ifelse
grestore} bind def
/plain 1 def
/outline 2 def
/shadow 3 def
/outlineshadow 4 def
/fess {
	currentdict /outlineFontSize known {
		/outlineFontSize 2 index def
	} if
	findfont exch dup /siz exch def scalefont setfont
} bind def
/SHDW {gsave siz oldfontname fess siz 0.055 mul x add y siz 0.05 mul sub moveto c show grestore} def
/NRML {gsave 1 1 1 setrgbcolor siz oldfontname fess x y moveto c show grestore siz /Outline fess  x y moveto c show} def
/S {
fontkind plain eq {neg moveto show} if
fontkind outline eq {neg /y exch def /x exch def /c exch def NRML} if
fontkind shadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
fontkind outlineshadow eq {neg /y exch def /x exch def /c exch def SHDW NRML} if
} bind def
/F {
/fontkind exch def
fontkind plain eq {fess} if
fontkind outline eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind shadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
fontkind outlineshadow eq {dup /oldfontname exch def exch dup /siz exch def exch OLF} if
} bind def
/makeoutlinedict 15 dict def
/makeoutlinefont
 {
  makeoutlinedict begin
   /uniqueid exch def
   /strokewidth exch def
   /newfontname exch def
   /basefontname exch def
   FontDirectory basefontname known not {
    /basefontname /Times-Roman def
   } if
   /basefontdict basefontname findfont def
   /numentries basefontdict maxlength 1 add def
   basefontdict /UniqueID known not
   {/numentries numentries 1 add def} if
   /outfontdict numentries dict def
   basefontdict
   {
     exch dup /FID ne {exch outfontdict 3 1 roll put} {pop pop} ifelse
	  }forall
   outfontdict /FontName newfontname put
   outfontdict /PaintType 2 put
   outfontdict /StrokeWidth strokewidth put
   outfontdict /UniqueID uniqueid put
   newfontname outfontdict definefont pop
  end
  }def
/UID {
 findfont dup /UniqueID known
  {/UniqueID get 1 add}
  {pop 1}
  ifelse
} def
/OLF {
dup
/Outline
1000 62 div
4 -1 roll
UID
/outlineFontSize 5 index def
makeoutlinefont
/Outline findfont exch scalefont setfont
} def
/CopyEncoding {
findfont
/Encoding get
dup length array
/tarrayz exch def
tarrayz 0
3 -1 roll
putinterval
tarrayz
} bind def
/Re-encode {
dup length array copy
/eap 0 def
exch {
dup type /integertype eq {
/eap exch def
} {
1 index
exch
eap exch
put
/eap eap 1 add def
} ifelse
} forall
} bind def
/EncodeFont	{
findfont dup
length dict
begin
{	1 index /FID ne
{ def }
{ pop pop } ifelse
} forall
/FontName exch def
/Encoding exch def
FontName currentdict
end
definefont pop
} bind def
/clip2pathbbox {
	/magicNum linewidth 2 div 1 2 sqrt div mul def
	pathbbox
	/urymn exch magicNum add def
	/urxmn exch magicNum add def
	/llymn exch magicNum sub def
	/llxmn exch magicNum sub def
	newpath llxmn llymn moveto llxmn urymn lineto urxmn urymn lineto urxmn llymn lineto
	closepath clip newpath
} bind def
/Line {
MAV /LC get length 0 ne
{
	gsave
			newpath
			MAV /ArrowType get length 0 eq
			MAV /SD get length 0 eq and
			{2 setlinecap /UseClip {clip2pathbbox} def }
			{0 setlinecap /UseClip {} def } ifelse
			0 792 translate
			1 -1 scale
			CTM currentmatrix pop
			/yStart exch def /xStart exch def /yEnd exch def /xEnd exch def /linewidth exch def
			MAV /ArrowType get length 0 eq xStart xEnd ne yStart yEnd ne and and
			{xStart yStart moveto xEnd yEnd lineto UseClip xStart yStart moveto xEnd yEnd lineto}
			{xStart yStart moveto xEnd yEnd lineto} ifelse
			linewidth setlinewidth SD strokepath
			CheckPath {LC PF ArrowType} if
	grestore
}
{pop pop pop pop pop} ifelse
} bind def
/ZeroLine {
	gsave
		newpath
		MAV /ArrowType get length 0 ne {
			/UseClip {} def
			0 792 translate
			1 -1 scale
			pop pop pop pop pop
			CTM currentmatrix pop
			ArrowType
		} if
	grestore
} bind def
/CompensateForStroke {
	sin currentlinewidth mul
	exch
	cos currentlinewidth mul
	dup 0 translate
	4 -1 roll exch 2.0 mul sub
	3 1 roll
	2.0 mul sub
} bind def
/arrowdict 10 dict def
arrowdict begin
	/SwallowTail {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		.666 0.0 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/Triangular {
		newpath
		0.0 0.0 moveto
		1.0 -.5 lineto
		1.0 .5 lineto
		closepath
	} bind def
	/OpenTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
	} bind def
	/ClosedTri {
		newpath
		1.0 0.5 moveto
		0.0 0.0 lineto
		1.0 -0.5 lineto
		closepath
	} bind def
	/SlashBar {
		newpath
		0.5 -.5 moveto
		-.5 0.5 lineto
	} bind def
	/Dot {
		newpath
		0.5 0.0 moveto
		0 0 1 0 360 arc
		closepath
	} bind def
	/ExtSlashBar {
		newpath
		1.0 -.5 moveto
		0.0 0.5 lineto
	} bind def
end
/ScaleArrowHead {
	0 0 4 -2 roll
	0 0 1 1
	8 -4 roll GetBoxesRatio
	scale
} bind def
/DrawArrowHead {
	gsave
	[] 0 setdash
	currentpoint translate rotate
	{
		4 copy
		gsave
			initmatrix
			100 200 translate
			msave
				ScaleArrowHead pop
				arrowdict exch get exec
			mrestore
			strokepath
			0 0 3 index 3 index
			pathbbox 8 4 roll
			GetBoxesRatio
			4 2 roll
		grestore
		3 index 1.0 exch sub
		6 -1 roll
		{
			2 index mul
			0 translate
		}{
			pop
		} ifelse
		msave
			ScaleArrowHead scale
			arrowdict exch get exec
		mrestore
		strokepath
	} {
		msave
		ScaleArrowHead
		arrowdict exch get exec
		mrestore
	} ifelse
		CheckPath {
			LC PF
		} if
	grestore
} bind def
/SR { 
 pbox left get pbox top get moveto 
 pbox right get pbox top get lineto 
 pbox right get pbox bottom get lineto 
 pbox left get pbox bottom get lineto 
 closepath
} bind def 
/RR1 {
pbox top get pbox bottom get sub abs
pbox left get pbox right get sub abs
2 copy lt {
Min
2 div dup dup dup
pbox left get add pbox left 3 -1 roll put
pbox right get exch sub pbox right 3 -1 roll put
pbox left get pbox bottom get moveto
pbox right get 0 3 -1 roll 90 -90 arcn
pbox left get 0 3 -1 roll -90 90 arcn closepath
} {
Min
2 div dup dup dup
pbox bottom get exch sub pbox bottom 3 -1 roll put
pbox top get add pbox top 3 -1 roll put
pbox left get pbox bottom get moveto
pbox left get add pbox top get
2 index
180 0 arc
dup pbox left get add pbox bottom get
3 -1 roll 0 180 arc
closepath
} ifelse
} bind def
/RR2 { 
dup dup dup dup dup dup dup dup 
pbox top get add pbox top 3 -1 roll put 
pbox left get add pbox left 3 -1 roll put 
pbox bottom get exch sub pbox bottom 3 -1 roll put 
pbox right get exch sub pbox right 3 -1 roll put 
pbox bottom get add pbox left get exch moveto 
pbox right get pbox bottom get 3 -1 roll 90 0 arcn 
pbox right get pbox top get 3 -1 roll  0 270 arcn 
pbox left get pbox top get 3 -1 roll  270 180 arcn 
pbox left get pbox bottom get 3 -1 roll 180 90 arcn closepath
} bind def 
/E {
1.415 setmiterlimit
CM currentmatrix pop
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 0 360 arc closepath
CM setmatrix
} bind def
/A1 {msave
pbox right get pbox left get sub abs dup
pbox bottom get pbox top get sub abs dup 3 -1 roll
lt {exch dup 3 -1 roll exch div 1 exch}
{dup 3 -1 roll exch div 1} ifelse scale 
0 0 3 -1 roll 2 div 5 -1 roll -90 add 5 -1 roll -90 add arcn
mrestore} bind def
/A2 {msave 0 0 moveto A1 closepath mrestore} def


/BitMap {
 /buffer ^1 string def
 ^2 ^5 2 div add 792 ^3 sub ^6 2 div add translate
 ^4 57.3 mul rotate
  0 ^5 2 div sub 0 ^6 2 div sub translate
 ^5 ^6 scale
 ^5 ^6 ^7 [^5 0 0 -^6 0 ^6] {currentfile buffer readhexstring pop} image
}bind def 
/note {
gsave pbox astore pop
0 792 translate 1 -1 scale CTM currentmatrix pop exch translate
pbox right get pbox left get sub 2 div
pbox bottom get pbox top get sub 2 div
translate 57.3 mul rotate setlinewidth
noteBody aload pop moveto
noteBody length 2 div 1 sub cvi{lineto}repeat
dogEar aload pop moveto
dogEar length 2 div 1 sub cvi{lineto}repeat
0.992 0.975 0.507 setrgbcolor gsave fill grestore
gsave newpath
stickem aload pop moveto
stickem length 2 div 1 sub cvi{lineto}repeat
0.760 0.760 0.760 setrgbcolor fill 
grestore
0 0 0 setrgbcolor stroke
noteShadow aload pop moveto
noteShadow length 2 div 1 sub cvi{lineto}repeat
dogEarShadow aload pop moveto
dogEarShadow length 2 div 1 sub cvi{lineto}repeat
0 0 0 setrgbcolor gsave stroke grestore fill
grestore
}bind def


 /redTbl4   [0 0 1 1 1 1 2 2 3 3 3 4 4 4 5 5] def
 /greenTbl4 [0 1 1 2 2 3 3 4 4 5 6 6 7 7 7 8] def
 /blueTbl4  [0 0 0 0 1 1 1 1 1 1 1 1 1 2 2 2] def
 /RGB4toGray4 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup
		-4 bitshift redTbl4 exch get
		exch 15 and greenTbl4 exch get add
		RGBBuf i 1 add  get dup
		-4 bitshift blueTbl4 exch get 3 -1 roll add  4 bitshift
		exch 15 and redTbl4 exch get
		RGBBuf i 2 add  get dup
		-4 bitshift greenTbl4 exch get 3 -1 roll add
		exch 15 and blueTbl4 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB8toGray8 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get 0.33 mul
		RGBBuf i 1 add get 0.55 mul add
		RGBBuf i 2 add get 0.12 mul add round cvi
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB24toGray8 {RGB8toGray8} bind def
 /redTbl2   [0 0 1 1] def
 /greenTbl2 [0 1 1 2] def
 /blueTbl2  [0 0 0 0] def
 /RGB2toGray2 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup dup
		-6 bitshift redTbl2 exch get
		exch -4 bitshift 3 and
		greenTbl2 exch get add
		exch -2 bitshift 3 and
		blueTbl2 exch get add
		6 bitshift exch 3 and
		redTbl2 exch get
		RGBBuf i 1 add  get dup dup dup
		-6 bitshift greenTbl2 exch get
		exch -4 bitshift 3 and
		blueTbl2 exch get add
		4 -1 roll add
		4 bitshift 4 -1 roll or
		3 1 roll -2 bitshift 3 and
		redTbl2 exch get exch 3 and
		greenTbl2 exch get add
		RGBBuf i 2 add  get dup dup dup
		-6 bitshift blueTbl2 exch get
		5 -1 roll add
		2 bitshift 5 -1 roll or
		4 1 roll -4 bitshift 3 and
		redTbl2 exch get
		exch -2 bitshift 3 and
		greenTbl2 exch get add
		exch 3 and
		greenTbl2 exch get add or
		grayBuf j 3 -1 roll put
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB1toGray1 {
	currentfile RGBBuf readhexstring pop pop
	/i 0 def
	/j 0 def
	grayBuf length {
		RGBBuf i get dup dup
		1 bitshift 128 and exch
		3 bitshift 64 and or exch
		5 bitshift 32 and or
		RGBBuf i 1 add get dup
		-1 bitshift 16 and exch
		1 bitshift 8 and or or
		RGBBuf i 2 add get dup dup
		-5 bitshift 4 and exch
		-3 bitshift 2 and or exch
		-1 bitshift 1 and or or
		/i i 3 add def
		/j j 1 add def
	} repeat
	grayBuf
} bind def
/RGB16toGray8 {RGB8toGray8} bind def
/ScalePoint {
	0 0
	4 -2 roll
	0 0 1 1
	8 4 roll GetBoxesRatio scale
} bind def
/PointDict 4 dict def
PointDict begin
/XPoint {
		-.5 .5 moveto
		.5 -.5 lineto
		.5 .5 moveto
		-.5 -.5 lineto
	} bind def
	/DiamondPoint {
		0.0 .5 moveto
		.5 0.0 lineto
		0.0 -0.5 lineto
		-.5 0.0 lineto
		closepath
	} bind def
	/PlusPoint {
		0.0 .5 moveto
		0.0 -.5 lineto
		-.5 0.0 moveto
		.5 0.0 lineto
	} bind def
	/SquarePoint {
		-.5 .5 moveto
		.5 .5 lineto
		.5 -.5 lineto
		-.5 -.5 lineto
		closepath
	} bind def
end
/DrawPoint {
	gsave
		[] 0 setdash
		0 setlinecap
		translate
		msave
			ScalePoint
			PointDict exch get exec
		mrestore
		1.0 setlinewidth stroke
	grestore
} bind def
/Subscriber { 
 msave 
 R PC PF LC SS newpath
 mrestore 
} bind def 
/StripFromFront { 
dup length
2 index sub
3 1 roll
exch 3 -1 roll
getinterval
} bind def
/MakePathArray { 
 /k 0 def 
 {/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{/k k 1 add def }pathforall 
 k array
 /k 0 def 
 {{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{curveto} 7 array astore 1 index k 3 -1 roll put /k k 1 add def} 
 {{closepath} 1 array astore 1 index k 3 -1 roll put /k k 1 add def} 
pathforall 
}bind def 
/MakeFlatPathArray { 
/k 0 def 
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{pop pop pop pop pop pop}{}pathforall 
k array
/k 0 def 
{{moveto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{{lineto} 3 array astore 1 index k 3 -1 roll put /k k 1 add def} 
{ pop pop pop pop pop pop} 
{} 
pathforall 
}bind def 
/FractionalLine {
2 index sub
.00001 mul
exch
3 index sub
.00001 mul
4 -1 roll add
3 1 roll
add
} bind def
/calcLineLength {
 exch
 4 -1 roll
 sub
 dup mul
 3 1 roll exch
 sub
 dup mul
 add sqrt
} bind def
/InitTotalLineLength {
 /oldY exch def
 /oldX exch def
 theDash aload pop currentLineLength add setdash
} bind def
/AccumeLineLength {
 3 copy pop
 2 copy
 oldX oldY
 4 2 roll calcLineLength
 /segmentLength exch def
 /currentLineLength currentLineLength segmentLength add def
 /oldY exch def
 /oldX exch def
} bind def
/DecumeLastLineLength {
 /currentLineLength currentLineLength segmentLength sub def
} bind def
/DrawFlattendSegment {
 /pointCount 2 def
 dup 0 lt { pop 0 } if
 fpc
 3 1 roll
 2 index
 1 index
 gt {
 2 copy get
 dup length
 dup 3 eq {
 pop
 dup 0 get
 exch 1 get
 2 copy InitTotalLineLength  
 m
 } {
 } ifelse
 } {
 pop 1 index
 } ifelse
 dup 1 add
 3 index
 exch sub
 dup 10 gt { pop 10} if
 {
 1 add
 2 copy
 get aload pop
 AccumeLineLength
 exec
 } repeat
 3 1 roll pop pop
 DecumeLastLineLength
} bind def
/IncFPC {
 fpc add
 /fpc exch def
} bind def
/DrawFlatPathArray {
 fpc
 0 { 
 dup 2 index
 1 sub
 lt { 
 flatPathArray exch
 newpath
 1 sub DrawFlattendSegment
 gsave
 pathSegProc
 grestore
 newpath
 }
 {
 pop pop
 exit
 } ifelse
 } loop
} bind def
/RecordFirstSubSegment {
 closepathArray 0 pathArray 0 get
 put
 closepathArray 1
 pathArray 0 get aload pop pop
 pathArray 1 get dup length 3 eq {
 aload pop pop
 } {
 newpath
 0 0 moveto
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 segmentArray 1 get aload pop pop
 } ifelse
 FractionalLine {lineto} 3 array astore
 put
} bind def
/AppendClosePath {
 closepathArray 0 get 2 {lineto} put
 flatPathArray fpc closepathArray 0 get put
 1 IncFPC
 flatPathArray fpc closepathArray 1 get put
 1 IncFPC
} bind def
/RecordCurrentDash {
 /theDash
 currentdash 2 array astore def
 /currentLineLength 0 def
} bind def
/PatternStroke {
	0 setlinecap
 RecordCurrentDash
 /saveFlat currentflat def
 .5 setflat
 /pathArray MakePathArray def
 /closepathArray 2 array def
 /pathLength pathArray length def
 /flatPathArray 513 array def
 /currentLineLength 0 def
 /fpc 0 def
 pathArray pathLength 1 sub get
 length 1 eq {
 /usingClosepath true def
 RecordFirstSubSegment
 /pathLength pathLength 1 sub def
 } {
 /usingClosepath false def
 } ifelse
 0 1 pathLength 1 sub {
 pathArray exch get
 dup length 3 eq {
 fpc 1 add 512 ge {
 DrawFlatPathArray
 fpc 2 ge {
 flatPathArray flatPathArray fpc 2 sub get 0 put
 flatPathArray flatPathArray fpc 1 sub get 1 put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } if
 flatPathArray exch fpc exch put
 1 IncFPC
 } {
 dup length 7 eq {
 newpath
 /nToStrip 0 def
 fpc 1 gt {
 flatPathArray fpc 2 sub get aload pop pop m
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } {
 fpc 1 eq {
 flatPathArray fpc 1 sub get aload pop exec
 /nToStrip 2 def
 } if
 } ifelse
 aload pop exec
 /segmentArray flattenpath MakeFlatPathArray def
 /segmentArray nToStrip segmentArray StripFromFront def
 segmentArray length fpc add 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 segmentArray length 512 lt {
 flatPathArray fpc segmentArray putinterval
 segmentArray length IncFPC
 } {
 segmentArray length
 /exitLoop false def
 0 
 {
 2 copy sub
 dup 500 gt {
 pop 500
 } { 
 /exitLoop true def
 } ifelse 
 segmentArray 2 index 2 index getinterval
 flatPathArray fpc 3 -1 roll putinterval
 dup IncFPC
 add 
 exitLoop {
 exit 
 } {
 DrawFlatPathArray
 fpc 1 gt {
 flatPathArray flatPathArray fpc 2 sub get 0 exch put
 flatPathArray flatPathArray fpc 1 sub get 1 exch put
 /fpc 2 def
 }{
 /fpc 0 def
 } ifelse
 } ifelse
 } loop
 } ifelse
 } ifelse
 } if
 } ifelse
 } for
 fpc 0 gt {
 usingClosepath {
 AppendClosePath
 } if
 DrawFlatPathArray
 } if
 saveFlat setflat
} bind def


/rampdelta {
/len 0 3 -1 roll add def
/i2 0 3 -1 roll add def
/i1 0 3 -1 roll add def
/nRampSteps len cellPenW div cvi 1 add dup 512 gt {pop 512} if def
/rampPenW len nRampSteps div def
rampColors i1 get aload pop c1 astore pop
rampColors i2 get aload pop c2 astore pop
c2 0 get c1 0 get sub nRampSteps div d 0 3 -1 roll put
c2 1 get c1 1 get sub nRampSteps div d 1 3 -1 roll put
c2 2 get c1 2 get sub nRampSteps div d 2 3 -1 roll put
d aload pop
} bind def
/adddelta {
d astore pop
 mycurrentrgbcolor c1 copy pop
c1 0 get d 0 get add c2 0 3 -1 roll put
c1 1 get d 1 get add c2 1 3 -1 roll put
c1 2 get d 2 get add c2 2 3 -1 roll put
c2 aload pop setrgbcolor
c2 mycurrentrgbcolor copy pop
} bind def
/rampline {
segbox ulx get rampPenW add segbox ulx 3 -1 roll put
segbox llx get rampPenW add segbox llx 3 -1 roll put
segbox ulx get segbox uly get moveto
segbox llx get segbox lly get lineto
delta aload pop adddelta stroke
}bind def
/slantrampseg {
gsave newpath
segbox ulx get segbox urx get sub abs
rampdelta delta astore pop
segbox ulx get rampPenW .5 mul sub segbox ulx 3 -1 roll put
segbox llx get rampPenW .5 mul sub segbox llx 3 -1 roll put
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
rampPenW setlinewidth nRampSteps {rampline} repeat
grestore
}bind def
/flipramp {
rampColors 0 get rampColors 3 get rampColors 0 3 -1 roll put rampColors 3 3 -1 roll put
rampColors 1 get rampColors 2 get rampColors 1 3 -1 roll put rampColors 2 3 -1 roll put
} bind def
/leftrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
} bind def
/rightrbox {
rbox segbox copy pop	
rbox urx get rbox ulx get sub
flipRatio mul dup 
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
} bind def
/drawslantramp {
segbox urx get segbox ulx get sub 3 div dup dup dup dup dup dup dup dup dup
segbox ulx get add segbox urx 3 -1 roll put
segbox llx get add segbox lrx 3 -1 roll put
segbox aload pop
0 0 1 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
segbox aload pop
1 1 2 slantrampseg
segbox astore pop
segbox ulx get add segbox ulx 3 -1 roll put
segbox llx get add segbox llx 3 -1 roll put
segbox urx get add segbox urx 3 -1 roll put
segbox lrx get add segbox lrx 3 -1 roll put
2 2 3 slantrampseg
}bind def
/tan {
dup sin exch cos div
}bind def
/rampbox {
pbox top get dup rbox uly 3 -1 roll put rbox ury 3 -1 roll put
pbox left get dup rbox ulx 3 -1 roll put rbox llx 3 -1 roll put
pbox bottom get dup rbox lly 3 -1 roll put rbox lry 3 -1 roll put
pbox right get dup rbox urx 3 -1 roll put rbox lrx 3 -1 roll put
}bind def
/LoadSegBox {
4 copy
segbox llx 6 -1 roll put
segbox lly 5 -1 roll put
segbox lrx 4 -1 roll put
segbox lry 6 -1 roll put
segbox urx 5 -1 roll put
segbox ury 3 -1 roll put
segbox ulx 4 -1 roll put
segbox uly 3 -1 roll put
} bind def
/TransToCenter {
gsave
flattenpath
pathbbox
grestore
2 index
sub 2.0 div exch
3 index sub 2.0 div
4 -1 roll add
3 1 roll add
translate
} bind def
/RotRampGrad {
gsave
TransToCenter
-1.0 mul 180.0 add rotate
flattenpath
pathbbox 
clip
newpath
LoadSegBox
flipRatio 1 lt dup{flipramp}if flipRatio 0 gt and
{
/flipRatio 1.0 flipRatio sub def
segbox rbox copy pop leftrbox drawslantramp flipramp rightrbox drawslantramp
}
{drawslantramp} ifelse
grestore
} bind def
/bbg {
pbox exch get
} bind def
/DR {		% Directional ramp
/workingMatrix mstore def
objectCord setmatrix
flipramp
gsave
flattenpath pathbbox
grestore
pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
rampAngle RotRampGrad
RF
workingMatrix setmatrix
}bind def
/ramparc {
gsave
circum rampdelta delta astore pop
/rampPenW 60.0 nRampSteps div def
/ang1 exch rampAngle sub def 
/ang2 rampPenW ang1 add def 
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor 1 setlinewidth
nRampSteps {ramparcseg}repeat
grestore
}bind def
/ramparcseg {
newpath
rampcenter aload pop moveto
rampcenter aload pop rampradius ang2 ang1 arcn fill
/ang1 ang2 def 
/ang2 ang2 rampPenW add def
delta aload pop adddelta
}bind def
/GetRadius {
rbox urx get rbox llx get sub 2 div rampcenter 0 get abs add dup mul
rbox lly get rbox ury get sub 2 div rampcenter 1 get abs add dup mul
add sqrt
} bind def
/circularRamp {
rampbox
/rampradius GetRadius def
CalcCrcm
flipramp
0 0 0 1 ramparc
1 60 1 2 ramparc
2 120 2 3 ramparc
flipramp
0 180 0 1 ramparc
1 240 1 2 ramparc
2 300 2 3 ramparc
}bind def
/GetCircumf {
2.0 mul 3.1415926 mul
} bind def
/CalcCrcm {
rampradius GetCircumf
/circum exch 6.0 div def
} bind def
/CR {
gsave
clip
MTC currentmatrix pop
CTM setmatrix
flattenpath
pathbbox pbox bottom 3 -1 roll put pbox right 3 -1 roll put pbox top 3 -1 roll put pbox left 3 -1 roll put
pbox left get pbox right get sub abs 2 div 
pbox left get add rampcenter 0 get add rampcenter 0 3 -1 roll put
pbox top get pbox bottom get sub abs 2 div
pbox top get add rampcenter 1 get add rampcenter 1 3 -1 roll put
circularRamp
MTC setmatrix
grestore
RF
}bind def
/SBR {
gsave
clip
/workingMatrix mstore def
objectCord setmatrix
flattenpath
/BaseBox pathbbox 4 array astore def
/len BaseBox 2 get BaseBox 0 get sub dup mul
BaseBox 3 get BaseBox 1 get sub dup mul
add sqrt
12.0 div
def
/EndBox
BaseBox aload pop
3 -1 roll sub
3 1 roll
exch sub
/dbx exch def
/dby exch def
BaseBox aload pop pop pop
/blly exch def
/bllx exch def
sbox 0 get 100.0 div dby mul blly add
sbox 1 get 100.0 div dbx mul bllx add
sbox 2 get 100.0 div dby mul blly add
sbox 3 get 100.0 div dbx mul bllx add
exch
4 -2 roll
exch
4 -2 roll
4 array astore
def
BaseBox EndBox ShapeBurst
workingMatrix setmatrix
grestore
} bind def
/GetBoxCenter {
2 index
sub 2.0 div
3 -1 roll add
3 1 roll
1 index sub
2.0 div add
exch
} bind def
/GetInterBox {
/boxInter exch def
4 1 7 {
-1 roll
7 index
} for
sub boxInter mul
8 -1 roll add
7 1 roll
sub boxInter mul
7 -1 roll add
6 1 roll
sub boxInter mul
6 -1 roll add
5 1 roll
sub boxInter mul
5 -1 roll add
4 1 roll
} bind def
/GetBoxCenterDeltas {
GetBoxCenter
6 2 roll
GetBoxCenter
3 -1 roll exch sub
3 1 roll sub
exch
} bind def
/GetBoxCornerDeltas {
pop pop
4 2 roll pop pop
3 -1 roll sub
3 1 roll exch sub
exch
} bind def
/getpath {
/k 0 def
{/k k 1 add def pop pop}{/k k 1 add def pop pop}{/k k 1 add def pop pop pop pop pop pop}{}pathforall
/pfa k array def
/k 0 def
{{moveto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{lineto} 3 array astore pfa k 3 -1 roll put /k k 1 add def}
{{curveto} 7 array astore pfa k 3 -1 roll put /k k 1 add def}
{}pathforall
}bind def
/ShapeBurst {
getpath
newpath
/SBERect exch 4 array copy def
/SBBRect exch 4 array copy def
/interRect1 SBBRect aload pop SBERect aload pop .3333333 GetInterBox 4 array astore def
/interRect2 SBBRect aload pop SBERect aload pop .6666666 GetInterBox 4 array astore def
0 0 1 SBBRect interRect1 ShapeBurstSeg
msave
interRect1 0 get interRect1 1 get translate
SBBRect aload pop interRect1 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
1 1 2 interRect1 interRect2 ShapeBurstSeg
mrestore
msave
interRect2 0 get interRect2 1 get translate
SBBRect aload pop interRect2 aload pop GetBoxesRatio scale
SBBRect 0 get -1.0 mul SBBRect 1 get -1.0 mul translate
2 2 3 interRect2 SBERect ShapeBurstSeg
mrestore
} bind def
/ShapeBurstSeg {
/sbr1 exch 4 array copy def
/sbr0 exch 4 array copy def
/blx sbr0 0 get def
/bly sbr0 1 get def
len rampdelta delta astore pop
sbr0 aload pop sbr1 aload pop GetBoxesRatio
/ratioY exch def
/ratioX exch def
sbr0 aload pop sbr1 aload pop GetBoxCornerDeltas
/dlly exch nRampSteps div def
/dllx exch nRampSteps div def
/scaleStepX 1.0 ratioX sub nRampSteps div def
/scaleStepY 1.0 ratioY sub nRampSteps div def
/currentScaleX 1.0 scaleStepX sub def
/currentScaleY 1.0 scaleStepY sub def
/translationX blx dllx add def
/translationY bly dlly add def
/currentScaleX 1.0  def
/currentScaleY 1.0  def
/translationX blx def
/translationY bly def
rampColors exch get aload mycurrentrgbcolor copy pop setrgbcolor
nRampSteps {
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
delta aload pop adddelta
/translationX translationX dllx add def
/translationY translationY dlly add def
/currentScaleX currentScaleX scaleStepX sub def
/currentScaleY currentScaleY scaleStepY sub def
mrestore
} repeat
msave
translationX translationY translate
currentScaleX currentScaleY scale
blx -1.0 mul bly -1.0 mul translate
pfa {aload pop exec} forall fill
mrestore
} bind def
initmsaverestore
/tctm matrix currentmatrix def
tctm RoundMatrix setmatrix
/patternMatrix mstore def
10 setmiterlimit
2 setlinecap
newpath
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 42.500 136.000 0.000 0.000 39.500 97.000 rect
%@EndOval
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.000 20.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%
%tfBegGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.000 54.000 0.000 0.000 13.000 38.000 rect
%@EndRect
%@BeginText
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 39.500 57.500 0.000 0.000 10.000 31.000 rect
%@EndRect
gsave
73.000 44.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(p) -15.000 3.000 S
(r) -9.996 3.000 S
(o) -7.001 3.000 S
(d) -1.998 3.000 S
(u) 3.004 3.000 S
(c) 8.007 3.000 S
(t) 12.507 3.000 S
grestore
%@EndText
%
%tfEndGrp
%
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 52.000 12.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 69.000 26.000 0.000 0.000 11.000 44.000 rect
%@EndRect
gsave
48.000 74.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(P) -21.500 4.000 S
(r) -14.830 4.000 S
(o) -10.940 4.000 S
(d) -4.832 4.000 S
(u) 1.275 4.000 S
(c) 7.384 4.000 S
(t) 12.943 4.000 S
(s) 16.270 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.760 0.760 0.760 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.000 277.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 39.000 302.625 0.000 0.000 13.000 46.074 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 40.500 306.828 0.000 0.000 10.000 37.671 rect
%@EndRect
gsave
325.664 45.500 T translate
0.0 rotate
1 1 scale
9.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(c) -18.671 3.000 S
(o) -14.171 3.000 S
(m) -9.168 3.000 S
(p) -1.673 3.000 S
(a) 3.329 3.000 S
(n) 8.332 3.000 S
(y) 13.335 3.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 52.000 269.000 0.000 0.000 45.000 72.000 rect
%@EndRect
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica-Bold /Helvetica-Bold EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 69.000 278.000 0.000 0.000 11.000 54.000 rect
%@EndRect
gsave
305.000 74.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica-Bold) plain F
0.000 0.000 0.000 setrgbcolor 
(C) -26.500 4.000 S
(o) -19.280 4.000 S
(m) -13.172 4.000 S
(p) -4.283 4.000 S
(a) 1.825 4.000 S
(n) 7.384 4.000 S
(i) 13.492 4.000 S
(e) 16.270 4.000 S
(s) 21.830 4.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {1.000 1.000 1.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 49.500 131.000 0.000 0.000 39.500 97.000 rect
%@EndOval
%@BeginText
restore
save
[ 39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron]
StandardEncoding Re-encode /_Helvetica /Helvetica EncodeFont

%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 56.250 142.500 0.000 0.000 26.000 74.000 rect
%@EndRect
gsave
179.500 69.250 T translate
0.0 rotate
1 1 scale
12.000 (_Helvetica) plain F
0.000 0.000 0.000 setrgbcolor 
(m) -36.675 -2.000 S
(a) -26.682 -2.000 S
(n) -20.011 -2.000 S
(u) -13.340 -2.000 S
(f) -6.669 -2.000 S
(a) -3.335 -2.000 S
(c) 3.335 -2.000 S
(t) 9.335 -2.000 S
(u) 12.669 -2.000 S
(r) 19.340 -2.000 S
(e) 23.333 -2.000 S
(d) 30.004 -2.000 S
0.000 0.000 0.000 setrgbcolor 
(b) -6.335 11.000 S
(y) 0.335 11.000 S
grestore
%@EndText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ } def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 131.000 68.000 94.000 68.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginLine
/ArrowType{ 
1.000 setlinewidth
269.000 69.000 moveto
/Triangular 12.924 9.399 false 180.012 DrawArrowHead
} bind def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
/SS {setlinewidth SD stroke} def
1.000 267.625 69.000 229.000 69.000 Line
%@EndLine
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginOval
/RT {E} def
/SD {} def
/SS {setlinewidth SD stroke} def
/LC {0.000 0.000 0.000 setrgbcolor } def
/PC {0.000 0.000 0.000 setrgbcolor } def
/PF {gsave fill grestore} def
1.000 0 64.500 92.500 0.000 0.000 6.000 7.000 rect
%@EndOval
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 53.000 102.000 0.000 0.000 11.000 14.000 rect
%@EndRect
gsave
109.000 58.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(1) -6.500 4.000 S
(:) -0.940 4.000 S
(1) 1.837 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 53.000 237.000 0.000 0.000 11.000 13.000 rect
%@EndRect
gsave
243.500 58.500 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(0) -6.500 4.000 S
(:) -0.940 4.000 S
(*) 1.837 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 15.000 16.000 0.000 0.000 12.000 79.000 rect
%@EndRect
gsave
55.500 21.000 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(S) -39.500 4.000 S
(o) -32.830 4.000 S
(u) -27.270 4.000 S
(r) -21.711 4.000 S
(c) -18.384 4.000 S
(e) -13.384 4.000 S
( ) -7.825 4.000 S
(C) -5.046 4.000 S
(o) 2.172 4.000 S
(l) 7.731 4.000 S
(l) 9.950 4.000 S
(e) 12.169 4.000 S
(c) 17.729 4.000 S
(t) 22.729 4.000 S
(i) 25.507 4.000 S
(o) 27.726 4.000 S
(n) 33.285 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 15.000 276.000 0.000 0.000 12.000 76.000 rect
%@EndRect
gsave
314.000 21.000 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(T) -37.500 4.000 S
(a) -31.391 4.000 S
(r) -25.832 4.000 S
(g) -22.504 4.000 S
(e) -16.945 4.000 S
(t) -11.386 4.000 S
( ) -8.608 4.000 S
(C) -5.830 4.000 S
(o) 1.389 4.000 S
(l) 6.948 4.000 S
(l) 9.167 4.000 S
(e) 11.386 4.000 S
(c) 16.945 4.000 S
(t) 21.945 4.000 S
(i) 24.724 4.000 S
(o) 26.943 4.000 S
(n) 32.502 4.000 S
grestore
%@EndText
%@BeginText
%@BeginRuler
%@  9.0000000000000000000e+0 viewScale
%@  1.1111111111111110490e-1 realScale
%@ 8 realDivs
%@ 0000 rulerFormat
%@EndRuler
%@BeginRect
/RT {SR} def
/LC {} def
/SS {pop} def
/PF {} def
/PC {} def
1 0 104.000 111.000 0.000 0.000 24.000 128.000 rect
%@EndRect
gsave
175.000 116.000 T translate
0.0 rotate
1 1 scale
10.000 (_Helvetica) fess
0.000 0.000 0.000 setrgbcolor 
(-) -63.500 -2.000 S
( ) -60.172 -2.000 S
(D) -57.394 -2.000 S
(i) -50.174 -2.000 S
(r) -47.955 -2.000 S
(e) -44.627 -2.000 S
(c) -39.068 -2.000 S
(t) -34.068 -2.000 S
(i) -31.290 -2.000 S
(o) -29.071 -2.000 S
(n) -23.512 -2.000 S
( ) -17.953 -2.000 S
(o) -15.174 -2.000 S
(f) -9.615 -2.000 S
( ) -6.837 -2.000 S
(R) -4.059 -2.000 S
(e) 3.160 -2.000 S
(l) 8.719 -2.000 S
(a) 10.938 -2.000 S
(t) 16.497 -2.000 S
(i) 19.275 -2.000 S
(o) 21.495 -2.000 S
(n) 27.054 -2.000 S
(s) 32.613 -2.000 S
(h) 37.613 -2.000 S
(i) 43.172 -2.000 S
(p) 45.391 -2.000 S
(s) 50.950 -2.000 S
0.000 0.000 0.000 setrgbcolor 
(-) -63.500 9.000 S
( ) -60.172 9.000 S
(C) -57.394 9.000 S
(a) -50.174 9.000 S
(r) -44.615 9.000 S
(d) -41.288 9.000 S
(i) -35.729 9.000 S
(n) -33.509 9.000 S
(a) -27.950 9.000 S
(l) -22.391 9.000 S
(i) -20.172 9.000 S
(t) -17.953 9.000 S
(y) -15.174 9.000 S
( ) -10.174 9.000 S
(o) -7.396 9.000 S
(f) -1.837 9.000 S
( ) 0.940 9.000 S
(R) 3.719 9.000 S
(e) 10.938 9.000 S
(l) 16.497 9.000 S
(a) 18.716 9.000 S
(t) 24.275 9.000 S
(i) 27.054 9.000 S
(o) 29.273 9.000 S
(n) 34.832 9.000 S
(s) 40.391 9.000 S
(h) 45.391 9.000 S
(i) 50.950 9.000 S
(p) 53.169 9.000 S
(s) 58.729 9.000 S
grestore
%@EndText
restore
end
%%EndDocument
 @endspecial 1686 239 a
 currentpoint grestore moveto
 1686 239 a 1118 239 a
 currentpoint currentpoint translate 1 1.27022 div 1 1.27022 div scale
neg exch neg exch translate
 1118 239
a 1258 331 a Ff(Figure)12 b(3.)f(Associations)987 485
y Fi(found)e(in)h([6)o(,)h(5,)g(4)o(].)987 585 y Fg(3.2.)40
b(Pro)q(duct)i(classi\014cati)q(on)i(and)e(pro)q(duct)1107
635 y(structure)1037 736 y Fi(The)16 b(part)e(of)h(the)g(product)f
(data)i(model)f(sho)o(wn)f(in)h(\002gure)g(4,)987 786
y(addresses)9 b(the)f(modelling)f(and)h(classi\002cation)g(of)g(comple)
o(x)h(struc-)987 836 y(tured)h(products)f(as)i(well)f(as)h(of)f
(product)f(v)o(ariants.)1067 1251 y
 currentpoint currentpoint translate 1.06686 1.06686 scale neg exch
neg exch translate
 1067 1251 a 1067
1251 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 1067 1251 a @beginspecial 0 @llx 0 @lly 464 @urx
217 @ury 1855 @rwi @setspecial
%%BeginDocument: figs/productStructure.eps
%ALDOriginalFile:working:working:Wetice97 (Paper):Drawings:Product Data Model
%ALDBoundingBox: -23 -594 572 248
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
AltsysDict begin
_bfh 
MacVec 256 array copy
/f0 /|______Helvetica dup RF findfont def
_efh 
end %. AltsysDict
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop setcmykcolor}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {1692 1570.11 2287.28 2412 } def 
/bleed 0 def 
/clpr {1692 1570.11 2287.28 2412 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1715 -2164 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/makepattern defed /xt xdf
xt not {/yt save def} if
 
 /PATmp{
exch 
dup length 3 add dict copy 
begin
currentdict /Multi known not {/Multi 1 def} if
Multi 1 ne {
/UserProc /PaintProc load def
/PaintProc {
begin
0 1 Multi 1 sub {
PaintColors 1 index get PATsc
PaintData exch get
gsave currentdict UserProc grestore
}for 
end
} bdf
} if
currentdict
end
exch makepattern
 }bdf
 
 
 /PATsp{
dup /PaintType get 2 eq
{
exch aload length 4 eq
{5 -1 roll}
{spots exch get 0 4 getinterval aload pop
4 {4 index mul 4 1 roll} repeat 6 -2 roll pop}ifelse 
[/Pattern /DeviceCMYK] setcolorspace
}if
setpattern
 }bdf
 /PATfill{{{eofill}fp}{{fill}fp}ifelse}bdf
 /PATprestroke{}bdf
 /PATstroke{stroke}bdf
xt not {yt restore} if
xt {/yt save def} if
 
 /PATtcalc{
gsave
exch concat 
matrix currentmatrix exch 
2 ne {
dup 4 get exch dup 5 get exch
XStep 0 dtransform round exch round exch
XStep div exch XStep div exch
0 YStep dtransform round exch round exch
YStep div exch YStep div exch
7 -3 roll astore
} if
grestore
 }bdf
 
 /PATmp{
exch 
dup 
length 8 add 
dict copy 
begin 
TilingType PATtcalc 
/PATcurrentMtx xdf 
currentdict /Multi known not {/Multi 1 def} if
/FontType 3 def
/Encoding 256 array def
3 string 0 1 255 
{Encoding exch dup 3 index cvs cvn put} for pop
/FontMatrix matrix def
/FontBBox BBox def
/BuildChar {
mark 3 1 roll
exch begin
Multi 1 ne {PaintData exch get}{pop}ifelse
PaintType 2 eq Multi 1 ne or
{XStep 0 FontBBox aload pop setcachedevice}
{XStep 0 setcharwidth}ifelse
currentdict 
/PaintProc load 
end
gsave exec grestore
cleartomark
}bdf
currentdict 
end
/foo exch
definefont
 }bdf
 
 
 /PATsp{
/PATcurrent xdf
PATcurrent /PaintType get 2 eq
{/PATcolor xdf}if
 }bdf
 
 /PATpcalc{
PATcurrent begin
gsave
PATcurrentMtx setmatrix
BBox aload pop pop pop translate
pathbbox
grestore
YStep div ceiling 4 1 roll
XStep div ceiling 4 1 roll
YStep div floor 4 1 roll
XStep div floor 4 1 roll
2 index sub cvi abs
exch 3 index sub cvi abs exch
4 2 roll
YStep mul exch XStep mul exch
end
 }bdf
 
 
 /PATfill{
{{eoclip}fp}{{clip}fp}ifelse
PATpcalc 
newpath
PATcurrent dup begin
setfont
PATcurrentMtx setmatrix
PaintType 2 eq {PATcolor vc} if
3 index string 
0 1 Multi 1 sub { 
3 index 3 index moveto
Multi 1 ne {dup PaintColors exch get vc} if
0 1 7 index 1 sub { 
2 index 
exch 
2 index put
} for
pop 
3 index 
{
currentpoint 
2 index show
YStep add moveto
}repeat
}for
5 {pop} repeat 
end
 }bdf
 /PATprestroke{{strokepath}fp}bdf
 /PATstroke{false PATfill}bdf
xt {yt restore} if
/makepattern defed /xt xdf
xt not {/yt save def} if
userdict begin /fhpatdict 12 dict def end
fhpatdict begin
 /PatternType 1 def
 /PaintType 1 def 
 /TilingType 1 def
 /BBox [0 0 8 8] def
 /XStep 8 def
 /YStep 8 def
 /PatMtx [1 0 0 -1 0 8] def
 /PatIMtx [1 0 0 1 0 0] def
/PaintProc
{begin FHPatColor vc 8 8 true PatMtx PatData imagemask end} bdf
 /FHPatColor [0 0 0 0] def
 
 
end
/macpatorient{1 0 dtransform 0 eq exch 0 ne and}bdf
/veccalc { dtransform round exch round exch idtransform dup mul exch dup mul exch add sqrt } bdf
gsave 
0 0 transform 
2 copy 
round exch round exch
2 index sub exch 3 index sub exch
idtransform translate
pop pop
1 0 veccalc 0 1 veccalc 
scale
matrix currentmatrix
/PATmtx xdf
grestore
/pF{
 gsave 1 setgray filler grestore
 fhpatdict begin  
 /PatData xdf  
 /FHPatColor xdf  
 end
 save    
 PATmtx setmatrix 
 fhpatdict dup   
 /PatIMtx get   
 PATmp     
 PATsp     
 /clipper load /eoclip load eq PATfill
 restore
}bdf
/pS{
 fhpatdict begin  
 /PatData xdf  
 /FHPatColor xdf  
 end
 save
 PATprestroke    
 PATmtx setmatrix
 gsave 1 setgray stroke grestore
 fhpatdict dup 
 /PatIMtx get 
 PATmp 
 PATsp 
 PATstroke
 restore
}bdf
xt not {yt restore} if
xt {/yt save def} if
/macpatstring 8 string def
/macpattint 0 def
/macpatcol [] def
/macpatangle{1 0 matrix defaultmatrix dtransform exch atan}bdf
/macpatorient{1 0 dtransform 0 eq exch 0 ne and}bdf
/macpatcountbits 
{
 0 exch     
 {
cvi 
0 1 8 
{ 
pop
dup 1 and 
0 ne 
{
exch 
1 add 
exch 
} if
-1 bitshift 
} for
pop 
 }
 forall
}bdf
/macpatset
{
 macpatstring copy pop 
 9.375 
 macpatangle 
 macpatorient not{-90 add}if
 {
1 add 4 mul cvi macpatstring exch get exch
1 add 4 mul cvi 7 sub bitshift 1 and 
inverted? {1 exch sub} if
 }
 setscreen
 
 64 macpatstring macpatcountbits sub 64 div
 inverted? {.9921875 exch sub} if
 /macpattint xdf
 
 
 {} st
 fhnumcolors 1 ne
 {
cvc dup length array copy /macpatcol xdf 
/macpattint 1 macpattint sub def 
macpatcol length 4 eq
{
0 1 3
{
macpatcol exch 2 copy
get .25 lt{0}{macpattint}ifelse put
}for
}
{
macpatcol dup 0 get .25 lt{0}{macpattint}ifelse 0 exch put
}ifelse 
macpatcol vc
 }
 {
currentgray 1 ne {macpattint setseparationgray} if
 } 
 ifelse
}bdf
/pF{
 gsave 
 exch vc
 macpatset 
 {filler}fp 
 grestore
}bdf
/pS{
 gsave 
 exch vc
 macpatset 
 {stroke}fp 
 grestore
}bdf
xt {yt restore} if
/pf{closepath pF}bdf
/ps{closepath pS}bdf
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
 dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
 setlinewidth vc newpath 
 /ts{{false charpath stroke}ta}def exec 
 xt setlinewidth}bdf 
 
/strk{/textopf currentoverprint def vc setoverprint
 /ts{{false charpath stroke}ta}def exec 
 textopf setoverprint
 }bdf 
vms
0 i
2051.6052 2348.5225 m
2051.6052 2358.3807 2079.9825 2366.3721 2114.9886 2366.3721 C
2149.9948 2366.3721 2178.3721 2358.3807 2178.3721 2348.5225 C
2178.3721 2338.6643 2149.9948 2330.6728 2114.9886 2330.6728 C
2079.9825 2330.6728 2051.6052 2338.6643 2051.6052 2348.5225 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1730.2331 2291.6503 m
1730.2331 2301.5085 1758.6104 2309.5 1793.6165 2309.5 C
1828.6227 2309.5 1857 2301.5085 1857 2291.6503 C
1857 2281.7921 1828.6227 2273.8007 1793.6165 2273.8007 C
1758.6104 2273.8007 1730.2331 2281.7921 1730.2331 2291.6503 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1881.4701 2279.59 m
1881.4701 2289.4483 1909.8474 2297.4397 1944.8535 2297.4397 C
1979.8596 2297.4397 2008.237 2289.4483 2008.237 2279.59 C
2008.237 2269.7318 1979.8596 2261.7404 1944.8535 2261.7404 C
1909.8474 2261.7404 1881.4701 2269.7318 1881.4701 2279.59 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
2045.0038 2211.2894 m
2045.0038 2221.1476 2073.3811 2229.139 2108.3873 2229.139 C
2143.3934 2229.139 2171.7707 2221.1476 2171.7707 2211.2894 C
2171.7707 2201.4312 2143.3934 2193.4397 2108.3873 2193.4397 C
2073.3811 2193.4397 2045.0038 2201.4312 2045.0038 2211.2894 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1900.8535 2367.9324 m
1988.8535 2367.9324 L
1988.8535 2326.098 L
1900.8535 2326.098 L
1900.8535 2367.9324 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1900.8535 2231.6053 m
1988.8535 2231.6053 L
1988.8535 2189.7708 L
1900.8535 2189.7708 L
1900.8535 2231.6053 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1922 2368 m
1989 2368 L
1989 2355 L
1922 2355 L
1922 2368 L
[0 0 0 0]  vc
false setoverprint
f 
1.0001 w
0 J
0 j
3.863693 M
[0 0 0 1]  vc
S 
n
1988.5705 2366.4999 m
1933.5177 2366.4999 L
1933.5177 2356.5001 L
1988.5705 2356.5001 L
1988.5705 2366.4999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1933.517731 2359.300049 m
0 0 32 0 0 (productGroup) ts
}
true
[0 0 0 1]sts
Q
1922 2231.5 m
1989 2231.5 L
1989 2218.5 L
1922 2218.5 L
1922 2231.5 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1986.524 2229.9999 m
1956.4761 2229.9999 L
1956.4761 2220.0001 L
1986.524 2220.0001 L
1986.524 2229.9999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1956.476059 2222.800049 m
0 0 32 0 0 (product) ts
}
true
[0 0 0 1]sts
Q
1886.8535 2356.9324 m
1974.8535 2356.9324 L
1974.8535 2315.098 L
1886.8535 2315.098 L
1886.8535 2356.9324 L
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
1951.5512 2348.5151 m
1910.1558 2348.5151 L
1910.1558 2323.5153 L
1951.5512 2323.5153 L
1951.5512 2348.5151 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1910.155777 2338.915268 m
0 0 32 0 0 (Product) ts
}
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
1910.155777 2326.915268 m
0 0 32 0 0 (Groups) ts
}
true
[0 0 0 1]sts
Q
1886.8535 2220.6053 m
1974.8535 2220.6053 L
1974.8535 2178.7708 L
1886.8535 2178.7708 L
1886.8535 2220.6053 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1954.5512 2206.1879 m
1907.1558 2206.1879 L
1907.1558 2193.1881 L
1954.5512 2193.1881 L
1954.5512 2206.1879 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1907.155777 2196.588089 m
0 0 32 0 0 (Products) ts
}
true
[0 0 0 1]sts
Q
1716.2331 2280.6503 m
1716.2331 2290.5085 1744.6104 2298.5 1779.6165 2298.5 C
1814.6227 2298.5 1843 2290.5085 1843 2280.6503 C
1843 2270.7921 1814.6227 2262.8007 1779.6165 2262.8007 C
1744.6104 2262.8007 1716.2331 2270.7921 1716.2331 2280.6503 C
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1826.3358 2287.1503 m
1730.2313 2287.1503 L
1730.2313 2274.1504 L
1826.3358 2274.1504 L
1826.3358 2287.1503 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1730.231323 2277.5504 m
0 0 32 0 0 (are_composed_of) ts
}
true
[0 0 0 1]sts
Q
1879 2344.5 m
1865.6327 2344.0244 1858.0308 2343.0182 1845 2340 C
1827.5677 2335.9623 1812.4995 2332.004 1802 2324 C
1790.899 2315.5375 1785.149 2311.0734 1777.2331 2300.3007 C
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1878.5836 2344.4855 m
1878.4963 2346.9841 L
1884.83 2344.7036 L
1878.6708 2341.9868 L
1878.5836 2344.4855 L
f 
n
1775 2263 m
1780.635 2245.3254 1786.4446 2232.82 1801.5 2223.5 C
1812 2217 1851.4685 2197.8817 1882 2207.5 C
S 
n
1881.6015 2207.3782 m
1881.1978 2208.6987 1881.9408 2210.0963 1883.2614 2210.5 C
1884.5819 2210.9037 1885.9795 2210.1606 1886.3832 2208.8401 C
1886.787 2207.5196 1886.0439 2206.122 1884.7233 2205.7182 C
1883.4027 2205.3145 1882.0052 2206.0577 1881.6015 2207.3782 C
f 
n
1877.7003 2218.7909 m
1865.4289 2218.7909 L
1865.4289 2207.791 L
1877.7003 2207.791 L
1877.7003 2218.7909 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1865.451492 2210.791046 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1874.4503 2340.041 m
1862.1789 2340.041 L
1862.1789 2329.0411 L
1874.4503 2329.0411 L
1874.4503 2340.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1862.201477 2332.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1930.7498 2287.0368 m
1930.7498 2308.9623 L
0.99 w
[0 0 0 1]  vc
false setoverprint
S 
n
1930.7498 2308.5482 m
1928.2648 2308.5482 L
1930.7498 2314.7605 L
1933.2348 2308.5482 L
1930.7498 2308.5482 L
f 
n
1930.7498 2224.5 m
1930.7498 2250 L
1.0001 w
S 
n
1930.7498 2224.9167 m
1932.1306 2224.9167 1933.2499 2223.7975 1933.2499 2222.4166 C
1933.2499 2221.0357 1932.1306 2219.9164 1930.7498 2219.9164 C
1929.3689 2219.9164 1928.2496 2221.0357 1928.2496 2222.4166 C
1928.2496 2223.7975 1929.3689 2224.9167 1930.7498 2224.9167 C
f 
n
vmrs
0 i
1946.9503 2241.541 m
1934.6789 2241.541 L
1934.6789 2230.5411 L
1946.9503 2230.5411 L
1946.9503 2241.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1934.701477 2233.541107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1946.9503 2314.041 m
1934.6789 2314.041 L
1934.6789 2303.0411 L
1946.9503 2303.0411 L
1946.9503 2314.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1934.701477 2306.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1867.4701 2268.59 m
1867.4701 2278.4483 1895.8474 2286.4397 1930.8535 2286.4397 C
1965.8596 2286.4397 1994.237 2278.4483 1994.237 2268.59 C
1994.237 2258.7318 1965.8596 2250.7404 1930.8535 2250.7404 C
1895.8474 2250.7404 1867.4701 2258.7318 1867.4701 2268.59 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
S 
n
1973.228 2275.09 m
1888.479 2275.09 L
1888.479 2262.0901 L
1973.228 2262.0901 L
1973.228 2275.09 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1888.479019 2265.490112 m
0 0 32 0 0 (are_member_of) ts
}
true
[0 0 0 1]sts
Q
1978 2191 m
1997.3287 2172.5997 2014.8112 2165.5786 2041.4976 2165.4992 C
2063.1472 2165.4348 2076.7135 2169.6586 2094.5 2182 C
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1978.2997 2190.7106 m
1977.3405 2189.7172 1975.7579 2189.6895 1974.7645 2190.6488 C
1973.7712 2191.608 1973.7436 2193.1907 1974.7028 2194.184 C
1975.662 2195.1773 1977.2447 2195.205 1978.238 2194.2457 C
1979.2314 2193.2865 1979.2589 2191.7039 1978.2997 2190.7106 C
f 
n
2098 2218 m
2077.3448 2238.8637 2054.7947 2245.7527 2026.0063 2239.9937 C
2004.8864 2235.7688 1992.2536 2227.9764 1979 2211 C
S 
n
1979.2565 2211.3283 m
1981.2267 2209.7891 L
1975.4084 2206.403 L
1977.2864 2212.8676 L
1979.2565 2211.3283 L
f 
n
2004.4503 2192.041 m
1992.1789 2192.041 L
1992.1789 2181.0411 L
2004.4503 2181.0411 L
2004.4503 2192.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1992.201477 2184.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
2007.9503 2225.541 m
1995.6789 2225.541 L
1995.6789 2214.5411 L
2007.9503 2214.5411 L
2007.9503 2225.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1995.701477 2217.541107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
false eomode
2031.0038 2200.2894 m
2031.0038 2210.1476 2059.3811 2218.139 2094.3873 2218.139 C
2129.3934 2218.139 2157.7707 2210.1476 2157.7707 2200.2894 C
2157.7707 2190.4312 2129.3934 2182.4397 2094.3873 2182.4397 C
2059.3811 2182.4397 2031.0038 2190.4312 2031.0038 2200.2894 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
2141.1065 2206.7893 m
2045.0021 2206.7893 L
2045.0021 2193.7894 L
2141.1065 2193.7894 L
2141.1065 2206.7893 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2045.00206 2197.189438 m
0 0 32 0 0 (are_composed_of) ts
}
true
[0 0 0 1]sts
Q
1979 2329 m
2000.521 2304.769 2024.2657 2295.5757 2056.4929 2298.9968 C
2076.9152 2301.1648 2089.214 2306.3633 2105 2319.5 C
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1979.2788 2328.6904 m
1978.2526 2327.7664 1976.672 2327.8491 1975.7479 2328.8753 C
1974.8239 2329.9016 1974.9068 2331.4823 1975.933 2332.4063 C
1976.9592 2333.3302 1978.5399 2333.2474 1979.4639 2332.2212 C
1980.3879 2331.195 1980.305 2329.6143 1979.2788 2328.6904 C
f 
n
2106.5 2356.5 m
2084.237 2376.6892 2062.1126 2383.1165 2032.4976 2377.9984 C
2008.6399 2373.8753 1994.1807 2365.3624 1979 2346.5 C
S 
n
1979.2622 2346.8238 m
1981.2052 2345.2504 L
1975.3288 2341.9664 L
1977.3192 2348.3972 L
1979.2622 2346.8238 L
f 
n
2007.4503 2326.041 m
1995.1789 2326.041 L
1995.1789 2315.0411 L
2007.4503 2315.0411 L
2007.4503 2326.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1995.201477 2318.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
2005.9503 2355.041 m
1993.6789 2355.041 L
1993.6789 2344.0411 L
2005.9503 2344.0411 L
2005.9503 2355.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1993.701477 2347.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
false eomode
2037.6052 2337.5225 m
2037.6052 2347.3807 2065.9825 2355.3721 2100.9886 2355.3721 C
2135.9948 2355.3721 2164.3721 2347.3807 2164.3721 2337.5225 C
2164.3721 2327.6643 2135.9948 2319.6728 2100.9886 2319.6728 C
2065.9825 2319.6728 2037.6052 2327.6643 2037.6052 2337.5225 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
2143.3631 2344.0224 m
2058.6142 2344.0224 L
2058.6142 2331.0226 L
2143.3631 2331.0226 L
2143.3631 2344.0224 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2058.614151 2334.422546 m
0 0 32 0 0 (are_member_of) ts
}
true
[0 0 0 1]sts
Q
vmrs
vmr
vmr
end
%%EndDocument
 @endspecial 1840 1251 a
 currentpoint grestore moveto
 1840 1251 a 1067 1251 a
 currentpoint currentpoint translate 1 1.06686 div 1 1.06686 div scale
neg exch neg exch translate
 1067
1251 a 1037 1342 a Ff(Figure)i(4.)f(Pr)o(oduct)h(c)o(lassi\002cation)f
(and)i(structure)1037 1467 y Fi(The)i(collection)f Fe(Products)g
Fi(contains)g(all)g(products)g(which)987 1517 y(are)25
b(either)g Fj(composed)f(pr)n(oducts)g Fi(or)h Fj(single)f(part)g(pr)n
(oducts)p Fi(,)987 1567 y(whereas)15 b(the)f(objects)g(in)f(the)h
(collection)f Fe(Product)24 b(Groups)987 1616 y Fi(represent)10
b Fj(pr)n(oduct)g(gr)n(oups)p Fi(,)g(respecti)o(v)o(ely)m(,)h
Fj(pr)n(oduct)f(families)p Fi(.)1037 1716 y(The)26 b
Fd(classi\002cation)e Fi(of)h(products)g(can)h(be)f(managed)i(by)987
1766 y(the)18 b(association)g Fe(are)p 1336 1766 13 2
v 15 w(member)p 1501 1766 V 14 w(of)h Fi(between)f(the)h(collection)987
1816 y Fe(Products)10 b Fi(and)h(the)g(collection)f Fe(Product)24
b(Groups)p Fi(.)15 b(Since)987 1865 y(there)10 b(is)g(also)h(an)f
(association)g Fe(are)p 1517 1865 V 15 w(member)p 1682
1865 V 14 w(of)g Fi(from)h(the)f(col-)987 1915 y(lection)h
Fe(Product)25 b(Groups)12 b Fi(to)g(itself,)g(it)g(is)g(possible)g(to)f
(ha)o(v)o(e)987 1965 y(a)g(rather)f(comple)o(x)h(classi\002cation)f
(hierarchy)m(.)1037 2015 y(Consider)n(,)f(for)g(e)o(xample,)j(a)e
(compan)o(y)g(producing)e(and)i(selling)987 2065 y(three)f(dif)o
(ferent)f(models)h(of)g(chairs:)j(One)d(for)f(the)h(garden,)h(one)f
(for)987 2115 y(the)g(li)o(ving)e(room,)i(and)g(one)h(for)e(the)h
(kitchen.)j(Each)e(model)f(can)h(be)987 2164 y(ordered)g(in)g(v)o
(arious)f(v)o(ariants.)1037 2214 y(T)m(o)g(classify)g(these)g
(products,)g(we)h(can)g(\002rst)e(create)j(three)e Fj(pr)n(od-)987
2264 y(uct)15 b(gr)n(oup)f Fi(objects)h(\223Garden)g(Chair\224,)i
(\223Li)o(ving)d(Room)g(Chair\224,)987 2314 y(and)e(\223Kitchen)g
(Chair\224)f(which)h(represent)g(the)f(models)h(of)g(chairs.)987
2364 y(These)f(are)g(then)f(put)f(into)g(the)h(collection)f
Fe(Product)24 b(Groups)p Fi(.)987 2413 y(No)o(w)11 b(we)i(create)f
Fj(composed)g(pr)n(oduct)g Fi(objects)f(for)h(each)g(product)987
2463 y(v)o(ariant,)j(and)f(put)f(these)h(into)f(the)h(collection)f
Fe(Products)p Fi(.)24 b(Fi-)987 2513 y(nally)m(,)8 b(we)h(make)f
(associations)g(between)g(the)g Fj(composed)g(pr)n(oducts)987
2563 y Fi(and)i(their)g(corresponding)f Fj(pr)n(oduct)g(gr)n(oup)p
Fi(.)1037 2613 y(The)14 b Fd(structur)o(e)i Fi(of)d(products)g(can)h
(be)g(modelled)g(by)f(the)g(two)987 2662 y(associations)h
Fe(are)p 1279 2662 V 15 w(composed)p 1494 2662 V 14 w(of)p
Fi(.)26 b(The)15 b(one)g(from)f(the)h(col-)p eop
%%Page: 4 4
4 3 bop -91 42 a Fi(lection)9 b Fe(Products)g Fi(to)h(itself)f(e)o
(xpresses)i(the)f(fact)g(that)f(products)-91 91 y(can)h(be)g(part)g(of)
f(other)h(products,)f(respecti)o(v)o(ely)m(,)i(are)f(composed)h(of)-91
141 y(other)f(products.)15 b(The)d(one)f(from)g(the)g(collection)f
Fe(Products)h Fi(to)-91 191 y(the)e(collection)f Fe(Product)24
b(Groups)9 b Fi(further)f(e)o(xtends)i(the)f(\003e)o(x-)-91
241 y(ibility)e(of)j(structuring)f(products,)g(especially)i(product)e
(v)o(ariants.)-91 357 y Fg(3.3.)17 b(Pro)q(duct)i(c)o(haracteristics)92
1257 y
 currentpoint currentpoint translate 2.23674 2.23674 scale neg exch
neg exch translate
 92 1257 a 92 1257 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 92 1257 a @beginspecial 0
@llx 0 @lly 332 @urx 438 @ury 663 @rwi @setspecial
%%BeginDocument: figs/productCharacteristic.eps
%ALDOriginalFile:working:working:Wetice97 (Paper):Drawings:Product Data Model
%ALDBoundingBox: -24 -225 571 617
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
AltsysDict begin
_bfh 
MacVec 256 array copy
/f0 /|______Helvetica dup RF findfont def
_efh 
end %. AltsysDict
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop setcmykcolor}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {1692 1570.11 2287.28 2412 } def 
/bleed 0 def 
/clpr {1692 1570.11 2287.28 2412 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1716 -1795 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/makepattern defed /xt xdf
xt not {/yt save def} if
 
 /PATmp{
exch 
dup length 3 add dict copy 
begin
currentdict /Multi known not {/Multi 1 def} if
Multi 1 ne {
/UserProc /PaintProc load def
/PaintProc {
begin
0 1 Multi 1 sub {
PaintColors 1 index get PATsc
PaintData exch get
gsave currentdict UserProc grestore
}for 
end
} bdf
} if
currentdict
end
exch makepattern
 }bdf
 
 
 /PATsp{
dup /PaintType get 2 eq
{
exch aload length 4 eq
{5 -1 roll}
{spots exch get 0 4 getinterval aload pop
4 {4 index mul 4 1 roll} repeat 6 -2 roll pop}ifelse 
[/Pattern /DeviceCMYK] setcolorspace
}if
setpattern
 }bdf
 /PATfill{{{eofill}fp}{{fill}fp}ifelse}bdf
 /PATprestroke{}bdf
 /PATstroke{stroke}bdf
xt not {yt restore} if
xt {/yt save def} if
 
 /PATtcalc{
gsave
exch concat 
matrix currentmatrix exch 
2 ne {
dup 4 get exch dup 5 get exch
XStep 0 dtransform round exch round exch
XStep div exch XStep div exch
0 YStep dtransform round exch round exch
YStep div exch YStep div exch
7 -3 roll astore
} if
grestore
 }bdf
 
 /PATmp{
exch 
dup 
length 8 add 
dict copy 
begin 
TilingType PATtcalc 
/PATcurrentMtx xdf 
currentdict /Multi known not {/Multi 1 def} if
/FontType 3 def
/Encoding 256 array def
3 string 0 1 255 
{Encoding exch dup 3 index cvs cvn put} for pop
/FontMatrix matrix def
/FontBBox BBox def
/BuildChar {
mark 3 1 roll
exch begin
Multi 1 ne {PaintData exch get}{pop}ifelse
PaintType 2 eq Multi 1 ne or
{XStep 0 FontBBox aload pop setcachedevice}
{XStep 0 setcharwidth}ifelse
currentdict 
/PaintProc load 
end
gsave exec grestore
cleartomark
}bdf
currentdict 
end
/foo exch
definefont
 }bdf
 
 
 /PATsp{
/PATcurrent xdf
PATcurrent /PaintType get 2 eq
{/PATcolor xdf}if
 }bdf
 
 /PATpcalc{
PATcurrent begin
gsave
PATcurrentMtx setmatrix
BBox aload pop pop pop translate
pathbbox
grestore
YStep div ceiling 4 1 roll
XStep div ceiling 4 1 roll
YStep div floor 4 1 roll
XStep div floor 4 1 roll
2 index sub cvi abs
exch 3 index sub cvi abs exch
4 2 roll
YStep mul exch XStep mul exch
end
 }bdf
 
 
 /PATfill{
{{eoclip}fp}{{clip}fp}ifelse
PATpcalc 
newpath
PATcurrent dup begin
setfont
PATcurrentMtx setmatrix
PaintType 2 eq {PATcolor vc} if
3 index string 
0 1 Multi 1 sub { 
3 index 3 index moveto
Multi 1 ne {dup PaintColors exch get vc} if
0 1 7 index 1 sub { 
2 index 
exch 
2 index put
} for
pop 
3 index 
{
currentpoint 
2 index show
YStep add moveto
}repeat
}for
5 {pop} repeat 
end
 }bdf
 /PATprestroke{{strokepath}fp}bdf
 /PATstroke{false PATfill}bdf
xt {yt restore} if
/makepattern defed /xt xdf
xt not {/yt save def} if
userdict begin /fhpatdict 12 dict def end
fhpatdict begin
 /PatternType 1 def
 /PaintType 1 def 
 /TilingType 1 def
 /BBox [0 0 8 8] def
 /XStep 8 def
 /YStep 8 def
 /PatMtx [1 0 0 -1 0 8] def
 /PatIMtx [1 0 0 1 0 0] def
/PaintProc
{begin FHPatColor vc 8 8 true PatMtx PatData imagemask end} bdf
 /FHPatColor [0 0 0 0] def
 
 
end
/macpatorient{1 0 dtransform 0 eq exch 0 ne and}bdf
/veccalc { dtransform round exch round exch idtransform dup mul exch dup mul exch add sqrt } bdf
gsave 
0 0 transform 
2 copy 
round exch round exch
2 index sub exch 3 index sub exch
idtransform translate
pop pop
1 0 veccalc 0 1 veccalc 
scale
matrix currentmatrix
/PATmtx xdf
grestore
/pF{
 gsave 1 setgray filler grestore
 fhpatdict begin  
 /PatData xdf  
 /FHPatColor xdf  
 end
 save    
 PATmtx setmatrix 
 fhpatdict dup   
 /PatIMtx get   
 PATmp     
 PATsp     
 /clipper load /eoclip load eq PATfill
 restore
}bdf
/pS{
 fhpatdict begin  
 /PatData xdf  
 /FHPatColor xdf  
 end
 save
 PATprestroke    
 PATmtx setmatrix
 gsave 1 setgray stroke grestore
 fhpatdict dup 
 /PatIMtx get 
 PATmp 
 PATsp 
 PATstroke
 restore
}bdf
xt not {yt restore} if
xt {/yt save def} if
/macpatstring 8 string def
/macpattint 0 def
/macpatcol [] def
/macpatangle{1 0 matrix defaultmatrix dtransform exch atan}bdf
/macpatorient{1 0 dtransform 0 eq exch 0 ne and}bdf
/macpatcountbits 
{
 0 exch     
 {
cvi 
0 1 8 
{ 
pop
dup 1 and 
0 ne 
{
exch 
1 add 
exch 
} if
-1 bitshift 
} for
pop 
 }
 forall
}bdf
/macpatset
{
 macpatstring copy pop 
 9.375 
 macpatangle 
 macpatorient not{-90 add}if
 {
1 add 4 mul cvi macpatstring exch get exch
1 add 4 mul cvi 7 sub bitshift 1 and 
inverted? {1 exch sub} if
 }
 setscreen
 
 64 macpatstring macpatcountbits sub 64 div
 inverted? {.9921875 exch sub} if
 /macpattint xdf
 
 
 {} st
 fhnumcolors 1 ne
 {
cvc dup length array copy /macpatcol xdf 
/macpattint 1 macpattint sub def 
macpatcol length 4 eq
{
0 1 3
{
macpatcol exch 2 copy
get .25 lt{0}{macpattint}ifelse put
}for
}
{
macpatcol dup 0 get .25 lt{0}{macpattint}ifelse 0 exch put
}ifelse 
macpatcol vc
 }
 {
currentgray 1 ne {macpattint setseparationgray} if
 } 
 ifelse
}bdf
/pF{
 gsave 
 exch vc
 macpatset 
 {filler}fp 
 grestore
}bdf
/pS{
 gsave 
 exch vc
 macpatset 
 {stroke}fp 
 grestore
}bdf
xt {yt restore} if
/pf{closepath pF}bdf
/ps{closepath pS}bdf
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
 dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
 setlinewidth vc newpath 
 /ts{{false charpath stroke}ta}def exec 
 xt setlinewidth}bdf 
 
/strk{/textopf currentoverprint def vc setoverprint
 /ts{{false charpath stroke}ta}def exec 
 textopf setoverprint
 }bdf 
vms
0 i
1881.4701 2135.59 m
1881.4701 2145.4483 1909.8474 2153.4397 1944.8535 2153.4397 C
1979.8596 2153.4397 2008.237 2145.4483 2008.237 2135.59 C
2008.237 2125.7318 1979.8596 2117.7404 1944.8535 2117.7404 C
1909.8474 2117.7404 1881.4701 2125.7318 1881.4701 2135.59 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1731.0038 2077.1238 m
1731.0038 2086.982 1759.3811 2094.9735 1794.3873 2094.9735 C
1829.3934 2094.9735 1857.7707 2086.982 1857.7707 2077.1238 C
1857.7707 2067.2656 1829.3934 2059.2742 1794.3873 2059.2742 C
1759.3811 2059.2742 1731.0038 2067.2656 1731.0038 2077.1238 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1881.4701 1986.6576 m
1881.4701 1996.5158 1909.8474 2004.5073 1944.8535 2004.5073 C
1979.8596 2004.5073 2008.237 1996.5158 2008.237 1986.6576 C
2008.237 1976.7994 1979.8596 1968.808 1944.8535 1968.808 C
1909.8474 1968.808 1881.4701 1976.7994 1881.4701 1986.6576 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1900.8535 2231.6053 m
1988.8535 2231.6053 L
1988.8535 2189.7708 L
1900.8535 2189.7708 L
1900.8535 2231.6053 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1900.8535 2083.9059 m
1988.8535 2083.9059 L
1988.8535 2042.0715 L
1900.8535 2042.0715 L
1900.8535 2083.9059 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1822.5866 1848.9735 m
1910.5866 1848.9735 L
1910.5866 1807.139 L
1822.5866 1807.139 L
1822.5866 1848.9735 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1958.3197 1848.9735 m
2046.3197 1848.9735 L
2046.3197 1807.139 L
1958.3197 1807.139 L
1958.3197 1848.9735 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1900.8535 1927.5748 m
1988.8535 1927.5748 L
1988.8535 1885.7404 L
1900.8535 1885.7404 L
1900.8535 1927.5748 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1922 2084.7444 m
1989 2084.7444 L
1989 2071.7444 L
1922 2071.7444 L
1922 2084.7444 L
[0 0 0 0]  vc
false setoverprint
f 
1.0001 w
0 J
0 j
3.863693 M
[0 0 0 1]  vc
S 
n
1985.5417 2083.2443 m
1932.4583 2083.2443 L
1932.4583 2073.2444 L
1985.5417 2073.2444 L
1985.5417 2083.2443 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1932.458328 2076.044418 m
0 0 32 0 0 (char) ts
-0.089951 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (acter) ts
0.134995 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (istic) ts
}
true
[0 0 0 1]sts
Q
1922 2231.5 m
1989 2231.5 L
1989 2218.5 L
1922 2218.5 L
1922 2231.5 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1986.524 2229.9999 m
1956.4761 2229.9999 L
1956.4761 2220.0001 L
1986.524 2220.0001 L
1986.524 2229.9999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1956.476059 2222.800049 m
0 0 32 0 0 (product) ts
}
true
[0 0 0 1]sts
Q
1922 1927.5 m
1989 1927.5 L
1989 1914.5 L
1922 1914.5 L
1922 1927.5 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1987.5331 1925.9999 m
1966.2117 1925.9999 L
1966.2117 1916.0001 L
1987.5331 1916.0001 L
1987.5331 1925.9999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1966.251648 1918.800049 m
0 0 32 0 0 (v) ts
-0.224945 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (alue) ts
}
true
[0 0 0 1]sts
Q
1979.5 1849 m
2046.5 1849 L
2046.5 1836 L
1979.5 1836 L
1979.5 1849 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2045.1531 1847.4999 m
1997.3221 1847.4999 L
1997.3221 1837.5001 L
2045.1531 1837.5001 L
2045.1531 1847.4999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1997.362122 1840.300049 m
0 0 32 0 0 (v) ts
-0.224945 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (alueRange) ts
}
true
[0 0 0 1]sts
Q
1843 1848.7782 m
1910 1848.7782 L
1910 1835.7782 L
1843 1835.7782 L
1843 1848.7782 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1908.173 1847.7781 m
1862.2503 1847.7781 L
1862.2503 1837.7782 L
1908.173 1837.7782 L
1908.173 1847.7781 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1862.290298 1840.578201 m
0 0 32 0 0 (singleV) ts
-0.629929 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (alue) ts
}
true
[0 0 0 1]sts
Q
1886.8535 2220.6053 m
1974.8535 2220.6053 L
1974.8535 2178.7708 L
1886.8535 2178.7708 L
1886.8535 2220.6053 L
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
1954.5512 2206.1879 m
1907.1558 2206.1879 L
1907.1558 2193.1881 L
1954.5512 2193.1881 L
1954.5512 2206.1879 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1907.155777 2196.588089 m
0 0 32 0 0 (Products) ts
}
true
[0 0 0 1]sts
Q
1886.8535 2072.9059 m
1974.8535 2072.9059 L
1974.8535 2031.0715 L
1886.8535 2031.0715 L
1886.8535 2072.9059 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1970.5502 2058.4886 m
1891.1568 2058.4886 L
1891.1568 2045.4888 L
1970.5502 2045.4888 L
1970.5502 2058.4886 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1891.156754 2048.888763 m
0 0 32 0 0 (Characteristics) ts
}
true
[0 0 0 1]sts
Q
1886.8535 1916.5748 m
1974.8535 1916.5748 L
1974.8535 1874.7404 L
1886.8535 1874.7404 L
1886.8535 1916.5748 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
1967.118 1902.1575 m
1894.589 1902.1575 L
1894.589 1889.1577 L
1967.118 1889.1577 L
1967.118 1902.1575 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1894.588974 1892.557678 m
0 0 32 0 0 (V) ts
-0.887878 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
0 0 32 0 0 (alue Entities) ts
}
true
[0 0 0 1]sts
Q
1851 1838 m
1917 1870.5 L
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1916.6255 1870.3173 m
1915.5295 1872.5644 L
1922.2432 1873.0573 L
1917.7215 1868.0702 L
1916.6255 1870.3173 L
f 
n
vmrs
0 i
1988 1838.5 m
1948 1870 L
1.0001 w
0 J
0 j
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1948.3283 1869.7435 m
1946.7891 1867.7733 L
1943.403 1873.5915 L
1949.8676 1871.7136 L
1948.3283 1869.7435 L
f 
n
1874.4662 1867.6993 m
1913.2331 1861.5338 L
1945.2331 1859.6993 L
1979.6993 1866.4662 L
S 
n
1941.5501 1857.233 m
1917.057 1857.233 L
1917.057 1846.2331 L
1941.5501 1846.2331 L
1941.5501 1857.233 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1917.080444 1849.233109 m
0 0 32 0 0 (cover) ts
}
true
[0 0 0 1]sts
Q
false eomode
1808.5866 1837.9735 m
1896.5866 1837.9735 L
1896.5866 1796.139 L
1808.5866 1796.139 L
1808.5866 1837.9735 L
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
1870.5084 1823.5562 m
1834.6649 1823.5562 L
1834.6649 1810.5563 L
1870.5084 1810.5563 L
1870.5084 1823.5562 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1834.664856 1813.956329 m
0 0 32 0 0 (V) ts
-0.887878 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
0 0 32 0 0 (alues) ts
}
true
[0 0 0 1]sts
Q
1944.3197 1837.9735 m
2032.3197 1837.9735 L
2032.3197 1796.139 L
1944.3197 1796.139 L
1944.3197 1837.9735 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2009.0204 1829.5562 m
1967.6191 1829.5562 L
1967.6191 1804.5563 L
2009.0204 1804.5563 L
2009.0204 1829.5562 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1967.619064 1819.956329 m
0 0 32 0 0 (V) ts
-0.887878 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
0 0 32 0 0 (alue) ts
}
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
1967.619064 1807.956329 m
0 0 32 0 0 (Ranges) ts
}
true
[0 0 0 1]sts
Q
1883.5 2195 m
1850.7859 2192.4836 1830.2918 2183.1064 1807.0002 2160 C
1784.0255 2137.2081 1774.5631 2117.219 1771.5 2085 C
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1883.0844 2194.9709 m
1882.988 2196.3484 1884.0263 2197.543 1885.4039 2197.6394 C
1886.7814 2197.7357 1887.976 2196.6972 1888.0724 2195.3197 C
1888.1687 2193.9423 1887.1303 2192.7476 1885.7527 2192.6513 C
1884.3752 2192.5549 1883.1807 2193.5934 1883.0844 2194.9709 C
f 
n
1771.5 2048 m
1770.05 2009.29 1777.6783 1984.3007 1800.5 1953 C
1823.1924 1921.8766 1844.4541 1907.0459 1881.5 1896.5 C
S 
n
1881.0995 1896.6148 m
1881.7886 1899.0181 L
1887.1076 1894.892 L
1880.4103 1894.2115 L
1881.0995 1896.6148 L
f 
n
1883.4503 2192.041 m
1871.1789 2192.041 L
1871.1789 2181.0411 L
1883.4503 2181.0411 L
1883.4503 2192.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1871.201477 2184.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1883.4503 1915.541 m
1871.1789 1915.541 L
1871.1789 1904.5411 L
1883.4503 1904.5411 L
1883.4503 1915.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1871.201477 1907.541107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
false eomode
1717.0038 2066.1238 m
1717.0038 2075.982 1745.3811 2083.9735 1780.3873 2083.9735 C
1815.3934 2083.9735 1843.7707 2075.982 1843.7707 2066.1238 C
1843.7707 2056.2656 1815.3934 2048.2742 1780.3873 2048.2742 C
1745.3811 2048.2742 1717.0038 2056.2656 1717.0038 2066.1238 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
1825.7706 2072.6237 m
1735.004 2072.6237 L
1735.004 2059.6239 L
1825.7706 2059.6239 L
1825.7706 2072.6237 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1735.004013 2063.023895 m
0 0 32 0 0 (are_specified_by) ts
}
true
[0 0 0 1]sts
Q
1930.7498 2106.5 m
1930.7498 2080.5 L
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1930.7498 2080.9167 m
1933.2499 2080.9167 L
1930.7498 2074.6664 L
1928.2496 2080.9167 L
1930.7498 2080.9167 L
f 
n
1930.7498 2175.5 m
1930.7498 2143 L
S 
n
1930.7498 2175.0833 m
1929.3689 2175.0833 1928.2496 2176.2025 1928.2496 2177.5834 C
1928.2496 2178.9643 1929.3689 2180.0836 1930.7498 2180.0836 C
1932.1306 2180.0836 1933.2499 2178.9643 1933.2499 2177.5834 C
1933.2499 2176.2025 1932.1306 2175.0833 1930.7498 2175.0833 C
f 
n
1946.4503 2177.041 m
1934.1789 2177.041 L
1934.1789 2166.0411 L
1946.4503 2166.0411 L
1946.4503 2177.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1934.201477 2169.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
vmrs
0 i
1945.4503 2095.541 m
1933.1789 2095.541 L
1933.1789 2084.5411 L
1945.4503 2084.5411 L
1945.4503 2095.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1933.201477 2087.541107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1867.4701 2124.59 m
1867.4701 2134.4483 1895.8474 2142.4397 1930.8535 2142.4397 C
1965.8596 2142.4397 1994.237 2134.4483 1994.237 2124.59 C
1994.237 2114.7318 1965.8596 2106.7404 1930.8535 2106.7404 C
1895.8474 2106.7404 1867.4701 2114.7318 1867.4701 2124.59 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
S 
n
1976.2368 2131.09 m
1885.4702 2131.09 L
1885.4702 2118.0901 L
1976.2368 2118.0901 L
1976.2368 2131.09 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1885.47023 2121.490112 m
0 0 32 0 0 (are_specified_by) ts
}
true
[0 0 0 1]sts
Q
1930.7498 1958.5 m
1930.7498 1922.5 L
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1930.7498 1922.9167 m
1933.2499 1922.9167 L
1930.7498 1916.6664 L
1928.2496 1922.9167 L
1930.7498 1922.9167 L
f 
n
1930.7498 2027 m
1930.7498 1994 L
S 
n
1930.7498 2026.5833 m
1929.3689 2026.5833 1928.2496 2027.7025 1928.2496 2029.0834 C
1928.2496 2030.4643 1929.3689 2031.5836 1930.7498 2031.5836 C
1932.1306 2031.5836 1933.2499 2030.4643 1933.2499 2029.0834 C
1933.2499 2027.7025 1932.1306 2026.5833 1930.7498 2026.5833 C
f 
n
1948.4503 2028.541 m
1936.1789 2028.541 L
1936.1789 2017.5411 L
1948.4503 2017.5411 L
1948.4503 2028.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1936.201477 2020.541107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
1947.8253 1939.541 m
1933.8839 1939.541 L
1933.8839 1928.5411 L
1947.8253 1928.5411 L
1947.8253 1939.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1933.906342 1931.541107 m
0 0 32 0 0 (1:1) ts
}
true
[0 0 0 1]sts
Q
false eomode
1867.4701 1975.6576 m
1867.4701 1985.5158 1895.8474 1993.5073 1930.8535 1993.5073 C
1965.8596 1993.5073 1994.237 1985.5158 1994.237 1975.6576 C
1994.237 1965.7994 1965.8596 1957.808 1930.8535 1957.808 C
1895.8474 1957.808 1867.4701 1965.7994 1867.4701 1975.6576 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
1972.2407 1982.1575 m
1889.4663 1982.1575 L
1889.4663 1969.1577 L
1972.2407 1969.1577 L
1972.2407 1982.1575 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1889.466324 1972.557678 m
0 0 32 0 0 (are_defined_by) ts
}
true
[0 0 0 1]sts
Q
vmr
vmr
end
%%EndDocument
 @endspecial 368 1257 a
 currentpoint grestore moveto
 368 1257 a 92 1257 a
 currentpoint currentpoint translate 1 2.23674 div 1 2.23674 div scale
neg exch neg exch translate
 92 1257
a 79 1348 a Ff(Figure)12 b(5.)f(Pr)o(oduct)i(characteristics)-41
1454 y Fi(All)e(products)g(can)h(be)g(speci\002ed)h(by)e(one)h(or)g
(more)g(character)o(-)-91 1504 y(istics)e(such)g(as)h
Fj(size)p Fi(,)g Fj(colour)g Fi(and)f Fj(price)p Fi(.)-41
1558 y(In)i(our)g(product)g(data)h(model,)h(all)e Fj(important)g
Fi(characteristics)-91 1608 y(are)e(de\002ned)h(as)f(independent)f
(entities)g(and)h(not)f(as)i(attrib)o(utes)d(of)i(a)-91
1658 y(product)e(object.)k(Therefore,)e(we)f(are)h(v)o(ery)f(\003e)o
(xible)g(in)f(modelling)-91 1708 y(dif)o(ferent)16 b(kinds)h(of)g
(products)g(and)g(it)g(is)g(possible)g(to)g(add)g(and)-91
1758 y(remo)o(v)o(e)g(characteristics)g(without)d(ha)o(ving)h(to)g
(change)i(the)f(type)-91 1807 y(speci\002cation)c(of)h(the)f(product)g
(objects.)20 b(An)13 b Fj(important)e Fi(charac-)-91
1857 y(teristic)i(can)j(be)f(re)o(garded)g(as)g(a)g(characteristic)g
(which)f(is)h(either)-91 1907 y(common)c(for)g(man)o(y)g(products)f
(such)h(as)h Fj(colour)f Fi(or)g(which)f(is)h(sig-)-91
1957 y(ni\002cant)f(for)f(characterising)i(a)g(speci\002c)g(product.)
-41 2011 y(One)18 b(of)g(the)h(associations)f Fe(are)p
465 2011 13 2 v 14 w(specified)p 704 2011 V 15 w(by)g
Fi(relates)-91 2061 y(characteristics)e(to)f(products.)28
b(Each)17 b(characteristic)f(is)f(de\002ned)-91 2110
y(by)d(one)h(or)g(more)g(v)o(alue)g(entities.)21 b(This)13
b(is)f(managed)i(by)f(the)g(as-)-91 2160 y(sociation)e
Fe(are)p 148 2160 V 15 w(defined)p 338 2160 V 14 w(by)p
Fi(.)20 b(As)13 b(in)f(the)g(case)i(of)e(character)o(-)-91
2210 y(istics,)h(we)g(represent)g Fj(important)f Fi(v)o(alues)h(as)g
(entities)f(and)h(not)f(as)-91 2260 y(attrib)o(utes)d(in)h(our)g(data)h
(model.)j(W)m(e)d(are)h(con)n(vinced)e(that)g(this)g(ap-)-91
2310 y(proach)j(is)g(not)g(only)f(appropriate)g(for)h(modelling)f
(product)g(v)o(ari-)-91 2359 y(ants,)g(b)o(ut)f(also)h(is)f(an)h(adv)o
(antage)g(for)g(the)f(product)g(con\002guration)-91 2409
y(process.)-41 2463 y(A)g(v)o(alue)g(entity)f(has)h(a)h(type)e(\(e.g.)
16 b(inte)o(ger)n(,)c(string\))e(and)h(a)h(unit)-91 2513
y(of)i(measurement)j(\(e.g.)27 b(cm,)17 b(kg\).)26 b(A)15
b(v)o(alue)g(entity)f(is)g(either)h(a)-91 2563 y(single)10
b(v)o(alue)h(or)g(represents)h(a)f(range)h(of)e(v)o(alues)i(\(e.g.)k
(1.5)11 b(-)g(2.5\).)-91 2613 y(Not)e(all)g(characteristics)g(need)h
(to)f(be)h(speci\002ed)g(by)f(a)h(v)o(alue)f(entity)m(.)-91
2663 y(A)j(characteristic)g(can)h(also)e(be)i(e)o(v)o(aluated)f(by)f(a)
h(formula)g(\(as)g(de-)987 42 y(scribed)e(later\).)j(The)e(other)e
(association)h Fe(are)p 1670 42 V 14 w(specified)p 1909
42 V 14 w(by)987 91 y Fi(assigns)g(v)o(alue)g(entities)g(to)f
(products.)987 189 y Fg(3.4.)17 b(Pro)q(duct)i(Description)1037
286 y Fi(F)o(or)11 b(describing)f(the)g(o)o(v)o(erall)h(structure)f(of)
h(a)g(product,)f(as)i(well)987 336 y(as)i(for)e(supporting)f(the)i
(process)h(of)f(product)f(con\002guration,)h(we)987 386
y(need)g(a)g(mechanism)h(which)e(allo)o(ws)g(the)h(formulation)e(and)h
(e)o(v)o(al-)987 436 y(uation)f(of)h(facts)g(such)h(as)f(\223the)h
(minimum)f(and)g(maximum)h(num-)987 485 y(ber)d(of)g(each)h
(component\224,)g(\223component)f(is)g(mandatory)m(,)g(respec-)987
535 y(ti)o(v)o(ely)15 b(optional\224,)g(\223characteristic)i
Fj(volume)e Fi(is)h(calculated)g(by)f(a)987 585 y(formula\224,)c
(\223all)f(parts)g(must)g(ha)o(v)o(e)h(the)f(same)i(colour\224,)e(and)h
(so)f(on.)1037 635 y(W)m(e)i(introduce)e(therefore)i(the)f(concept)h
(of)f Fj(Pr)n(oduct)h(Descrip-)987 685 y(tions)p Fi(.)29
b(A)16 b(product)f(description)f(can)j(either)e(be)h(a)h(rule,)g(a)g
(con-)987 735 y(straint,)9 b(a)i(formula)f(or)g(a)h(query)f(\(\002gure)
g(6\).)1118 1428 y
 currentpoint currentpoint translate 1.56514 1.56514 scale neg exch
neg exch translate
 1118 1428 a 1118 1428 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 1118 1428
a @beginspecial 0 @llx 0 @lly 369 @urx 339 @ury 1107
@rwi @setspecial
%%BeginDocument: figs/productDescription.eps
%ALDOriginalFile:working:working:Wetice97 (Paper):Drawings:Product Data Model
%ALDBoundingBox: -194 -324 401 518
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
AltsysDict begin
_bfh 
MacVec 256 array copy
/f0 /|______Helvetica dup RF findfont def
_efh 
end %. AltsysDict
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop setcmykcolor}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {1692 1570.11 2287.28 2412 } def 
/bleed 0 def 
/clpr {1692 1570.11 2287.28 2412 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1886 -1894 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/makepattern defed /xt xdf
xt not {/yt save def} if
 
 /PATmp{
exch 
dup length 3 add dict copy 
begin
currentdict /Multi known not {/Multi 1 def} if
Multi 1 ne {
/UserProc /PaintProc load def
/PaintProc {
begin
0 1 Multi 1 sub {
PaintColors 1 index get PATsc
PaintData exch get
gsave currentdict UserProc grestore
}for 
end
} bdf
} if
currentdict
end
exch makepattern
 }bdf
 
 
 /PATsp{
dup /PaintType get 2 eq
{
exch aload length 4 eq
{5 -1 roll}
{spots exch get 0 4 getinterval aload pop
4 {4 index mul 4 1 roll} repeat 6 -2 roll pop}ifelse 
[/Pattern /DeviceCMYK] setcolorspace
}if
setpattern
 }bdf
 /PATfill{{{eofill}fp}{{fill}fp}ifelse}bdf
 /PATprestroke{}bdf
 /PATstroke{stroke}bdf
xt not {yt restore} if
xt {/yt save def} if
 
 /PATtcalc{
gsave
exch concat 
matrix currentmatrix exch 
2 ne {
dup 4 get exch dup 5 get exch
XStep 0 dtransform round exch round exch
XStep div exch XStep div exch
0 YStep dtransform round exch round exch
YStep div exch YStep div exch
7 -3 roll astore
} if
grestore
 }bdf
 
 /PATmp{
exch 
dup 
length 8 add 
dict copy 
begin 
TilingType PATtcalc 
/PATcurrentMtx xdf 
currentdict /Multi known not {/Multi 1 def} if
/FontType 3 def
/Encoding 256 array def
3 string 0 1 255 
{Encoding exch dup 3 index cvs cvn put} for pop
/FontMatrix matrix def
/FontBBox BBox def
/BuildChar {
mark 3 1 roll
exch begin
Multi 1 ne {PaintData exch get}{pop}ifelse
PaintType 2 eq Multi 1 ne or
{XStep 0 FontBBox aload pop setcachedevice}
{XStep 0 setcharwidth}ifelse
currentdict 
/PaintProc load 
end
gsave exec grestore
cleartomark
}bdf
currentdict 
end
/foo exch
definefont
 }bdf
 
 
 /PATsp{
/PATcurrent xdf
PATcurrent /PaintType get 2 eq
{/PATcolor xdf}if
 }bdf
 
 /PATpcalc{
PATcurrent begin
gsave
PATcurrentMtx setmatrix
BBox aload pop pop pop translate
pathbbox
grestore
YStep div ceiling 4 1 roll
XStep div ceiling 4 1 roll
YStep div floor 4 1 roll
XStep div floor 4 1 roll
2 index sub cvi abs
exch 3 index sub cvi abs exch
4 2 roll
YStep mul exch XStep mul exch
end
 }bdf
 
 
 /PATfill{
{{eoclip}fp}{{clip}fp}ifelse
PATpcalc 
newpath
PATcurrent dup begin
setfont
PATcurrentMtx setmatrix
PaintType 2 eq {PATcolor vc} if
3 index string 
0 1 Multi 1 sub { 
3 index 3 index moveto
Multi 1 ne {dup PaintColors exch get vc} if
0 1 7 index 1 sub { 
2 index 
exch 
2 index put
} for
pop 
3 index 
{
currentpoint 
2 index show
YStep add moveto
}repeat
}for
5 {pop} repeat 
end
 }bdf
 /PATprestroke{{strokepath}fp}bdf
 /PATstroke{false PATfill}bdf
xt {yt restore} if
/makepattern defed /xt xdf
xt not {/yt save def} if
userdict begin /fhpatdict 12 dict def end
fhpatdict begin
 /PatternType 1 def
 /PaintType 1 def 
 /TilingType 1 def
 /BBox [0 0 8 8] def
 /XStep 8 def
 /YStep 8 def
 /PatMtx [1 0 0 -1 0 8] def
 /PatIMtx [1 0 0 1 0 0] def
/PaintProc
{begin FHPatColor vc 8 8 true PatMtx PatData imagemask end} bdf
 /FHPatColor [0 0 0 0] def
 
 
end
/macpatorient{1 0 dtransform 0 eq exch 0 ne and}bdf
/veccalc { dtransform round exch round exch idtransform dup mul exch dup mul exch add sqrt } bdf
gsave 
0 0 transform 
2 copy 
round exch round exch
2 index sub exch 3 index sub exch
idtransform translate
pop pop
1 0 veccalc 0 1 veccalc 
scale
matrix currentmatrix
/PATmtx xdf
grestore
/pF{
 gsave 1 setgray filler grestore
 fhpatdict begin  
 /PatData xdf  
 /FHPatColor xdf  
 end
 save    
 PATmtx setmatrix 
 fhpatdict dup   
 /PatIMtx get   
 PATmp     
 PATsp     
 /clipper load /eoclip load eq PATfill
 restore
}bdf
/pS{
 fhpatdict begin  
 /PatData xdf  
 /FHPatColor xdf  
 end
 save
 PATprestroke    
 PATmtx setmatrix
 gsave 1 setgray stroke grestore
 fhpatdict dup 
 /PatIMtx get 
 PATmp 
 PATsp 
 PATstroke
 restore
}bdf
xt not {yt restore} if
xt {/yt save def} if
/macpatstring 8 string def
/macpattint 0 def
/macpatcol [] def
/macpatangle{1 0 matrix defaultmatrix dtransform exch atan}bdf
/macpatorient{1 0 dtransform 0 eq exch 0 ne and}bdf
/macpatcountbits 
{
 0 exch     
 {
cvi 
0 1 8 
{ 
pop
dup 1 and 
0 ne 
{
exch 
1 add 
exch 
} if
-1 bitshift 
} for
pop 
 }
 forall
}bdf
/macpatset
{
 macpatstring copy pop 
 9.375 
 macpatangle 
 macpatorient not{-90 add}if
 {
1 add 4 mul cvi macpatstring exch get exch
1 add 4 mul cvi 7 sub bitshift 1 and 
inverted? {1 exch sub} if
 }
 setscreen
 
 64 macpatstring macpatcountbits sub 64 div
 inverted? {.9921875 exch sub} if
 /macpattint xdf
 
 
 {} st
 fhnumcolors 1 ne
 {
cvc dup length array copy /macpatcol xdf 
/macpattint 1 macpattint sub def 
macpatcol length 4 eq
{
0 1 3
{
macpatcol exch 2 copy
get .25 lt{0}{macpattint}ifelse put
}for
}
{
macpatcol dup 0 get .25 lt{0}{macpattint}ifelse 0 exch put
}ifelse 
macpatcol vc
 }
 {
currentgray 1 ne {macpattint setseparationgray} if
 } 
 ifelse
}bdf
/pF{
 gsave 
 exch vc
 macpatset 
 {filler}fp 
 grestore
}bdf
/pS{
 gsave 
 exch vc
 macpatset 
 {stroke}fp 
 grestore
}bdf
xt {yt restore} if
/pf{closepath pF}bdf
/ps{closepath pS}bdf
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
 dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
 setlinewidth vc newpath 
 /ts{{false charpath stroke}ta}def exec 
 xt setlinewidth}bdf 
 
/strk{/textopf currentoverprint def vc setoverprint
 /ts{{false charpath stroke}ta}def exec 
 textopf setoverprint
 }bdf 
vms
0 i
2072.1 2132.2638 m
2072.1 2142.122 2100.4773 2150.1135 2135.4834 2150.1135 C
2170.4896 2150.1135 2198.8669 2142.122 2198.8669 2132.2638 C
2198.8669 2122.4056 2170.4896 2114.4142 2135.4834 2114.4142 C
2100.4773 2114.4142 2072.1 2122.4056 2072.1 2132.2638 C
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1900.8535 2231.6053 m
1988.8535 2231.6053 L
1988.8535 2189.7708 L
1900.8535 2189.7708 L
1900.8535 2231.6053 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
2040.4834 2010.1811 m
2128.4834 2010.1811 L
2128.4834 1968.3466 L
2040.4834 1968.3466 L
2040.4834 2010.1811 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
2165.4834 2010.1811 m
2253.4834 2010.1811 L
2253.4834 1968.3466 L
2165.4834 1968.3466 L
2165.4834 2010.1811 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
2100.4834 1948.1811 m
2188.4834 1948.1811 L
2188.4834 1906.3466 L
2100.4834 1906.3466 L
2100.4834 1948.1811 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
2100.4834 2082.1811 m
2188.4834 2082.1811 L
2188.4834 2040.3466 L
2100.4834 2040.3466 L
2100.4834 2082.1811 L
[0 0 0 1] <8822882288228822> pf 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
false setoverprint
S 
n
vmrs
0 i
1922 2231.5 m
1989 2231.5 L
1989 2218.5 L
1922 2218.5 L
1922 2231.5 L
[0 0 0 0]  vc
false setoverprint
f 
1.0001 w
0 J
0 j
3.863693 M
[0 0 0 1]  vc
S 
n
1986.524 2229.9999 m
1956.4761 2229.9999 L
1956.4761 2220.0001 L
1986.524 2220.0001 L
1986.524 2229.9999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
1956.476059 2222.800049 m
0 0 32 0 0 (product) ts
}
true
[0 0 0 1]sts
Q
2121.5 2081.8819 m
2188.5 2081.8819 L
2188.5 2068.8819 L
2121.5 2068.8819 L
2121.5 2081.8819 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2186.1908 2080.3819 m
2142.5107 2080.3819 L
2142.5107 2070.382 L
2186.1908 2070.382 L
2186.1908 2080.3819 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
2142.55072 2073.181976 m
0 0 32 0 0 (descr) ts
0.134995 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (iption) ts
}
true
[0 0 0 1]sts
Q
2061.5 2010 m
2128.5 2010 L
2128.5 1997 L
2061.5 1997 L
2061.5 2010 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2127.2646 2008.4999 m
2083.5846 2008.4999 L
2083.5846 1998.5001 L
2127.2646 1998.5001 L
2127.2646 2008.4999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
2083.624603 2001.300049 m
0 0 32 0 0 (descr) ts
0.134995 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (iption) ts
}
true
[0 0 0 1]sts
Q
2186.5 2009.8819 m
2253.5 2009.8819 L
2253.5 1996.8819 L
2186.5 1996.8819 L
2186.5 2009.8819 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2252.2646 2007.8819 m
2208.5846 2007.8819 L
2208.5846 1997.882 L
2252.2646 1997.882 L
2252.2646 2007.8819 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
2208.624603 2000.681976 m
0 0 32 0 0 (descr) ts
0.134995 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (iption) ts
}
true
[0 0 0 1]sts
Q
2121.5 1948 m
2188.5 1948 L
2188.5 1935 L
2121.5 1935 L
2121.5 1948 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2186.8046 1946.4999 m
2143.1246 1946.4999 L
2143.1246 1936.5001 L
2186.8046 1936.5001 L
2186.8046 1946.4999 L
n
q
{
f0 [9 0 0 9 0 0] makesetfont
2143.164581 1939.300049 m
0 0 32 0 0 (descr) ts
0.134995 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [9 0 0 9 0 0] makesetfont
0 0 32 0 0 (iption) ts
}
true
[0 0 0 1]sts
Q
1886.8535 2220.6053 m
1974.8535 2220.6053 L
1974.8535 2178.7708 L
1886.8535 2178.7708 L
1886.8535 2220.6053 L
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
1954.5512 2206.1879 m
1907.1558 2206.1879 L
1907.1558 2193.1881 L
1954.5512 2193.1881 L
1954.5512 2206.1879 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
1907.155777 2196.588089 m
0 0 32 0 0 (Products) ts
}
true
[0 0 0 1]sts
Q
2086.4834 2071.1811 m
2174.4834 2071.1811 L
2174.4834 2029.3466 L
2086.4834 2029.3466 L
2086.4834 2071.1811 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2163.5151 2062.7637 m
2097.4517 2062.7637 L
2097.4517 2037.7639 L
2163.5151 2037.7639 L
2163.5151 2062.7637 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2109.811096 2053.163895 m
0 0 32 0 0 (Product) ts
}
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
2097.483521 2041.163895 m
0 0 32 0 0 (Descriptions) ts
}
true
[0 0 0 1]sts
Q
2067 2000 m
2106.5 2025.5 L
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
2106.1505 2025.2731 m
2104.7889 2027.3698 L
2111.3925 2028.6772 L
2107.5122 2023.1763 L
2106.1505 2025.2731 L
f 
n
2196.5 2000.5 m
2152 2025 L
S 
n
2152.3644 2024.798 m
2151.1523 2022.6113 L
2146.8978 2027.8281 L
2153.5765 2026.9847 L
2152.3644 2024.798 L
f 
n
2131 1938 m
2131 2023.5 L
S 
n
2131 2023.0833 m
2128.4998 2023.0833 L
2131 2029.3336 L
2133.5002 2023.0833 L
2131 2023.0833 L
f 
n
2077.3045 2026.4245 m
2116.0714 2020.259 L
2148.0714 2018.4245 L
2182.5376 2025.1914 L
S 
n
vmrs
0 i
2161.4007 2017.09 m
2136.9076 2017.09 L
2136.9076 2006.0901 L
2161.4007 2006.0901 L
2161.4007 2017.09 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
2136.931046 2009.090118 m
0 0 32 0 0 (cover) ts
}
true
[0 0 0 1]sts
Q
2026.4834 1999.1811 m
2114.4834 1999.1811 L
2114.4834 1957.3466 L
2026.4834 1957.3466 L
2026.4834 1999.1811 L
[0 0 0 0]  vc
false setoverprint
f 
1 w
0 J
0 j
3.863708 M
[0 0 0 1]  vc
S 
n
2100.8491 1990.7637 m
2040.1177 1990.7637 L
2040.1177 1965.7639 L
2100.8491 1965.7639 L
2100.8491 1990.7637 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2053.482452 1981.163895 m
0 0 32 0 0 (Rules,) ts
}
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
2040.147888 1969.163895 m
0 0 32 0 0 (Constraints) ts
}
true
[0 0 0 1]sts
Q
2151.4834 1999.1811 m
2239.4834 1999.1811 L
2239.4834 1957.3466 L
2151.4834 1957.3466 L
2151.4834 1999.1811 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2220.5083 1984.7637 m
2170.4586 1984.7637 L
2170.4586 1971.7639 L
2220.5083 1971.7639 L
2220.5083 1984.7637 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2170.458557 1975.163895 m
0 0 32 0 0 (Formulas) ts
}
true
[0 0 0 1]sts
Q
2086.4834 1937.1811 m
2174.4834 1937.1811 L
2174.4834 1895.3466 L
2086.4834 1895.3466 L
2086.4834 1937.1811 L
[0 0 0 0]  vc
false setoverprint
f 
[0 0 0 1]  vc
S 
n
2151.5122 1922.7637 m
2109.4547 1922.7637 L
2109.4547 1909.7639 L
2151.5122 1909.7639 L
2151.5122 1922.7637 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2109.454651 1913.163895 m
0 0 32 0 0 (Queries) ts
}
true
[0 0 0 1]sts
Q
1961 2176 m
2127 2139 L
1.0001 w
3.863693 M
[0 0 0 1]  vc
false setoverprint
S 
n
true eomode
1961.406 2175.9063 m
1961.0954 2174.5608 1959.7531 2173.7219 1958.4076 2174.0326 C
1957.062 2174.3432 1956.2233 2175.6856 1956.5339 2177.031 C
1956.8445 2178.3765 1958.1868 2179.2153 1959.5324 2178.9047 C
1960.8779 2178.5941 1961.7166 2177.2517 1961.406 2175.9063 C
f 
n
2129 2104 m
2129 2078 L
S 
n
2129 2078.4167 m
2131.5002 2078.4167 L
2129 2072.1664 L
2126.4998 2078.4167 L
2129 2078.4167 L
f 
n
1984.9503 2168.041 m
1972.6789 2168.041 L
1972.6789 2157.0411 L
1984.9503 2157.0411 L
1984.9503 2168.041 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
1972.701477 2160.041107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
2128.9503 2094.541 m
2116.6789 2094.541 L
2116.6789 2083.5411 L
2128.9503 2083.5411 L
2128.9503 2094.541 L
n
q
{
f0 [10 0 0 10 0 0] makesetfont
2116.701477 2086.541107 m
0 0 32 0 0 (0:*) ts
}
true
[0 0 0 1]sts
Q
false eomode
2058.1 2121.2638 m
2058.1 2131.122 2086.4773 2139.1135 2121.4834 2139.1135 C
2156.4896 2139.1135 2184.8669 2131.122 2184.8669 2121.2638 C
2184.8669 2111.4056 2156.4896 2103.4142 2121.4834 2103.4142 C
2086.4773 2103.4142 2058.1 2111.4056 2058.1 2121.2638 C
[0 0 0 0]  vc
false setoverprint
f 
1 w
3.863708 M
[0 0 0 1]  vc
S 
n
2166.8667 2127.7637 m
2076.1002 2127.7637 L
2076.1002 2114.7639 L
2166.8667 2114.7639 L
2166.8667 2127.7637 L
n
q
{
f0 [12 0 0 12 0 0] makesetfont
2076.100159 2118.163895 m
0 0 32 0 0 (are_specified_by) ts
}
true
[0 0 0 1]sts
Q
vmr
vmr
end
%%EndDocument
 @endspecial 1579 1428 a
 currentpoint grestore moveto
 1579 1428 a 1118 1428 a
 currentpoint currentpoint translate 1 1.56514 div 1 1.56514 div scale
neg exch neg exch translate
 1118
1428 a 1180 1519 a Ff(Figure)i(6.)f(Pr)o(oduct)i(descriptions)1037
1616 y Fi(All)e(product)h(descriptions)f(can)i(be)f(de\002ned)h(using)f
(the)g(query)987 1666 y(language)17 b(of)f(our)h(database)h(system)f
(OMS)g(together)f(with)g(the)987 1716 y Fj(Pr)n(oduct)10
b(Data)f(Description)h(Language)e Fi(\(PDDL\))i(which)g(we)h(are)987
1766 y(currently)f(de)o(v)o(eloping.)16 b(This)c(makes)g(it)f(possible)
f(to)h(create)i(v)o(ery)987 1816 y(small)h(yet)f(e)o(xpressi)o(v)o(e)i
(product)e(descriptions,)g(and)h(since)g(prod-)987 1865
y(ucts)20 b(are)g(related)g(to)f(these)h(descriptions)f(by)g(the)h
(association)987 1915 y Fe(are)p 1064 1915 13 2 v 15
w(specified)p 1304 1915 V 14 w(by)p Fi(,)9 b(e)o(v)o(ery)g(product)f
(\223kno)o(ws\224)h(e)o(xactly)g(ho)o(w)987 1965 y(to)h(con\002gure)g
(itself.)1037 2015 y(The)h Fj(Pr)n(oduct)g(Descriptions)p
Fi(,)f(respecti)o(v)o(ely)h(their)f Fj(PDDL)h Fi(rep-)987
2065 y(resentations,)j(are)g(interpreted)f(and)g(e)o(v)o(aluated)h(at)f
(run-time,)h(for)987 2115 y(e)o(xample)c(during)d(the)i
(con\002guration)e(process)j(of)e(a)i(product.)h(This)987
2164 y(contrasts,)h(for)f(e)o(xample,)j(with)c(the)i(language)f
Fj(EXPRESS)j Fi(which)987 2214 y(is)9 b(part)h(of)f(the)g(ISO)h(10303)e
(standard)i Fj(STEP)g Fi(\(International)e(Stan-)987
2264 y(dard)14 b(for)f(the)h(computer)o(-interpretable)f
(representation)g(and)h(e)o(x-)987 2314 y(change)f(of)g(product)f
(data\))g(and)h(which)g(is)f(a)i(language)e(for)h(spec-)987
2364 y(ifying)f(product)h(data)h(in)g(a)g(more)g(static)g(way)g(and)g
(is)g(not)f(meant)987 2413 y(to)18 b(be)i(an)f(entire)f(programming)h
(language.)39 b(Constructs)17 b(like)987 2463 y
(\223if..then..else\224,)k(\223while...do\224,)e(and)e(the)g(use)g(of)g
(v)o(ariables)g(are)987 2513 y(also)12 b(pro)o(vided)f(by)g
Fj(PDDL)p Fi(.)i(Since)f(we)g(did)f(not)g(want)g(to)h(de\002ne)g(a)987
2563 y(whole)e(ne)o(w)h(programming)f(language,)h(we)g(ha)o(v)o(e)g
(taken)g Fj(Ober)n(on-)987 2613 y(0)f Fi([10])g(as)h(a)g(basis)f(and)h
(e)o(xtended)g(it)e(with)h(the)g(constructs)g(needed)987
2662 y(for)g(describing)f(product)g(data.)p eop
%%Page: 5 5
5 4 bop -91 42 a Fk(4.)13 b(Inter)o(net)f(OMS)-41 160
y Fi(A)h(\002rst)f(prototype)f(of)i(our)f(product)g(information)f
(system)j(for)-91 210 y(v)o(erifying)8 b(our)h(product)f(data)i(model)f
(has)h(been)g(implemented)f(us-)-91 260 y(ing)f(the)i(object-oriented)d
(database)k(system)f(OMS)f([6])g(which)g(has)-91 309
y(been)15 b(de)o(v)o(eloped)g(in)f(our)g(research)i(group.)25
b(OMS)14 b(can)i(be)e(con-)-91 359 y(sidered)f(as)h(a)g(system)g
(supporting)d(an)j(instantiation)d(of)i(the)g(OM)-91
409 y(generic)d(data)g(model)g(presented)g(in)f(section)g(3.1.)k(An)d
(Internet)f(in-)-91 459 y(terface)i(to)f(OMS,)h(together)e(with)h(an)h
(agent-based)g(client/serv)o(er)o(-)-91 509 y(architecture)d
(consisting)f(of)h(se)o(v)o(eral)i(Ja)o(v)o(a)f(applets,)g(has)g(also)g
(been)-91 558 y(de)o(v)o(eloped)19 b([3],)j(thereby)d(making)g(it)g
(possible)g(to)g(access)i(the)-91 608 y(database)11 b(using)e(a)i(Ja)o
(v)o(a)h(capable)f(WWW)g(bro)o(wser)n(.)-41 662 y(The)j(follo)o(wing)d
(e)o(xample)k(illustrates)d(query)i(interaction)e(be-)-91
711 y(tween)h(a)h(user)g(and)g(the)f(system.)23 b(It)13
b(refers)h(to)f(our)g(product)f(data)-91 761 y(model)e(as)h(well)f(as)h
(to)e(the)i(e)o(xample)g(described)f(in)g(section)g(3.2.)-41
814 y(Suppose,)g(we)i(want)e(to)g(\002nd)g(all)g(the)g(kitchen)g
(chairs)h(a)o(v)o(ailable)-91 864 y(in)e(the)h(colour)g(blue.)i(First)e
(we)g(ha)o(v)o(e)i(to)d(formulate)h(a)g(query)g(using)-91
914 y(the)g(OMS)g(query)g(language)g Fj(A)n(QL)p Fi(:)-91
1053 y Fc(//)23 b(selection)j(of)d(all)h(products)i(which)e(are)g
(member)-91 1098 y(//)f(of)g(the)h(product)h(group)g('Kitchen)h(Chair')
-91 1144 y(\(domain)f(\()-46 1190 y(product_me)q(mb)q(er_)q(of)q(_g)q
(rou)q(p)-2 1235 y(range_re)q(st)q(ric)q(ti)q(on)43 1281
y(select)g(group)g(in)e(ProductGr)q(ou)q(ps)43 1327 y(having)i
(\(group@n)q(ame)q(\))h(=)c("Kitchen)k(Chair"\)\))-91
1372 y(//)d(intersect)q(io)q(n)i(with)g(the...)-91 1418
y(intersect)-91 1464 y(//)e(selection)j(of)d(all)h(products)i(that)e
(are)g(related)-91 1509 y(//)f(to)g(the)h(value)g(object)h('blue')-91
1555 y(\(domain)g(\()-46 1601 y(product_sp)q(ec)q(_by)q(_v)q(al)q(ueE)q
(nt)q(ity)-2 1646 y(range_re)q(st)q(ric)q(ti)q(on)43
1692 y(select)g(colour)g(in)e(ValueEnt)q(it)q(ies)43
1738 y(having)i(\(colour@)q(val)q(ue)q(\))g(=)e("blue"\)\))-91
1831 y Fi(This)14 b(query)g(can)h(be)g(entered)g(interacti)o(v)o(ely)e
(in)h(a)h(special)g(query)-91 1881 y(windo)o(w)7 b(either)h(of)g(the)h
(WWW)g(bro)o(wser)f(or)g(of)h(the)f(OMS)g(system.)-91
1931 y(The)k(system)f(then)g(presents)g(the)g(matching)g(products)f(as)
i(a)g(list)e(in)-91 1981 y(a)h(ne)o(w)g(windo)o(w)m(.)i(Note)d(that)g
(all)g(windo)o(ws)g(sho)o(wing)f(information)-91 2030
y(about)j(product)f(data)i(are)h(created)g(dynamically)e(by)g(the)g
(system.)-91 2080 y(Double-clicking)c(on)j(one)f(of)h(the)f(matching)g
(products)g(in)g(the)g(list)-91 2130 y(opens)k(a)h(ne)o(w)g(windo)o(w)e
(sho)o(wing)g(the)h(selected)h(product)f(object)-91 2180
y(\(\002gure)c(7\).)92 2535 y
 currentpoint currentpoint translate 1.01508 1.01508 scale neg exch
neg exch translate
 92 2535 a 92 2535 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 92
2535 a @beginspecial 0 @llx 0 @lly 418 @urx 220 @ury
1463 @rwi @clip @setspecial
%%BeginDocument: figs/kitchenChair2.eps
/languagelevel where {pop languagelevel 2 lt} {true} ifelse {
 (JPEG picture requires Postscript level 2
) dup print flush
 /Helvetica findfont 20 scalefont setfont 100 100 moveto show showpage stop
} if
save
/RawData currentfile /ASCIIHexDecode filter def
/Data RawData << >> /DCTDecode filter def
418.00 220.00 scale
/DeviceRGB setcolorspace
{ << /ImageType 1
     /Width 418
     /Height 220
     /ImageMatrix [ 418 0 0 -220 0 220 ]
     /DataSource Data
     /BitsPerComponent 8
     /Decode [0 1 0 1 0 1]
 >> image
 Data closefile
 RawData flushfile
 showpage
 restore
} exec
FFD8FFE000104A46494600010101004800480000FFFE000C4170706C654D61
726B0DFFDB00840007050506050507060606080707080A110B0A09090A140F
0F0C1118151919171517171A1D25201A1C231C1717212C212327282A2A2A19
1F2E312D293125292A28010708080A090A130B0B13281B171B282828282828
28282828282828282828282828282828282828282828282828282828282828
28282828282828282828282828FFC401A20000010501010101010100000000
000000000102030405060708090A0B01000301010101010101010100000000
00000102030405060708090A0B100002010303020403050504040000017D01
020300041105122131410613516107227114328191A1082342B1C11552D1F0
2433627282090A161718191A25262728292A3435363738393A434445464748
494A535455565758595A636465666768696A737475767778797A8384858687
88898A92939495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2
C3C4C5C6C7C8C9CAD2D3D4D5D6D7D8D9DAE1E2E3E4E5E6E7E8E9EAF1F2F3F4
F5F6F7F8F9FA11000201020404030407050404000102770001020311040521
31061241510761711322328108144291A1B1C109233352F0156272D10A1624
34E125F11718191A262728292A35363738393A434445464748494A53545556
5758595A636465666768696A737475767778797A82838485868788898A9293
9495969798999AA2A3A4A5A6A7A8A9AAB2B3B4B5B6B7B8B9BAC2C3C4C5C6C7
C8C9CAD2D3D4D5D6D7D8D9DAE2E3E4E5E6E7E8E9EAF2F3F4F5F6F7F8F9FAFF
C000110800DC01A203012200021101031101FFDA000C03010002110311003F
00EEFC6BE36B3F0358DBDE5E5B192090C50AAC16D13BEE68B764EEC71F29EF
DEB8AFF8686F0F7FD03AFBFF00006DBFF8AA3F684FF9162C3FEBEEDFFF0049
DEBC4F4A9ACAF2DDECEEED90385F9668E3F988EDC819CE718F5E9D7AFAF4E8
518E13EB138396BAD9EA977B753AB058658BAFEC3DA2836B4BECDF6BF4F53D
B3FE1A1BC3DFF40EBEFF00C01B6FFE2A8FF8686F0F7FD03AFBFF00006DBFF8
AAF06BEB27D34089E33BA419F3180E9E83AE0F4CFE438E5BBBF02FC3ED135B
F0C278875BBC922824D6E3D31B1A8DBD8A5B47E5879262F32B09080C311AE0
FCA4E4F6F42383C04A92AD1BB8BD9A7B9CD88A55B0F51D2A8AD25BAEC77DFF
000D0DE1EFFA075F7FE00DB7FF001547FC343787BFE81D7DFF008036DFFC55
725A47C2FF000CDFE9979ACFF69EA779A5F87AE6F61D6E7B48B26E9533F679
2CF6A3A10C3697DEFF00283924290C6B699F0C34DD4BC2D717AC9A9D95EC3E
1E935A59EEAEAD944C51FEEA5A0CCDE5328216666009E76E0804FA9E03CFB7
F5F9FA330E691DB7FC343787BFE81D7DFF008036DFFC551FF0D0DE1EFF00A0
75F7FE00DB7FF155CB7887E18F863C3BFF000986F6D5AEBFE1149ACDA4C5DC
49F6C8AEB3B147EE4F94C9B932C7787DAD854DC36E8EA1F063C31A2DEB5BDE
EA1AB5C6FF00155BE890080C4998A7823954B12A70C9E61CB00436CC6D5DDB
967EAB97F67AFF00C07F935F7FA8734CD8FF008686F0F7FD03AFBFF006DBFF
008AA3FE1A1BC3DFF40EBEFF00C01B6FFE2AAA4FF0A748B9D1345D3E631ABE
916DAFCF7573008AD25D40DADD2C518799F2B18F987CCFB828C8F719DE17F0
9786F4CF116B696579A66A300F064BA929BD306A31E99740A065768D192431
904E553255B1B4F79586C0B8B693D2FD7B3B05E46E7FC343787BFE81D7DFF8
036DFF00C551FF000D0DE1EFFA075F7FE00DB7FF001558E9A0FC3CF1578327
D5F53D4BCBD43C390C6DAA5F787F4F16F05D096E1FCB896268A3CC9B17607D
8A01752C5C29033B51F85DE18F26EA2D36EB56F3BFE1157F13DB5D5CC916DF
2BCC2520785533BBCBC02E24C6EC90B8F96A9613057B4A324D3B75FEBB3EFE
41CD23A9FF008686F0F7FD03AFBFF006DBFF008AA3FE1A1BC3DFF40EBEFF00
C01B6FFE2AA0B4F861E18D3D7C5BE16227BBBAB5BCD0AD26BE9A28BCC4FB44
D1F9925BB6098F709197610D8080967DD85C6D0FE0C68BAD5ECB6BFDA17F0F
97E30BAD137651B36D0C124D9C6D1FBC6F2F6EEFBA339DA718A9587CBECDB4
ECBF2B27FA85E6741FF0D0DE1EFF00A075F7FE00DB7FF1547FC343787BFE81
D7DFF8036DFF00C5571BF0AACBC17AC7C47F0F5B41A5DFDC47710DC8B9B1D5
5A0B8852558DD95B7041E6A941F74A2156C1DCC062BCFF0046D2E0F10F89EC
349B6692CE0D46FE3B689A52267856490282C4050E403CE02E71DABA165D84
72945C5AB2BEFEBFE42E791EE5FF000D0DE1EFFA075F7FE00DB7FF001547FC
343787BFE81D7DFF008036DFFC55703E22F10E91A378F75CD3EDF43D334ED3
6D5CE99049FD9715F4B6A903152EB1C8C8923C8CBF33CBB9C0620371CF7971
63E10D27C7F7FE1A4D3B45D33549BC4F66DE4DDD91BC86E2C248949821DD13
889D9DCB11840BBC2872AA318CB05868A4F91EAAFBFA7F9F9FEA3E69771DFF
000D0DE1EFFA075F7FE00DB7FF001547FC343787BFE81D7DFF008036DFFC55
3751F04D9D8DAE97A5F8634AF0ECB79A85FEBB11D3F57B77964BF5826748D2
39F69688A469C1F362F9B07249635E6DA669D65AFF00C29D72E5ECE08350F0
C5E5BCD1DEC712892E20B9631985F6819DAE378762C40F946D14E9E0F0735C
CA2ED7B6FDDB5F9AFEACC1CA48F4BFF8686F0F7FD03AFBFF00006DBFF8AA3F
E1A1BC3DFF0040EBEFFC01B6FF00E2ABE78A2BB3FB1F0BD9FDE4FB491F43FF
00C343787BFE81D7DFF8036DFF00C551FF000D0DE1EFFA075F7FE00DB7FF00
155F3C5147F63E17B3FBC3DA48FA1FFE1A1BC3DFF40EBEFF00C01B6FFE2A8F
F8686F0F7FD03AFBFF00006DBFF8AAF9E28A3FB1F0BD9FDE1ED247D0FF00F0
D0DE1EFF00A075F7FE00DB7FF1547FC343787BFE81D7DFF8036DFF00C557CF
1451FD8F85ECFEF0F6923E87FF008686F0F7FD03AFBFF006DBFF008AA3FE1A
1BC3DFF40EBEFF00C01B6FFE2ABE78A28FEC7C2F67F787B491F43FFC343787
BFE81D7DFF008036DFFC551FF0D0DE1EFF00A075F7FE00DB7FF155F3C5147F
63E17B3FBC3DA48FA1FF00E1A1BC3DFF0040EBEFFC01B6FF00E2A8FF008686
F0F7FD03AFBFF006DBFF008AAF9E28A3FB1F0BD9FDE1ED247D0FFF000D0DE1
EFFA075F7FE00DB7FF001547FC343787BFE81D7DFF008036DFFC557CF1451F
D8F85ECFEF0F6923E87FF8686F0F7FD03AFBFF00006DBFF8AA3FE1A1BC3DFF
0040EBEFFC01B6FF00E2ABE78A28FEC7C2F67F787B491F43FF00C343787BFE
81D7DFF8036DFF00C551FF000D0DE1EFFA075F7FE00DB7FF00155F3C5147F6
3E17B3FBC3DA48FA1FFE1A1BC3DFF40EBEFF00C01B6FFE2A8FF8686F0F7FD0
3AFBFF00006DBFF8AAF9E28A3FB1F0BD9FDE1ED247D0FF00F0D0DE1EFF00A0
75F7FE00DB7FF1547FC343787BFE81D7DFF8036DFF00C557CF1451FD8F85EC
FEF0F6923E87FF008686F0F7FD03AFBFF006DBFF008AADEB7F8997B796F15C
DB7817C513C1320922962D01191D48C865238208E4115F2D57D75E1DFF0091
63C3FF00F607B2FF00D278EBCDCC30987C246328C6F7F32E127233FF00E161
EA7FF44FFC59FF0084F2D456DF132F2F2DE2BAB5F02F8A27B79904914B1680
8C9229190CA470410410456D6ABFF20BBDFF00AF793FF4135C5BE932EBD67E
06D346B3AAE970FF00C23293B36997461676586CD5437041003B76EF5E47B4
A3FF003EFF00166967DCDFFF008587A9FF00D13FF167FE13CB54B4BF8BA35D
B76BAD27C23E21D46DD5FCB696D3458A540D807692A48CE0838F7159D1E812
F86F587806BFADEA90DDE8D7AED1EA77A66556468029518001C3B73557E07C
6D2FC379E3499E067D52E15658C2964260B7F986E046475E411EA0D6B17465
094B936B7562D6FB9D47FC2C3D4FFE89FF008B3FF09E5A7685F1261D775CB9
D0BFB22F74DD42D61F3A58751D3A1859572B805792090EA4647439AE57C39E
2ED5F5CD6ECF469F54B68ADED9A465D4E08481AE88CE0AC3BD36285EB26C2C
491F210B9233BC1FFF0025A3C53FF5ECFF00FA1414A3ECAA29250B349BDC35
47877889DA4F106AAEEC599AF262589C92779E6B36B47C41FF0021ED4FFEBF
25FF00D0CD67571147D67F173C23AE78D347B4D3B40B2FB6DD452C13BC7E6A
47841015272EC07565E339E6BC98FC08F8966258878682A83938BEB6F98FA9
FDE7E1FF00EB39FA874EFF008FDB8FFB07AFFE8094DAF470F98D5A14D538A4
D277D6FF00E62B6F67B9F36CBF077E295C598B59FC3114CA070EF7B6FBC1EC
73E6F5FF0026AEE83F0E7E34786ADFECDA668F1A402E52ED229E5B0B848E74
042CA8256608E01C6E5C1E073C0C7D0B453A7983A51708538A4DDED676BFA5
CDB115EB6264A55A6E4D2B26F7B7A9E076BE09F8EB6771A55CC567219F487B
992CE596EACA4746B824CCCC598972C4924BE7AF18A2D3C11F1C6CADED6DE2
D32364B5B66B38CCCFA7CAED6E430303B392D245F39C46E4A8C2E00DAB8F7C
A2B4FED4A8FF00E5DC7EEFF83E6FEF39B91773E7FD4BC03F1BF57FEDAFB769
BE77F6EF91FDA3FBFB15F3FC8C795D186DDB81F7719EF9AEADB4AF8C4FE179
637D2276F134DAF26A525D996C0C0F125BAC480A6FDA595A34600A60145607
7006BD568A9966539593A71D3CBFE0F92FB90F93CCF0387C13F1D604B58C59
C9225AA5D46AB3DD594A245B96DD3ACA1D8F9C1DB9224DDC80474A8E4F00FC
6F92EEEEEDB4DC4977A69D2A4559EC5635B4200F251036D8D781F702E0E4F5
273F405157FDAB53FE7DC7EEFF00822E45DCF9B6CBE117C5CD3F49D4F47B5D
13CBB0D57CAFB643F6BB33E6F94DB9392F95C31CF0467BE6B4BFE101F8DFFD
93FD93FD9BFE8DF63FB06FF3EC7CFF00B36EDDE479FBBCDF2F3FC1BB6E38C6
38AFA028A6F37AAF5708F7D9EFF787B35DCF07B8F097C7CBAB49ED2586731D
C7906565BCB3591DE02A6290B87DDE60D899933BD822862428C4B2F867E3F4
AF0B9B7910C17FFDA3179571631849CA95660158001833EE5FBAC5DCB02598
9F73A2A3FB4E7FF3EE1F77FC10E4F33E7F7F00FC6F3A86977F1E9BF659B48D
DF605B39EC6DE2B7DCC59F6C51B2A7CC49DDF2FCC386C8E2B347C22F8B8BAD
C3AE0D131A85BCD1CD0CA2EECF6C6D1E3CB0A9BF6855DAA0201B405000C0C5
7D25455ACDEAADA11FB9FF00987B35DCF14F10780BE24B788B56D57C2FE199
2CACF5E449751D36FA7B1B984CF90EE36C923AC80480BAB9552379015475A5
0F847E3C43777376D65F699AE6F12FDCDDCB6170AB70A30B2C6B23308D82E1
4140B8014745007BC5150B33A8959C22FD53FF0031F22EE781D9F827E3AD85
B8861B3918A3CF2457135D594B71034E31334533B19232FC925187249EA49A
921F859E3DD37E1FDCF8734EF0B4E350D5EF126D56E64BCB4119822E618507
9CD9F9C972F8420FCBF30E6BDE28A6F35ABFC91DEFB3E9F3EFAFA8B911F2E7
FC283F895FF42DFF00E4F5B7FF001CA3FE141FC4AFFA16FF00F27ADBFF008E
57D47456BFDB788FE58FDCFF00CC5ECD1F2E7FC283F895FF0042DFFE4F5B7F
F1CA3FE141FC4AFF00A16FFF0027ADBFF8E57D47451FDB788FE58FDCFF00CC
3D9A3E5CFF008507F12BFE85BFFC9EB6FF00E3947FC283F895FF0042DFFE4F
5B7FF1CAFA8E8A3FB6F11FCB1FB9FF00987B347CB9FF000A0FE257FD0B7FF9
3D6DFF00C728FF008507F12BFE85BFFC9EB6FF00E395F51D147F6DE23F963F
73FF0030F668F973FE141FC4AFFA16FF00F27ADBFF008E51FF000A0FE257FD
0B7FF93D6DFF00C72BEA3A28FEDBC47F2C7EE7FE61ECD1F2E7FC283F895FF4
2DFF00E4F5B7FF001CA3FE141FC4AFFA16FF00F27ADBFF008E57D47451FDB7
88FE58FDCFFCC3D9A3E5CFF8507F12BFE85BFF00C9EB6FFE3947FC283F895F
F42DFF00E4F5B7FF001CAFA8E8A3FB6F11FCB1FB9FF987B347CB9FF0A0FE25
7FD0B7FF0093D6DFFC728FF8507F12BFE85BFF00C9EB6FFE395F51D147F6DE
23F963F73FF30F668F973FE141FC4AFF00A16FFF0027ADBFF8E51FF0A0FE25
7FD0B7FF0093D6DFFC72BEA3A28FEDBC47F2C7EE7FE61ECD1F2E7FC283F895
FF0042DFFE4F5B7FF1CA3FE141FC4AFF00A16FFF0027ADBFF8E57D47451FDB
788FE58FDCFF00CC3D9A3E5CFF008507F12BFE85BFFC9EB6FF00E3947FC283
F895FF0042DFFE4F5B7FF1CAFA8E8A3FB6F11FCB1FB9FF00987B347CB9FF00
0A0FE257FD0B7FF93D6DFF00C728FF008507F12BFE85BFFC9EB6FF00E395F5
1D147F6DE23F963F73FF0030F668F973FE141FC4AFFA16FF00F27ADBFF008E
577FAA784BE21EB7A1E9BA1EA7F0D2DAF2CF4F82DE38C3EB7121668A1116FC
A48BD46E38ED9EF8CD7B2515CB89CC2A62525522B4F5FF00329414763C7347
F0AFC45F0FE9771A5E93F0D2D6D2D2E199E451ADC6E773285272F213D00F6E
2964F0CFC4C9ACF48B793E1F61F4AB08ECA29A1F11AC0ECAB1C68C498A55E1
8C4AD839C6075EB5EC54571F3C7F957E3FE651E390785FE265BCB24C9F0FD9
E67B77B6F32E3C4BF68288FB4B05124CC064AAF2076150784BC21F13FC29E1
87F0F8F00DB6A10CD712CD335C6A76DB5D5E38D0A14DC41188CE7279DD8C71
CFB55154AB5A2E2A2ACFD7FCC2C7953E9BF13A486D607F861A5B4366C8F6D1
B6A36C560641842837614A8E8474ED54BC23E0EF17695E3DD4FC45E24D163D
2A3D4AD9D5116F619BE7DD16400AC5B1F2939C60640CF233EC55CDEA3FF233
AFFD787FED4342ABCA9F2C56AADD7FCC2C7C77E20FF90F6A7FF5F92FFE866B
3AB47C41FF0021ED4FFEBF25FF00D0CD6756033EFBD3BFE3F6E3FEC1EBFF00
A02573DE3CFF00911FC4BFF609BAFF00D12D5D0E9DFF001FB71FF60F5FFD01
2B9EF1CDC69D6FE0FD67FB56FBFB3ECA7B47B696EBC9697CAF347961B62F2D
CB8E07E9D6803CA7E1BE83E0DBD9BC3ADFF080F88ADF5358A1B8FED79E2996
D0CC881FCC0DE6EDDACCB95F970720639A2EEE62B8F27CAB282D3CBF8A4B1B
792D21F3587591B7B37CC7BEDC2F1C015D3E83F173E1E689A1E9BA57FC24DE
7FD86D22B6F37EC170BBF6205DD8D8719C671935A1FF000AC3FEA2FF00F335
FF00C249FF001EDFF903EFFF00E3FF00F8ED006278EFE2F5C681E25B9D074E
B8D1EC1EC510DC4DAC457320999D438110815B01548C96C64B600E327BEF07
789A1F18F86AC35E82DDED92ED189864209465628C323A8DCA7078C8C1C0E9
581E23F8777DA86B779AD7877C5175E1CBBD4ADC5BEA3E5C3E72DC050151C0
2C3CB75518DCBC8EDB4962DD7695A72E93A75BD8A5CDD5D08136F9F793B4D3
487A96676E4927F01D000000002E57CCF7567E18927F1D5CEB3E0DD7B58BC8
F58D40C7A8E9EAE20B7507203B86DAA54E58928D8041208E2BE98AF9DCF897
44B49F5B1A37C5E7D2ECF57BE9EF24823F0ECACC8D29E71211B810303208E9
9183401D7DAF8D7C45A0FC34F066A113DAF88754D52FA1B37DF367CD593CC2
A9E6701650155199B3860D9DDC9AD3BEF1578DE3D4B4CF0A5958E892F89A4B
47BFBFB976945843009191360CF985890A0FA13D0824AD3F0FE9FE0FF18689
A1E8BE0FD69CDA785753B6D424F32DA42D210646C12E139762E723207F740C
0AE8FC55E07B8D6B58B3F10689AECFA06B76D11B66BA4844E9340727CB7898
853863907F304852A0181A77C4FD52E23D065BED320B4DFADBF87F58807CEE
977B4796D090DB7CBDDF7B7124741BB1B8C0BF162F2F74BD4BFB39B4BB8D4D
BC4C345D2F04B4063761E54D36D7DDB59564C32F048181C1ADF83E18E9D0F8
1750F0A49773DD49A96F9AEEFEE1999E5BA6C1F3C8DDD9950EDCF3B7049249
35FC3FF09B4BD03C45A46B913C064D33495B111C36BE4F9B380435CB156E59
959948607AE7390280313C69F13BC43A2F8BEF741D3C683A7A5BDBA4B6EDAD
9993EDC4A17263906D8D402367CEC06E1F7B92167F1DFC56BDF0C4FA5E96B0
E9DA46A9736297B74DAAF9D3C10EE257C9536EA599F706F9B0170BDF771A9E
2FF877ACF89AEB5216BE309ECB4CD4E248EE74DB9B24BB894A8C662DEC3CBE
CDF2F3B86ECF4C49A9FC356DFA2DE78735FBAD0F54D22C574E4BC312DC09ED
95701248C90A4E7E6CE319EDC29500C7D0FC68DF1260F0FD9C71BC6E9A9BCD
A8CB6BB441225988E40C8641BC23CD25A903687037024632785B3D3FC2B77A
E78B24D73C0BE22F10DC8F10DE05BAD2E095E244DFC2129228DC0E4F4E8C39
AF61F09F8197C3376F7D71AA5D6B17D258C56AF777CCD24D95791DCAB3312A
8C5D7E41C0F2C1258926B121F875E2AD32FB569B43F1E7F665B6A7A84D7ED6
DFD8F14DB5E4393F33B1270001DBA74A00D76D5DFC31E2CF0E78522B781344
BED3E486C426F69A296DD4121D99B1E5F95803AB16EBC73580BF13F547F04C
7E21834C82EAE75AD59EC341B65FDDF0CEC917DA37360366372769C1F94657
248DFF0018F813FE136F07C3A0EA5A8EEBD8BCA906A3E463F7C830D2796AC0
7CC0B8DB9C0DFEC2AC788FC0BA76BDE19B6D061967D3974FF2DF4DB8B791B7
DA4912ED8DC1CE5B038E4E4E7A8386001C8EA5E2AF1049A6F8C7C29E2BB1B2
8B538FC3D737F6F73A6331B79A031943C39DC1839239EB83C0C02D7FC29E25
BCD31BC03A1CD1C0DA76B3E1E4FB3BA29332DC430A3B6F24851198CF1804EE
F41562CFE19DC347AFDD6B7E229F58D6F58D3E4D356FDEDC4496D032E36A42
ADB7EF7CC7919C718258B58F117C36B7F117806C3C253DEEC92C22B7482FBC
A276BC4A10BF96186772EF1824E376792050061CBF166E6D7C05FF000965C5
BDAAA6A7A9C969A4EE570B0C5B9951EE402C72BE5C8CC23CE7E503192458F8
6BF1424F17EAB77A2DEC9A75DDDC56FF006B8EEB4A49D20D81823232CE15C3
82CA7232A4376239E8FC47E05D3B5EF0CDB6830CB3E9CBA7F96FA6DC5BC8DB
ED248976C6E0E72D81C727273D41C303C2BE16D5345BABCBFD6FC4F7BAFDED
CE15778F22DE140070902B140C48E5BF2C658B0074F5E73F156F2E2F6EBC37
E0E8AF7FB3ADFC4576F1DE5D09C464C1185DF0A92A7E6937803D480A7218D7
A3579CFC56D67C1AF6B1E83E21D767D1F515D97F61716F0CCCF6F229654941
4520E08618241F4C1C3000D0D0FE18E9DE13F1141AA7866EE7D2EC9A268AFF
004CDCD34577C1F2DB2EC4A32939CF3C703196DDCC7FC2D5F147F65FFC26DF
D8765FF0857DAFCAD9E61FED0F277797E77DED9FEB38DBD7B74FDE567F853C
49E15BDF1869FA96B5F10E7F136AE98B4D2A2FECA96D2285E53B58ED55DA59
B705C9C71D73852BBFFF000A6BFE611FF0935EFF00C21DF6BFB57F606CFC7C
BF3F76EF2F7F3B71EFF7BE7A00A17DFF00217F8D1FF609B7FF00D2292A4D47
E211F03F803C15041F658AF352D321115CDFAC8D6D02C70C658B8881762772
A80A3A9C9200C1EAA7F0279D79E34B9FED1DBFF094DA476DB7C8CFD97640D1
6ECEEF9F3BB38F97A63DEA0D53E1CFDB743F0E5AD9EB33E9DAC787228E3B1D
5218F38C22A38688B6195C20CA93ED92370600E534FF008D9737BA05D2DBD8
DAEA7AFADF41A7DAB596F8ECEE25B80E623FBEDAEA17CB60C0F52061806CAE
BEAFAB7C4283C25E2A8B55D3B4EB4BCB5B179AD755D3EE185BBA050640AA5B
CD595577956C052C0670002D726F85EFA8F876E2C357F13EA9A86AF25D8BE8
75532BA7D96752DE5B43106DA8A371CA8C67270461365BD33C097DF64D6A2F
11F8AB51D727D5EDDED5D87FA3C3044C9B4F97082503F7DD8FC396DC01CCE8
DA85ECD7FF00099B5982D6F350BBB1BC7179E64C648D7ECEA55812C033B215
DE5837CD9DB8EB51FF00C2D5F147F65FFC26DFD8765FF0857DAFCAD9E61FED
0F277797E77DED9FEB38DBD7B74FDE574FA5FC3EB8B29BC1B35D6B7F6C93C2
F15CC20FD9047F684913CB41C37C9B1428FE2DD8E704D63FFC29AFF9847FC2
4D7BFF000877DAFED5FD81B3F1F2FCFDDBBCBDFCEDC7BFDEF9E802C5D78ABC
6FA978CBC41E1DF0E58E89E4E93F667FB5EA2D28004916E2855092CC492410
000108392C2B1352F8C3ACC5E0CF0B6BB05969D64FAC3CE975777A93C96B6E
D1165DB88817CC854951CE0291CF2C3D0B48F0BFF6578A3C45AF7DAFCDFEDB
FB37EE3CADBE4F93194FBD93BB39CF418F7AE72CFE1AEAFA4786B42D2745F1
95D69B77A43CE7ED31DA8686E56566621E066C12B91B49271C9C64820037FC
0FACEAFAEE886EF598B4E138B89228EE34BB9135B5D46A70258C824819CAE0
9CE549206703A3AE63C07E0C4F03E8F3D80BCFB6CD737725DCF2AC09026F6C
0C246BC2280ABC0F7C60600E9E80381FF9AE3FF72A7FEDDD58F8957315BFFC
225E6D94177E6789ACE35F39A41E531DF8917632FCC3B6ECAF3C835C87C40D
6F46D3FC7CF7F07C41FF00846B57B5D3D2C2787FB15EF3285BCE1F311B79DC
9D3A63AF515A1E1E16FF0011AC6CE15F1CFF006FDCE83ADDB6A925CFF641B5
F914304876FCA3921CEFE71E9D280239BC7BE3DBC83C557DA569FA0A69FE1C
BEBC85E7BC336E9D21190AA8ADF7C28C924856DEA0018358FADFC48B1F0FF8
D6C7C5B7B6AE0DFF0082E17B7B38DB7179649F7AC7BF18000CE588E8A7009C
29F42B3F027D9343F16695FDA3BFFE123BBBCB9F37C8C7D9FED08176E377CF
B719CE467DAAA5A7C2EB15D46C2EB50B84BF82D3C38BA0981A0D858721A557
0D942C8CCB81C80C7E6A00C0F117C45F16F867C39E1EBEBF4D063B8D61DDE5
BD11DC4963689B03471931172EEF924329DBF29001037D76DE07D6757D7744
377ACC5A709C5C4914771A5DC89ADAEA353812C641240CE5704E72A4903381
816BF0EFC45A7E81A369B63E3ABAB5BBD1DE458AE52D3747342E388E589E46
0E53A21CE15780B9C1ADBF01F8313C0FA3CF602F3EDB35CDDC9773CAB02409
BDB03091AF08A02AF03DF18180003A7AF2AF12785746F17FC628EC35CB3FB6
5B47E19132C7E6BC787174541CA107A31FCEBD56BC6BE206B7A369FE3E7BF8
3E20FF00C235ABDAE9E9613C3FD8AF79942DE70F988DBCEE4E9D31D7A8A000
DD3F85750F1D78345C7F6AE8F0F87A5D46CADAE6EDE5366823D8D6CD8C3852
1970A1FE540A41CB9345FF00C46D5BC3B63E0DD2F4D8744D22DAFF0044B799
6EF561726DB7908A21464C95D8304B3B1E18648EAD2785AFFC0FAC45ADE81A
778B6EB56F11F8AADE48AEAFAE6D6605D842E32A85551114172A99E07CBB88
0B8E8EFF00E1DEB2F63A55A695E309F4F8ED3494D2EE6096C92E6DAE91401B
FC976DAAC79049DD91819001C8067DF78F3C6291F832D6D346D2CEABE218AE
7CD89EE77C286355292A488C418F0DE6151B895F941CF3581E37F156A9AD7C
39F1AE89AFD8C169ADE892DA25CB5A36EB799249D1A274C92C32A3907D8F04
9559358F043687ABFC33F0B69BACDD5ACF6C9A9345A8C6ABBD65F2D65DDB3A
142F9050F54254939CD74737C25FB5785F5ED32F35E9EEF58D7E58A5BED5A6
873BBCB90322AC4180550015001EFE81540058F883E2FF0010786EFA08F4F9
3C3BA7D81B479DEF75CB961E6BA9198A28A33E63305C1E15B3B80E0F0D4FC2
DF12F52D58F856F354B3B5B4D2FC416F2DBACB16EFDDDFC723285666215524
553B17E662DC64E335AFE22F00CFAC78B74EF1469DAE3E95796B6FF6593167
15C168B7963E5990111B90CE3761B838C6321B89F157858F867E1E695E0882
FDF52F10FDBBED1E1F36B6F2412798B2AB3B121D954A2CB21DCC540041C657
3401E85E04F12DE78B34BBCD5678E05B27D4278F4C96152BE7DAA36D491831
243121C1C85E9D053F51FF00919D7FEBC3FF006A1AD4D0B45B3F0EE8F65A45
826CB6B389624C800B63AB36000598E4938E4927BD65EA3FF233AFFD787FED
43401F1DF883FE43DA9FFD7E4BFF00A19ACEAD1F107FC87B53FF00AFC97FF4
3359D401F7B41750594D7771732AC51269CA59D8F03E48C0FC49E31DEB27FE
12DD13FE7F7FF213FF00F135A0BFF1FA3FEBDA2FFD012ACD00637FC25BA27F
CFEFFE427FFE268FF84B744FF9FDFF00C84FFF00C4D6CD14018DFF00096E89
FF003FBFF909FF00F89A3FE12DD13FE7F7FF00213FFF00135B34500637FC25
BA27FCFEFF00E427FF00E268FF0084B744FF009FDFFC84FF00FC4D6CD14018
DFF096E89FF3FBFF00909FFF0089A3FE12DD13FE7F7FF213FF00F135B34500
637FC25BA27FCFEFFE427FFE268FF84B744FF9FDFF00C84FFF00C4D6CD1401
8DFF00096E89FF003FBFF909FF00F89A3FE12DD13FE7F7FF00213FFF00135B
34500637FC25BA27FCFEFF00E427FF00E268FF0084B744FF009FDFFC84FF00
FC4D6CD14018DFF096E89FF3FBFF00909FFF0089A3FE12DD13FE7F7FF213FF
00F135B34500637FC25BA27FCFEFFE427FFE268FF84B744FF9FDFF00C84FFF
00C4D6CD14018DFF00096E89FF003FBFF909FF00F89A3FE12DD13FE7F7FF00
213FFF00135B34500637FC25BA27FCFEFF00E427FF00E268FF0084B744FF00
9FDFFC84FF00FC4D6CD14018DFF096E89FF3FBFF00909FFF0089A3FE12DD13
FE7F7FF213FF00F1354A09F51BDB9B91FDB89663EDD25AC113411B172A0B61
73824ED0C71C9C29352ECBFF003BC8FF0084AA0F37CDF23CBFB3C5BBCCD9E6
6CC67EF6CF9F1D76F3D2802C7FC25BA27FCFEFFE427FFE268FF84B744FF9FD
FF00C84FFF00C4D4705A6AB75045716FE2549A09903C72C76B1B2BA9190C08
38208E7340B4D55A77B75F12A19E34577885AC7B9558B05623390095600F7D
A7D0D0049FF096E89FF3FBFF00909FFF0089A3FE12DD13FE7F7FF213FF00F1
347F666B7FF41FFF00C924FF001A3FB335BFFA0FFF00E4927F8D001FF096E8
9FF3FBFF00909FFF0089A3FE12DD13FE7F7FF213FF00F1355EF92FF4CB592F
2FFC55059DB478DF3DC5BC51A2E48032C48032481F8D476B25CDEC16D716BE
2FB5B882EDCA5BCB1430BACCC0312A841C31011C903FBA7D0D005CFF0084B7
44FF009FDFFC84FF00FC4D1FF096E89FF3FBFF00909FFF0089A3FB335BFF00
A0FF00FE4927F8D462D35569DEDD7C4A8678D15DE216B1EE5562C1588CE402
55803DF69F4340127FC25BA27FCFEFFE427FFE268FF84B744FF9FDFF00C84F
FF00C4D1FD99ADFF00D07FFF002493FC6ABDF25FE996B25E5FF8AA0B3B68F1
BE7B8B78A345C90065890064903F1A00B1FF00096E89FF003FBFF909FF00F8
9A3FE12DD13FE7F7FF00213FFF001351C169AADD4115C5BF8952682640F1CB
1DAC6CAEA4643020E08239CD49FD99ADFF00D07FFF002493FC6800FF0084B7
44FF009FDFFC84FF00FC4D1FF096E89FF3FBFF00909FFF0089A3FB335BFF00
A0FF00FE4927F8D1FD99ADFF00D07FFF002493FC6800FF0084B744FF009FDF
FC84FF00FC4D1FF096E89FF3FBFF00909FFF0089A3FB335BFF00A0FF00FE49
27F8D1FD99ADFF00D07FFF002493FC6800FF0084B744FF009FDFFC84FF00FC
4D1FF096E89FF3FBFF00909FFF0089A3FB335BFF00A0FF00FE4927F8D1FD99
ADFF00D07FFF002493FC6800FF0084B744FF009FDFFC84FF00FC4D1FF096E8
9FF3FBFF00909FFF0089A3FB335BFF00A0FF00FE4927F8D1FD99ADFF00D07F
FF002493FC6800FF0084B744FF009FDFFC84FF00FC4D1FF096E89FF3FBFF00
909FFF0089A3FB335BFF00A0FF00FE4927F8D1FD99ADFF00D07FFF002493FC
6800FF0084B744FF009FDFFC84FF00FC4D1FF096E89FF3FBFF00909FFF0089
A3FB335BFF00A0FF00FE4927F8D1FD99ADFF00D07FFF002493FC6800FF0084
B744FF009FDFFC84FF00FC4D65B6A36BA9F887CEB497CD8D6CB613B48E77E7
B81EA2B53FB335BFFA0FFF00E4927F8D5DBCB29EC6C6DD2E6F1AF2590091A4
31AA0E738000EC07D7BFD0007C47E20FF90F6A7FF5F92FFE866B3AB47C41FF
0021ED4FFEBF25FF00D0CD675007DE0BFF001FA3FEBDA2FF00D012BC323F05
68DAE687F12F5BD4E29EEAE74FD5B553668D70EB15BBAA6FDEA8A402CC76E7
39C84518E0E7DCD7FE3F47FD7B45FF00A02531348D36382EEDD34FB5482F5D
DEEA258542DC338C3B38C618B0E0939CF7A00F0BF114BA46B6FE10B4D6912F
F509BC2D14FE76B9AD1B4B0819946253B7F7924ACCA4300C3202FA165AFA06
9CBE29D3BE12E9DA95CDD3C13A6AD14A639D95DE24C8F2B7750851421031F2
12062BDE25D07479BEC3E6E956527F6763EC5BED90FD9718C797C7C98DABF7
71F747A532CFC33A169CF03D968BA75ABDBBBBC2D05A468636750AECA40E0B
280091D4000D007CF579E12D334DF0578DF5AB43750DDE85E2392DF4AD9752
05B20B3C2BBD003F7CA900B1C9F913182335A9F12CCBAA7C40D66D35A9F445
B2D3ED229B4F8F5F9AEE04F28C60CA6DFC82BE6317C839CB1DA02E76903DD1
F41D1E5B5BAB3934AB27B6BC94CF73035B2149E42412EEB8C33640393CF03D
28D5341D1F5BF2BFB574AB2D47C9CF95F6BB649766719DBB81C670338F4140
191F0E65BF9FC13A44BA9EA3FDA772D113F6CD922F9C9BDBCB6FDE2239F936
FCC57E6EB939C9D0F0FC3670FF0069FD8F5A9F56DFA84AF379D7427FB24871
BA05C7DC55E3087919F7AD7AAF69616761E77D8ED20B6FB44AD3CDE4C613CC
91BEF3B6072C70324F26802C51451400514514005145140051451400514514
00514514005145140051451401E77AAC17D75358C1A6DEA585E49E24BA58AE
A483CE11136573F36CC804E338C9C671904706F493C41FC3FA1C693E9928D4
2482FAD22BA903B2BDA5D36FF3410D22BBA9712FDE2CA49DB22B05EB342D31
6D63BD6BAB9589AE2F25991021621490067DCE33F88EFC0D5FB3D9FF00CFF7
FE413401E45A15DE991F85BC1315F6B2F67A13E8EED35C8D524B75FB5AF901
6333ABA9046EB8022DD8F908DBFBB1B6C6BC2649FC43AB41A96A2B3E9DE16B
5BB8198981A4994DE32493205524820E636010EE2190E06DF55FB3D9FF00CF
F7FE41347D9ECFFE7FBFF209A00F2ED4751D4FFE1369AD85EC16F326A16A96
71CBA9CE92C96A52132ECB2442932926E079ADF74EE24A88811634892F22BE
D2EF5B52BD9DEFBC43A958C91CD396896DD0DE3246A9F7461A1421B05C0F97
76CC28F49FB3D9FF00CFF7FE41347D9ECFFE7FBFF209A00E475EB8874ED7F4
8D4F52952DF49B7B7B957B89D80861B8730889989E109413A87381F395CE64
01B33597D2FC4173E1F7D2AF3105CEB6FE75E581DBE79161701B6CA07CDF28
11974395C1019593E5F41FB3D9FF00CFF7FE41347D9ECFFE7FBFF209A00F2A
BDD58A68D6515F5EBA4697DA85BA4D79AD49A741B61B968A3592E50191A5D8
06D527E70B23312CA0D575D6757D474F4326AB756F79258E80B3C90B05686E
24BE922B8F931B55F2A5194AE3E5DAC30315EBBF67B3FF009FEFFC8268FB3D
9FFCFF007FE413401C0FC46B3BEFF8431B4CD2A774372F169C5A5B9E4A4E44
037B3C72B38DD2216FBAE4024383C1C4F0F6A92E83E0BD2B50D6AE6C927D5F
5092EB4FBBD4268DA2B3FB4A493EF9184716182B4A0AAFDE66DA1915FE4F59
FB3D9FFCFF007FE41347D9ECFF00E7FBFF00209A00C1F0EA69A9A442749BD4
BFB477924FB5C72AC82791A46691F72FCB932172428001240000C0D3AB7F67
B3FF009FEFFC8268FB3D9FFCFF007FE413401528AB7F67B3FF009FEFFC8268
FB3D9FFCFF007FE413401528AB7F67B3FF009FEFFC8268FB3D9FFCFF007FE4
13401528AB7F67B3FF009FEFFC8268FB3D9FFCFF007FE413401528AB7F67B3
FF009FEFFC8268FB3D9FFCFF007FE413401528AB7F67B3FF009FEFFC8268FB
3D9FFCFF007FE413401528AB7F67B3FF009FEFFC8268FB3D9FFCFF007FE413
401528D7FF00D45A7FD724FE46ADFD9ECFFE7FBFF209AA7AF491BC70089F7A
A2AA67047233401F0C7883FE43DA9FFD7E4BFF00A19ACEAD1F107FC87B53FF
00AFC97FF43359D401F782FF00C7E8FF00AF68BFF404AB35597FE3F47FD7B4
5FFA0257CE9770F849A1F8837BAAEB53DA78834FD6EEE7D2A24BA78DA2937E
6378907DE67750AE464AAA29F9301A803DF7FE125B3FF84ABFE117F2E7FB6F
F67FF68799B4795E5F99E5E339CEECF6C631DEB5EBC58787D7C6BE3FD12D7C
52B74CEFE0B82E2FED83B5BF9D2F9DF324AABB4801DB76D18C322FA62B12E1
DF4AF02EB5A445797B65E1F83C6D2E9B78D6E5E436BA71C6F504862AB923FD
E2D839DE4100FA12B3F43D734EF1269706ABA55C7DA6CAE377952EC64DDB58
A9E180239523915E5DE0CD3B40FF0084DFC41E19F0CDCBDEF83EEB470D7D6F
14ED35B4772EC136A4BD4168B24E189273CFC802F29A5BDBD97C0FD205ADE4
F69657FAD88BC473D992EF140CECAFBB01B66516118039CA8C1DE43007D194
57937C3D4D234CF88BABE91E0DBD7B9F0C7F6625C5C4714A67B686F0BAA809
21CF263049C31C9047F000BE85E2086CE6FECCFB66B53E93B35089E1F26E84
1F6B90676C0D9FBEADCE507271ED401AF45145001451450014514500145145
001451450014514500145145001451450060E9D6FAE6B7717FF66D57C8582E
A48963FB3A361548C7271EA2B43FE119F137FD06BFF2562FF1A97C09FF001F
5ABFFD7F4DFCD6BB4A00E1BFE119F137FD06BFF2562FF1A3FE119F137FD06B
FF002562FF001A97C7BF1053C2462D3ACEDBED7ABDDC2D24418A986D9410A1
E61B8360E5B6803E731B0CAE0B0E234CF8B5E2C1A85BFDBE0D1EEED0C81658
6DADDEDE56078F964927640475F98007182CA0EE1C9571987A5354E72B33B6
8E03135E9BAB4E178AF4FE9FC8ECBFE119F137FD06BFF2562FF1A3FE119F13
7FD06BFF002562FF001AEA741D6AD3C47A359EAF645BECF77109155F1BE33F
C48E01203AB65586786523B5685759C5B1C29F0EF8891A312EBBB15DC267EC
719E4FE35A3245E43B45BD9FCB2577B632D8E327000CFD056FDFFF00CBB7FD
7C2FF5AC3BAFF8FA9BFEBA37F3A008A8A28A0028A28A0028A28A0028A28A00
28A28A0028A28A0028A28A0028A28A0028A28A002AA6A3FEA17FDFFE86ADD5
4D47FD42FF00BFFD0D007C45E20FF90F6A7FF5F92FFE866B3AB47C41FF0021
ED4FFEBF25FF00D0CD675007DE0BFF001FA3FEBDA2FF00D012B95F0B78121D
327D5EE359B3D3AFA79F5EB9D52C2531091ADD6428570594147CA0276FA0E6
BAA5FF008FD1FF005ED17FE809566802BFD82CFEDDFDA1F6483EDBE5791F69
F2C79BE5E776CDD8CEDCF38CE33CD469A469B1C1776E9A7DAA417AEEF7512C
2A16E19C61D9C630C587049CE7BD5CA28029E9BA469BA340D6FA5E9F6B6103
39768AD615894B10016214019C0033EC284D234D8E0BBB74D3ED520BD777BA
896150B70CE30ECE31862C3824E73DEAE514014F4DD234DD1A06B7D2F4FB5B
0819CBB456B0AC4A58800B10A00CE0019F61525DD859DFF93F6CB482E7ECF2
ACF0F9D187F2E45FBAEB91C30C9C11C8AB1450014514500145145001451450
0145145001451450014514500145145001451450056F027FC7D6AFFF005FD3
7F35AED2B8BF027FC7D6AFFF005FD37F35AED2803E7BF1DDCCF3F8F7C451CB
349225BDC431C2AEE488D4DAC0C5541E837331C0EEC4F73580BBDEEA081557
1336C0ECDB42B76C9236AAE33966200C0F5AF5CF8B1E0CB7D4B4FBAF13C571
F66B9B0B26177B99C2CD6B1EF72015F995D3748CA57AE4A9EAAC9E4F7F1788
F4DF0F7FC25F67E19BF8B4B5852F6DEE24BEB605626C32312B217CE083C267
3D876F93C7602B3C44A718DD3D7FAF43ED72ECCA8470B184A5692D3FAF53D6
7E0B2C0BA16B06176676D558CC0F457FB3C0001C74DA14F7EA7E83D1AB0FC2
1E17B7F08E8916990CBF6894BB4D73726308D3CAC72CC40EC0615412484555
C9C66B72BE970F4DD2A3183DD248F92C4D555ABCEA4568DB655BFF00F976FF
00AF85FEB58775FF001F537FD746FE75B97FFF002EDFF5F0BFD6B0EEBFE3EA
6FFAE8DFCEB739C8A8A28A0028A28A0028A28A0028A28A0028A28A0028A28A
0028A28A0028A28A0028A28A002AA6A3FEA17FDFFE86ADD54D47FD42FF00BF
FD0D007C45E20FF90F6A7FF5F92FFE866B3AB47C41FF0021ED4FFEBF25FF00
D0CD675007DE0BFF001FA3FEBDA2FF00D012ACD565FF008FD1FF005ED17FE8
09566800A28A2800A28A2800A28A2800A28A2800A28A2800A28A2800A28A28
00A28A2800A28A2800A28A2800A28A2802B7813FE3EB57FF00AFE9BF9AD769
5C5F813FE3EB57FF00AFE9BF9AD769401E21F127E26DDB6BDE22F0505B4834
E4B436B76EF6F2BC8526B7DE64128611C400720060DCA139F9B03CEEFBC491
6A1A7D8E9971E356B9B0B0944D041772D94E03EC65392D17CC9891C046CA85
21704015E8FF001CAEB4AB7F14F842E354D3E1D62D34EB7D46EAE74E237B39
1089600CAA199519EDDB2C576E11F77CA18554F087802D53C3D69FDB3E09F1
46AF78C647FB741AE46893C4D2318982FDB23C1F2CA67E45E41E2BCBAF42AD
4A8F96A7CB4D36F2F33D7C36268D2A4B9E95EDD75D77B75F232F4AF8CFAE69
F70AF2F886DF5DB52EA6E04F688FE5203CE24B708B16467E69030E32070D9F
7ED16FA7D5346D3F50BAB292C2E2EAD639A5B4973BEDD994318DB201CA9383
903A7415F2EDC33786A5D6E4B9F0ACE25F0A7892DF5792EAEA78249EDED1C3
35AD9997748F866101CA171977DD8C65BEAFAEAC3D3A94D35526E5FD77B2B9
C98AA94AA352A7051F4F974BBB7FC3956FFF00E5DBFEBE17FAD61DD7FC7D4D
FF005D1BF9D6E5FF00FCBB7FD7C2FF005AC3BAFF008FA9BFEBA37F3AEA38C8
A8A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A0028A28A
0028A28A002AA6A3FEA17FDFFE86ADD54D47FD42FF00BFFD0D007C45E20FF9
0F6A7FF5F92FFE866B3AB47C41FF0021ED4FFEBF25FF00D0CD675007DE0BFF
001FA3FEBDA2FF00D012ACD565FF008FD1FF005ED17FE809566800A28A2800
A28A2800A28A2800A28A2800A28A2800A28A2800A28A2800A28A2800A28A28
00A28A2800A28A2802B7813FE3EB57FF00AFE9BF9AD7695C5F813FE3EB57FF
00AFE9BF9AD769401E13E39974FD5FC69E3BB8D46CCB5A695E1FB6D0665CAC
8D249792C725BCC8AC30BB1D9B249246C465C9C81DBF82BC0364BE0DF0F8BE
93C416D7634CB613C1FDB9A843E53F94BB97CB130098391B4000631818AE1B
E22F852EF47F05F8C62BF4FB6EB3E2FD6FCBB192CBCC9E49218D9AE2DE2915
B1F3058E48C6C07198D790063DE2B38FC4D5FF00ABB3497C29DBE7F25F97EA
78678BBC256DA6F8B75DB2B6D2A4BBB6BEF0D9D42D4DE4F35D4D79AB5B3398
047248ED23489106F9233F7188604115EA7E03BD17DE0ED1A4FED0FED2962B
55B6B8BCCC87CE9A2FDD4AD990063FBC47E4804F5EF506BFE16BAD5BC5FE13
D7E1BC58E0D0E5BA33DB303FBE1340630C08E372B63823A33723186E73E07D
BC9A6786B56D07ED3F68B6D0B5AB9D3ADDCAAA922309E61201246E95A57018
92038ED8A1692F5FEBFCC1B4E1E9FD7F91E817FF00F2EDFF005F0BFD6B0EEB
FE3EA6FF00AE8DFCEB72FF00FE5DBFEBE17FAD61DD7FC7D4DFF5D1BF9D6866
45451450014514500145145001451450014514500145145001451450014514
50014514500155351FF50BFEFF00F4356EAA6A3FEA17FDFF00E86803E22F10
7FC87B53FF00AFC97FF43359D5A3E20FF90F6A7FF5F92FFE866B3A803EF05F
F8FD1FF5ED17FE809566AB2FFC7E8FFAF68BFF00404AB34005145140051451
40051451400514514005145140051451400514514005145140051451400514
51400514514014BC153C76F3EAEF2B6D537F30CE09E72B5D77F6A59FFCF6FF
00C74FF85655859DE594056CE258E395CCCD8DB9666E4B127927FF00AC3B55
AFF89BFF009D940134F77A65D208EE047322BA4816488B00C8C191B04750CA
083D8807B54BFDA967FF003DBFF1D3FE1553FE26FF00E7651FF137FF003B28
02DFF6A59FFCF6FF00C74FF851FDA967FF003DBFF1D3FE1553FE26FF00E765
1FF137FF003B28024B8BC82E1ADD22937309D4E3047159575FF1F537FD746F
E75A3FF137FF003B2AABE9D7AECCED16598E49DCBD7F3A00A7455BFECBBCFF
009E3FF8F0FF001A3FB2EF3FE78FFE3C3FC6802A5156FF00B2EF3FE78FFE3C
3FC68FECBBCFF9E3FF008F0FF1A00A9455BFECBBCFF9E3FF008F0FF1A3FB2E
F3FE78FF00E3C3FC6802A5156FFB2EF3FE78FF00E3C3FC68FECBBCFF009E3F
F8F0FF001A00A9455BFECBBCFF009E3FF8F0FF001A3FB2EF3FE78FFE3C3FC6
802A5156FF00B2EF3FE78FFE3C3FC68FECBBCFF9E3FF008F0FF1A00A9455BF
ECBBCFF9E3FF008F0FF1A8E6B29EDA332CCAB1A0206E6750324E00EBD49207
E340105145140051451400554D47FD42FF00BFFD0D5BAA9A8FFA85FF007FFA
1A00F88BC41FF21ED4FF00EBF25FFD0CD67568F883FE43DA9FFD7E4BFF00A1
9ACEA00FBC17FE3F47FD7B45FF00A025799F8D7E266A8F63E27B5F0D7876F6
FACF4B8A4B4BBD662B8F23ECB390558C6BB773F97904952318CF0B863E98BF
F1FA3FEBDA2FFD012BCDB55F87BE2E85FC4DA7787B5AD3A2D13C44F35D4E2F
6266B8826914F98885460A3E154B1C9553C0DCB96001FE280F0E7873C2D662
14D5759BCD1EDEF2617BA94766BE59400BB4D31C33B3E7E519270C4E30325E
FC6EB28F4AD2EE2C34B4B9BEBDB89EDA6B79B5186082DE48554C83ED0D9471
F3A1561C306EA0FCB4CD5BE166A9247E1ABFB0FEC4BDD4F4BD262D2EEECF59
B7F3ECA6445FBEBF2EE0C1C9C1E3231C8C10CF93E1CF892D3C39A558D9CFE1
ABFB88AE1EE750B2D4348852C667640AA50451820A6301B019B71248002500
6C4FF1266D33C2D2EADAC786751B0D505F1D3A0D2483235D5C1FB82270B864
61FC6063E560BBB8DD4EF7E28EA9A3683AD5FEB7E0CBDD36F74BF2996DDE6D
F6F708EE8994B95429B817E579E9C67E6DB42C7E146B1078163D20EAF05AEA
F65AB1D5F4DFB3EF92D6CE45CF9710F372C63E58F2320B6486C1DD3EB7E0CF
1E78AFC2FAF586B9ADE97F69BFF252D2C6D232B69004923767690A194B1D87
0390327AE46D00B0BE28D4751F177841750D1F54D13EDD2DFF00D9ED9B5050
B342B023ABDC42AA72DF31C216051813CE6A869DF1AAE2E74BB2D7EFBC1F7B
65E1D965F22EB53138916DDF732821028678FEE82F81862CA012006EBB5DF0
D5E6A7E32F0AEB90C902DB68DF6CFB423B10EDE7441176000838239C91F8D7
957817C1FE28F17FC39D1F479358B287C27772BCB72AB0917A8A93B930A1C1
42A5D03EE3860588E5576B0077DFF0947887FE1707FC237F64FF008927F64F
9FFEB63FEF7FC7C74DDF7FF75B33FEDF4AC8F0F7C44FECEF01F869ACEC354D
6F58D6659E2B1B2BABCF3A79764CC1DA4B828005518E4AF0303A0661D55D78
6752FF00858B63E29B4B8B536674C7D3AF609830902EF322346470497C039C
60038C93C72B63F0C3C41A5785FC2A34FD4ECA1F12786A5B8784BEE7B49D27
9099118ED0E32840C81EA3B86500BF37C5AFB2F85F5ED4EF3419ED358D0258
A2BED2669B1B7CC902A32CA148652096040EDE8558DCD2FE216A771E25D334
7D5FC2575A341AC24CFA75C4D751BC9208D439F3221CC4761E4124862073C9
1897DF0C3C41AAF85FC54350D4ECA6F1278965B7798A6E4B481209018D14ED
2E70808C91E83B166EBB5DF0D5E6A7E32F0AEB90C902DB68DF6CFB423B10ED
E7441176000838239C91F8D006BEB9AAFF00626973EA1F60BDD47C9DBFE8D6
10F9B3BE582FCAB919C67279E809AD0ACFD73FB63FB2E7FEC1FB17F69FCBE4
FDBF7F91F786EDDB3E6FBBBB18EF8AD0A0028A28A0028A28A0028A28A0028A
28A0028A28A00ADE2FD4A6D334E80D9AA49A85C451DBD94520255E67C852C0
104A2F2EFB79088E7B560E89E2FF00ED0B8FB2DE59CF0B3EA179630DC88B6C
123C32CDB63196DC5BCA88B160366430DC1BE51D16B5A5FDB754D16F649BF7
3616ED2241B7ACCCBB164DD9FE1469976F20F999EAA2B16DFC2FF67FECEFF4
BDDF61D5AEF52FF558DFE7FDA7E4EBC6DFB475E73B3A0CF0015D7C7761F61B
8BF92CAF61B64D3E5D4EDA4758CFDB6DA30ACCF180E4AF0F1F126C3F38E386
DB62C7C63A75FEA11D82C17B04CF2983FD22D9A30B2796664424FF0013420C
98EAA061F6310A72FF00E1029A4D2A5D2E7D551A087479F46D3D92D4AB430C
AA8A5A525C895C08A3E54463EF71C8DBA9FF0008BFFC4DFF00B4BED7FF0031
6FED2F2FCAFF00A72FB2ECCE7FE079C7B63BD001A778C2C2FF00124914F616
D2DA35F5B5D5D98D62B9B65DBBA6521C9450248C912043871C70D8CFD23C5F
7971AB0D3B50B3F2EE2E6D20BCB6B48A22B3A472CD70332866C2F971245BFB
072CA0B16453534FF8656DA7D94D61149A7436F25BAD917B6D2D229EE2DB7A
79A93CBB8B3BBC68577AF9601766DA485DBB77DE17FB4EB93EBB6F77F66D40
DA436F6D288B7795E5BCACC1B91BE37F34064E3EE020860ACA0125BF8A6DAE
7514B416974904D712DA5BDEB04F2679E2DFE646A0317047952F2C814F9670
4E577605B7C429AE3C1CFAAB58BDBEA5FD8326A9079F09582E5A3894C9B177
6F08AEE83E6DBB83028587CD5AF69E169ADF51B791AFD1F4FB4BEB8D42DA01
6E44C269BCDDFBE4DE4327EFE5C284523E4CB1C1DD996FF0FAE1743FEC8BBD
6FED2B0E89368F6937D90234692A2076701B0F83126D036E1410C5C9DD401B
771E29B6B6D45ED0DA5D3C10DC4569717AA13C98279767971B02C1C93E6C5C
AA151E60C9186DB4E7F17FDA74FBD6D2ECE7178B76FA75A7DAA2C4735D091E
33801B73C69B0C8ECBD230C47CC8EAB1DC781ADA7F12BEB6174E6335C45732
3CFA6A4D748F1AA2A88A66388D311A646C2C0972ACA482B72C7C2FF64B8B29
24BBF3A1B4BBBEBD48BCADBFBEB895D95B39FE049664C746DFBB008180092D
BC59A6DC2593B97B64BAB19EF59AE36A0B6585A35952539F91D1A40187628E
0918AAF078D2DA67873A6EA30C0CF043713CD1A20B49E658CC70C885F7EFFD
EC40ED56505C65861B6D7BBF01DA5DA5FA1B9754BAB8665505F11DBCAC1AEA
0C6FE44CCD312DD417423FD4C7B6C5DF85A6B8D46E245BF44D3EEEFADF50B9
80DB93319A1F2B66C93780A9FB88B2A5189F9F0C32368053BAF1EDBC7359BA
DBCF05936AD369B713DC427F78F1A5CE5610A4B3B192140300EEF3028CBEE5
5B97BE2E874B96E5AFADEE9120B7B191ADA3B7124D1B5CCCF101F23B6F2194
65541C60ED2FB8011CBE09B7BAB5B1B5BA9FCE86D756BAD4880854B198DC15
0AC1B28C867043839CC608C12304DE12B8BA9E49EEB55F3E67FB00321B60A5
85A5DBCEA5B0D8DCE1C292001905828042800B1FF096C1F67CFF00675EFF00
687DAFEC5FD9BFBAF3FCEF2BCEDBBB7F95FEABF799DF8C719DDF2D471F8AD7
54B6D39B4885FCFBEBE92058EEE16468E282565B891D32190610AA92387922
0C06E2053D73477D39E7D5E19A769DB565BF89A2B07BA5B73F6416A77C48C2
4954A86FB98219D491B558D1E0AF0FDC5A226A37D3CF2C9FE96B6CB71108E5
549AF2599A47002E1A45FB3928557618F18525850058D3BC7BA5DF588D425B
7BDB0B37D3DB528A5BB871E6C0814CACAAA59BE4DE80E40DDB814DEBCD573E
3AFB35E6A4350D32F6D20B18AC73035BEFB8125C4F2C5C796CCB22FCB191E5
963CB0E586D143C35E0CB8BDF0AE9B6FADDE4FB5BC3C74D483C810CF6E93C7
179CAE4E433298D557E55DA010DBCFCD5A67C217D77737579A8EB29717172F
A7B11159F971C62D2E5A60A8BBC9C36EC1DCCC41C9CE084500B961E33D2EFA
49237F3ECBC98A69247BC4F2D14C0C12E177E769F29994330250EEF959B6B6
DC8B7F1D5E5ADC5C7F6BE993A5BC7A7C5A937936E55ECEDDE5B8CB4FBDB019
228E2DC8B972DE66D5603E59EE3C09F6841136A3885FEDD1CE9E47FAD86EEF
239E58F3BBE5F911A2DC39F9F70C1005686B1E17FED6FEDEFF004BF2BFB634
95D37FD56EF276F9FF003F51BBFD7F4E3EEF5E7800A69E346B57F1049A969B
750DAE97A9C1630B431AC8F2895610085476663BA50D8001D8CA002E19456B
BF15D8EB377A559C50DD413FDBC1DB3C3B41789F64E80E48631BB229604A12
DF2B36D6DBA33F85A69E7D519AFD0417DA9D9EA2882DCEE89A0306E52DBF0C
185BAE381B771FBD5957DE17FECDD4342BDFB5F99E4EA377F27958CFDAAE84
FD73FC1B36FBE73C74A00EE28A28A0028A28A002AA6A3FEA17FDFF00E86ADD
54D47FD42FFBFF00D0D007C45E20FF0090F6A7FF005F92FF00E866B3AB47C4
1FF21ED4FF00EBF25FFD0CD675007DE0BFF1FA3FEBDA2FFD012ACD565FF8FD
1FF5ED17FE8095C36A1F13EF86ABA8C1A1784351D774DD26E16D6FEF6D9F6B
2CBBB0E9144573295E33823DF0B86201E8545703AE7C4BBC83549F4CF0CF85
AF7C43716568B777E371B5FB32BA868D30E859A42A73B31BBB004860B1DFFC
5887C8F0CCFA0E8975AD0F11A5C7D9A2471148924400DAC08231BC90CD9C28
566F987500F42A2BC6BC65F137C432783FC4F6F16873E83ADE952DB4376C97
D1CBF66867195915C0E58E3661795F303039071BF61ADFF62F8AADAD757975
4B7FB0F8396F2F16E350FB4451EC900767454FDE4C3073283F30E02F3401E8
D55EC6C2CF4CB58ECEC2D20B3B68F3B20B78C468B9249C28000C924FE35E73
6FF17351924D165B8F05DEDA69DAEEA115AE9F7B35CAE1E37623CC750A4A36
36B2A1E1C6E21B0B93BF67E3BFB5E87E2CD57FB3B67FC23977796DE579F9FB
47D9D036ECEDF93774C60E3DE803AFA2BCE66F8A5A8C97DA4E9DA5784E7D52
F754D121D5A28E2BC5458F79E51DD94055001F9CF562ABB46EC88FC47F15B5
3F0D4F797377E0CBA8F42B4BE166750B8BD8E19263900B45030CC83A95C1C3
0192570DB403D2A8AE07FE128F10FF00C2E0FF00846FEC9FF124FEC9F3FF00
D6C7FDEFF8F8E9BBEFFEEB667FDBE9591E1EF889FD9DE03F0D359D86A9ADEB
1ACCB3C563657579E74F2EC9983B49705000AA31C95E060740CC003D568AF3
99BE2D7D97C2FAF6A779A0CF69AC6812C515F69334D8DBE6481519650A4329
04B02076F42AC6E697F10B53B8F12E99A3EAFE12BAD1A0D61267D3AE26BA8D
E49046A1CF9910E623B0F2092431039E4800EEA8ACFD7355FEC4D2E7D43EC1
7BA8F93B7FD1AC21F3677CB05F9572338CE4F3D0135A140051451400514514
00514514005145140156FBC376FAB4C2E6EECE69DF605562D260281C0001C0
1F4F527BD55FF84234DFFA05CBFF007D49FE35D15E4F2C62D824AE83C85385
622AB7DAEE3FE7BCBFF7D9A00C6FF84234DFFA05CBFF007D49FE347FC211A6
FF00D02E5FFBEA4FF1AD9FB5DC7FCF797FEFB347DAEE3FE7BCBFF7D9A00C6F
F84234DFFA05CBFF007D49FE347FC211A6FF00D02E5FFBEA4FF1AD9FB5DC7F
CF797FEFB347DAEE3FE7BCBFF7D9A00C6FF84234DFFA05CBFF007D49FE3519
F08E8AA48362411C10657E3F5AD2D56FAEE3D2EF5D2EA6475B790AB2C84107
69E4541A3FFC822C3FEBDA3FFD0450053FF844B44FF9F2FF00C8AFFF00C551
FF00089689FF003E5FF915FF00F8AAD9A28031BFE112D13FE7CBFF0022BFFF
001547FC225A27FCF97FE457FF00E2AB668A00C6FF00844B44FF009F2FFC8A
FF00FC551FF089689FF3E5FF00915FFF008AAD9A28031BFE112D13FE7CBFF2
2BFF00F1547FC225A27FCF97FE457FFE2AB668A00C6FF844B44FF9F2FF00C8
AFFF00C551FF00089689FF003E5FF915FF00F8AAD9A28031BFE112D13FE7CB
FF0022BFFF001547FC225A27FCF97FE457FF00E2AB668A00C6FF00844B44FF
009F2FFC8AFF00FC553E1F0C6916F34734569B648D83A9F35CE08391DEB5A8
A0028A28A0028A28A002AA6A3FEA17FDFF00E86ADD54D47FD42FFBFF00D0D0
07C45E20FF0090F6A7FF005F92FF00E866B3AB47C41FF21ED4FF00EBF25FFD
0CD675007DE0BFF1FA3FEBDA2FFD012BCFA5F05F8DB46D57574F09EBDA75AE
93AD5F7DBE692F60325CD9CAED994C402EC7040180FDB0383973E82BFF001F
A3FEBDA2FF00D012ACD0079CEADE0CF18E99AF5FEB3E0FD6EC8CDABDA470DF
FF006BC7C89624091CD198D31BB193B48DB92782080B2697F0D26D06F7C0CB
657893D9F86D2F45CBCF959256B84EA8A0118DE5B827818E58D7A151401E63
E28F86DAC6B7FF0009E7D9AE6C93FE123FECFF00B279B238D9F67DBBFCCC29
C671C633EF8AD8D7BC1EFA878AB52D6EF25C69173E199749992DC3BDC82D21
766440873F2938C6493C6D35DB51401F39DAEA97FA949E03D162F13E97AED9
596B76FF0061B7D3AD64174F042C4196E1580F2BCB40005C7CC199896DBBAB
B7BCF00F8DE28FC53A4691AA689168FAFDDDCDE34F3C729BA53328CC78E502
920216E4804B019C28F45B4D0747B0BE9B50B3D2ACADAF6E3779D730DB224B
26E3B9B7301939201393C9E6B4280385F0D782352D1BC47A46A9713DABC165
E1687469163762C664903161950366075C83ED5C87893E0EF88757BBF14347
3E8372357B81716F7F7C9335E4203A15855B958915772E5412C00040046CF6
9A2803906F0D6B0DE3ED37C569259242DA4B69FA8DA967664F98C80C2F81BB
E72012C17E504E3270BCCD8FC30F10695E17F0A8D3F53B287C49E1A96E1E12
FB9ED2749E4264463B438CA103207A8EE197D568A00F2ABEF861E20D57C2FE
2A1A86A76537893C4B2DBBCC53725A4090480C68A769738404648F41D8B375
DAEF86AF353F1978575C864816DB46FB67DA11D8876F3A208BB00041C11CE4
8FC6BA7A28033F5CFED8FECB9FFB07EC5FDA7F2F93F6FDFE47DE1BB76CF9BE
EEEC63BE2B428A2800A28A2800A28A2800A28A2800A28A2802DDFF00FCBB7F
D7BAFF005AA956EFFF00E5DBFEBDD7FAD54A00E63C49E36FF846EFA3B3FF00
846BC45AB6F884BE7E9761E7C4B9246D2DB861BE5CE3D08F5AA73EB9ABF897
C392EA9A3B5D784E7B0B83248BE21B011ACF1A26E2AE0B652262C3320391B5
B15D9D666BBE1BD23C4D05BDBEB16497B05B5C2DCC71484EDF314100900E18
6188DA720E79068039FF0005F8EA6F12DEDD6977162924F6483CCD534B90CF
A6CEDB232563948043E64FB98380A7E635D9D4705BC36B0456F6F124304281
238A350AA8A06028038000E315250052D63FE4117FFF005ED27FE8268D1FFE
41161FF5ED1FFE8228D63FE4117FFF005ED27FE8268D1FFE41161FF5ED1FFE
822802ED145140051451400514514005145140051451400514514005145140
05145140051451400554D47FD42FFBFF00D0D5BAA9A8FF00A85FF7FF00A1A0
0F88BC41FF0021ED4FFEBF25FF00D0CD67568F883FE43DA9FF00D7E4BFFA19
ACEA00FBBF7AA5E02CC147D9A2E49C7F0254DE7C5FF3D53FEFA15F2ACDF1EF
C653C85D8D80E000A2DB8000C01F7BB000533FE17AF8C7FBD63FF80FFF00D7
A00FAB7CF8BFE7AA7FDF428F3E2FF9EA9FF7D0AF94BFE17AF8C7FBD63FF80F
FF00D7A3FE17AF8C7FBD63FF0080FF00FD7A00FAB7CF8BFE7AA7FDF428F3E2
FF009EA9FF007D0AF94BFE17AF8C7FBD63FF0080FF00FD7A3FE17AF8C7FBD6
3FF80FFF00D7A00FAB7CF8BFE7AA7FDF428F3E2FF9EA9FF7D0AF94BFE17AF8
C7FBD63FF80FFF00D7A3FE17AF8C7FBD63FF0080FF00FD7A00FAB7CF8BFE7A
A7FDF428F3E2FF009EA9FF007D0AF94BFE17AF8C7FBD63FF0080FF00FD7A3F
E17AF8C7FBD63FF80FFF00D7A00FAB7CF8BFE7AA7FDF428F3E2FF9EA9FF7D0
AF94BFE17AF8C7FBD63FF80FFF00D7A3FE17AF8C7FBD63FF0080FF00FD7A00
FAB7CF8BFE7AA7FDF428F3E2FF009EA9FF007D0AF94BFE17AF8C7FBD63FF00
80FF00FD7A3FE17AF8C7FBD63FF80FFF00D7A00FAB7CF8BFE7AA7FDF428F3E
2FF9EA9FF7D0AF94BFE17AF8C7FBD63FF80FFF00D7A3FE17AF8C7FBD63FF00
80FF00FD7A00FAB7CF8BFE7AA7FDF428F3E2FF009EA9FF007D0AF94BFE17AF
8C7FBD63FF0080FF00FD7A3FE17AF8C7FBD63FF80FFF00D7A00FAB7CF8BFE7
AA7FDF428F3E2FF9EA9FF7D0AF94BFE17AF8C7FBD63FF80FFF00D7A3FE17AF
8C7FBD63FF0080FF00FD7A00FAB7CF8BFE7AA7FDF428F3E2FF009EA9FF007D
0AF94BFE17AF8C7FBD63FF0080FF00FD7A3FE17AF8C7FBD63FF80FFF00D7A0
0FAB7CF8BFE7AA7FDF428F3E2FF9EA9FF7D0AF94BFE17AF8C7FBD63FF80FFF
00D7A3FE17AF8C7FBD63FF0080FF00FD7A00FA8B55BED5279E3FB0369CB047
12A66E2462CC4753C7007E7D33DF028F9FE20FF9EBA37FDF5257CD7FF0BD7C
63FDEB1FFC07FF00EBD1FF000BD7C63FDEB1FF00C07FFEBD007D29E7F883FE
7AE8DFF7D49479FE20FF009EBA37FDF5257CD7FF000BD7C63FDEB1FF00C07F
FEBD1FF0BD7C63FDEB1FFC07FF00EBD007D29E7F883FE7AE8DFF007D49479F
E20FF9EBA37FDF5257CD7FF0BD7C63FDEB1FFC07FF00EBD1FF000BD7C63FDE
B1FF00C07FFEBD007D2173FDBD756F2DBBCDA404951918AB499008C715AD61
B2D6C6DADDE68CBC51223156E09000E2BE59FF0085EBE31FEF58FF00E03FFF
005E8FF85EBE31FEF58FFE03FF00F5E803EADF3E2FF9EA9FF7D0A3CF8BFE7A
A7FDF42BE52FF85EBE31FEF58FFE03FF00F5E8FF0085EBE31FEF58FF00E03F
FF005E803EADF3E2FF009EA9FF007D0A3CF8BFE7AA7FDF42BE52FF0085EBE3
1FEF58FF00E03FFF005E8FF85EBE31FEF58FFE03FF00F5E803EADF3E2FF9EA
9FF7D0A3CF8BFE7AA7FDF42BE52FF85EBE31FEF58FFE03FF00F5E8FF0085EB
E31FEF58FF00E03FFF005E803EADF3E2FF009EA9FF007D0A3CF8BFE7AA7FDF
42BE52FF0085EBE31FEF58FF00E03FFF005E8FF85EBE31FEF58FFE03FF00F5
E803EADF3E2FF9EA9FF7D0A3CF8BFE7AA7FDF42BE52FF85EBE31FEF58FFE03
FF00F5E8FF0085EBE31FEF58FF00E03FFF005E803EADF3E2FF009EA9FF007D
0A3CF8BFE7AA7FDF42BE52FF0085EBE31FEF58FF00E03FFF005E8FF85EBE31
FEF58FFE03FF00F5E803EADF3E2FF9EA9FF7D0A3CF8BFE7AA7FDF42BE52FF8
5EBE31FEF58FFE03FF00F5E8FF0085EBE31FEF58FF00E03FFF005E803EADF3
E2FF009EA9FF007D0A3CF8BFE7AA7FDF42BE52FF0085EBE31FEF58FF00E03F
FF005E8FF85EBE31FEF58FFE03FF00F5E803EADF3E2FF9EA9FF7D0A3CF8BFE
7AA7FDF42BE52FF85EBE31FEF58FFE03FF00F5E8FF0085EBE31FEF58FF00E0
3FFF005E803EADF3E2FF009EA9FF007D0AAD7D223C2A15D58EEE80E7B1AF96
FF00E17AF8C7FBD63FF80FFF00D7A3FE17AF8C7FBD63FF0080FF00FD7A00E2
3C41FF0021ED4FFEBF25FF00D0CD6754F7974F7B773DD4814493C8D2305E80
B1C9C7B73505007FFFD9>
%%EndDocument
 @endspecial 701 2535 a
 currentpoint grestore moveto
 701 2535 a 92 2535 a
 currentpoint currentpoint translate 1 1.01508 div 1 1.01508 div scale
neg exch neg exch translate
 92 2535
a 144 2627 a Ff(Figure)j(7.)e(A)g(pr)o(oduct)j(object)1037
42 y Fi(A)i(product)e(object,)k(as)e(sho)o(wn)f(in)h(\002gure)f(7,)j
(can)f(also)e(ha)o(v)o(e)987 91 y(properties)h(which)g(represents)h
(links,)h(for)e(e)o(xample)i(to)e(HTML)987 141 y(pages,)11
b(or)f(which)g(are)h(methods.)1037 191 y(Of)i(course,)i(it)d(is)h(not)g
(the)g(intention)e(that)h(a)i(user)f(has)h(to)f(type)987
241 y(in)f(such)g(comple)o(x)h(queries)g(when)f(he)h(accesses)i(the)d
(system.)20 b(In-)987 291 y(stead,)g(the)d(product)f(information)f
(system)j(pro)o(vides)e(function-)987 340 y(alities)f(based)h(on)f
(pre-de\002ned)h(queries)f(and)h(also)f(to)g(assist)h(the)987
390 y(user)d(in)f(ad-hoc)h(querying.)20 b(Since)13 b(OMS)g(is)g(an)g
(object-oriented)987 440 y(database,)k(objects)d(can)h(pro)o(vide)f
(methods)g(which)g(also)h(are)g(e)o(x-)987 490 y(ecutable)e(remotely)g
(o)o(v)o(er)h(a)f(network)f(connection.)21 b(It)12 b(is)h(further)987
540 y(possible)e(to)g(include)f(queries)i(within)e(methods.)16
b(These)d(features)987 589 y(of)18 b(OMS,)h(among)f(man)o(y)h(others,)h
(make)f(it)f(possible)f(to)h(b)o(uild)987 639 y(small)11
b(b)o(ut)f(v)o(ery)i(po)o(werful)e(Internet)g(applications)g(with)g
(minimal)987 689 y(application)f(programming)g(ef)o(fort.)987
802 y Fk(5.)k(Futur)o(e)f(work)1037 907 y Fi(Our)c(plans)g(for)g(the)g
(future)f(especially)i(focus)f(on)g(the)g(follo)o(wing)987
957 y(three)i(topics:)1028 1027 y Fh(\017)21 b Fj(Extension)10
b(of)g(the)g(Pr)n(oduct)g(Data)f(Model)1070 1077 y Fi(The)19
b(de\002nition)d(of)i(our)g Fj(Pr)n(oduct)g(Data)g(De\002nition)e(Lan-)
1070 1126 y(guage)e Fi(PDDL)i(has)g(yet)f(to)g(be)h(completed.)29
b(Another)15 b(im-)1070 1176 y(portant)10 b(issue)i(for)e(a)i(product)f
(data)g(model)h(is)f(the)g(necessity)1070 1226 y(of)g(being)g(able)h
(to)g(e)o(xpress)g(the)g(temporal)f(aspects)i(of)e(prod-)1070
1276 y(uct)e(data,)g(for)f(e)o(xample)i(for)f(managing)f(the)h(history)
e(of)h(prod-)1070 1326 y(ucts.)13 b(Since)c(there)g(already)g(e)o
(xists)g(a)h(temporal)e(e)o(xtension)h(to)1070 1376 y
Fj(OM)k Fi([8)o(],)g(the)e(inte)o(gration)f(of)i(temporal)f(aspects)i
(should)d(be)1070 1425 y(relati)o(v)o(ely)f(straightforward.)1028
1484 y Fh(\017)21 b Fj(Pr)n(oduct)10 b(Con\002gur)o(ation)e(Pr)n(ocess)
1070 1534 y Fi(The)14 b Fj(Pr)n(oduct)e(Con\002gur)o(ation)f(Pr)n
(ocess)p Fi(,)k(as)f(we)f(see)i(it,)e(can)1070 1584 y(be)d(di)o(vided)d
(into)h(three)i(dif)o(ferent)e(tasks:)k(The)e(con\002guration)1120
1657 y Fd(\226)20 b Fi(of)10 b Fj(Single)f(P)m(art)h(Pr)n(oducts)p
Fi(,)1120 1707 y Fd(\226)20 b Fi(of)k Fj(Composed)f(Pr)n(oducts)p
Fi(,)28 b(respecti)o(v)o(ely)m(,)g Fj(Pr)n(oduct)1161
1757 y(V)-5 b(ariants)p Fi(,)10 b(and)1120 1807 y Fd(\226)20
b Fi(of)14 b Fj(Pr)n(oduct)g(Gr)n(oups)p Fi(,)i(respecti)o(v)o(ely)m(,)
g Fj(Pr)n(oduct)e(F)m(ami-)1161 1857 y(lies)1070 1931
y Fi(W)m(e)d(hence)g(want)f(to)g(e)o(xtend)h(our)f(prototype)f(system)i
(to)f(pro-)1070 1981 y(vide)15 b(these)h(tasks)g(and)f(to)g(gi)o(v)o(e)
g(the)h(user)f(support)g(for)g(the)1070 2030 y(process)c(of)f
(composing)f(and)i(con\002guring)d(products.)1028 2089
y Fh(\017)21 b Fj(OMS/J)o(ava)1070 2139 y(OMS)10 b Fi(is)g(a)g(po)o
(werful)f(database)i(system)g(designed)e(for)h(rapid)1070
2189 y(prototyping.)21 b(Another)13 b(instantiation)e(of)i(the)h
(generic)g(ob-)1070 2238 y(ject)d(model)g Fj(OM)h Fi(is)e(currently)g
(under)h(de)o(v)o(elopment)f(for)h(the)1070 2288 y Fj(J)o(ava)k(en)n
(vir)n(onment)p Fi(.)26 b(The)16 b Fj(OMS/J)o(ava)e Fi(database)h
(manage-)1070 2338 y(ment)10 b(system)h(will)e(include)h(features)g
(such)h(as)1120 2412 y Fd(\226)20 b Fi(Multi-user)9 b(Capabilities)1120
2462 y Fd(\226)20 b Fi(Client/Serv)o(er)9 b(Architecture)1120
2512 y Fd(\226)20 b Fi(Internet)10 b(Interface)1120 2562
y Fd(\226)20 b Fi(Remote)11 b(Method)e(In)n(v)o(ocation)h(Mechanism)
1120 2613 y Fd(\226)20 b Fi(Built-in)6 b(support)g(for)i(the)g(e)o(v)o
(aluation)f(of)h Fj(Pr)n(oduct)g(De-)1161 2662 y(scriptions)p
eop
%%Page: 6 6
6 5 bop -8 42 a Fi(After)13 b(ha)o(ving)g(de)o(v)o(eloped)h(this)f
(system,)i(we)g(will)d(port)h(our)-8 91 y(prototype)e(to)h
Fj(OMS/J)o(ava)p Fi(.)21 b(In)12 b(this)g(system,)j(methods)e(will)-8
141 y(be)h(able)g(to)g(e)o(x)o(ecute)i(on)d(the)h(client)f(side)h(and)h
(not)e(only)g(on)-8 191 y(the)d(serv)o(er)h(side)f(as)h(at)g(present.)
-91 306 y Fk(6.)i(Conclusions)-41 412 y Fi(W)m(e)d(ha)o(v)o(e)i
(presented)e(a)h(product)e(data)i(model)f(which)g(is)g(e)o(xten-)-91
462 y(sible)j(and)h(\003e)o(xible)g(enough)f(to)g(ful\002l)g(today')n
(s)f(increasing)i(com-)-91 512 y(ple)o(xity)c(of)h(product)f
(structures.)15 b(W)m(e)c(ha)o(v)o(e)i(also)e(outlined)e(the)i(re-)-91
561 y(quirements)k(for)g(a)g(modern)h(product)e(information)f(system)j
(and)-91 611 y(ha)o(v)o(e)11 b(gi)o(v)o(en)f(an)h(o)o(v)o(ervie)o(w)f
(of)g(our)g(o)o(wn)g(prototype)e(system.)-41 661 y(In)k(addition,)f
(our)h(proposed)f(product)g(data)i(model)f(addresses)-91
711 y(the)c(fact)g(that)g(it)f(will)g(become)i(more)g(and)f(more)h
(important)e(to)g(ha)o(v)o(e)-91 761 y(a)j(general)g(model)f(which)h
(is)f(suitable)g(for)g(dif)o(ferent)g(kinds)g(of)g(user)-91
810 y(pro\002les)h(as)i(well)f(as)g(for)g(v)o(arious)f(application)f
(domains.)15 b(The)d(in-)-91 860 y(te)o(gration)e(of)g(e)o(xisting)g
(data)h(sources)g(together)f(with)f(the)i(demand)-91
910 y(for)g(wider)h(access)h(to)f(data)g(are)g(also)g(signi\002cant)f
(issues)h(we)g(ha)o(v)o(e)-91 960 y(taken)e(into)f(account)h(with)f
(our)h(data)h(model.)-41 1010 y(T)m(o)g(compare)h(our)f(product)f(data)
h(model)g(to)g(e)o(xisting)f(ones)h(de-)-91 1060 y(scribed)i(in)g(\([7)
o(,)h(1,)f(9]\),)h(we)g(can)g(emphasise)g(the)f(follo)o(wing)e(ke)o(y)
-91 1109 y(features:)-50 1189 y Fh(\017)21 b Fj(Fle)o(xibility)-8
1239 y Fi(W)n(ith)12 b(our)g(approach,)i(it)e(is)g(possible)g(to)g
(describe)h(comple)o(x)-8 1289 y(product)c(structures)i(and)f(e)o
(xpressi)o(v)o(e)i(classi\002cation)e(hierar)o(-)-8 1339
y(chies)i(with)g(only)f(a)h(single)g(model.)19 b(This)12
b(allo)o(ws)g(the)g(mod-)-8 1388 y(elling)h(of)h(product)g(v)o(ariants)
g(to)g(be)g(done)h(on)f(se)o(v)o(eral)h(con-)-8 1438
y(ceptual)10 b(le)o(v)o(els.)-50 1498 y Fh(\017)21 b
Fj(Extensibility)9 b(and)g(P)m(ortability)-8 1547 y Fi(In)i(particular)
n(,)g(the)h(concept)f(of)g Fj(Pr)n(oduct)h(Descriptions)e
Fi(and)-8 1597 y(the)h(idea)h(of)f(modelling)f Fj(Pr)n(oduct)h(Char)o
(acteristics)g Fi(as)h(enti-)-8 1647 y(ties)g(instead)g(of)g(attrib)o
(utes)g(makes)h(the)f(model)h(v)o(ery)f(adapt-)-8 1697
y(able)j(for)g(ne)o(w)h(requirements)f(and)h(also)f(allo)o(ws)g(a)h
(smooth)-8 1747 y(inte)o(gration)8 b(into)h(v)o(arious)h(application)f
(domains.)-50 1806 y Fh(\017)21 b Fj(Object-Oriented)9
b(Data)h(Model)-8 1856 y Fi(One)15 b(reason)h(why)f(object-oriented)f
(data)i(models)f(are)h(be-)-8 1906 y(coming)10 b(increasingly)g
(popular)g(is)g(the)h(possibility)c(to)k(spec-)-8 1956
y(ify)h(the)g(beha)o(viour)g(of)g(entities)g(and)h(hence)g(to)g
(encapsulate)-8 2005 y(functions)i(within)f(objects.)30
b(Another)15 b(reason)i(lies)f(in)f(the)-8 2055 y(e)o(xtended)10
b(modelling)e(capabilities)h(in)h(terms)g(of)f(typing)f(and)-8
2105 y(classi\002cation.)26 b(The)16 b(generic)f(object)f(model)h
Fj(OM)h Fi(chosen)-8 2155 y(for)10 b(representing)g(our)h(product)f
(data)h(model)f(makes)i(a)g(clear)-8 2205 y(delimitation)i(between)j
(the)g(object)f(representation)g(\(T)m(yp-)-8 2254 y(ing\))11
b(and)h(the)g(semantic)h(grouping)d(of)h(objects)h(\(Classi\002ca-)-8
2304 y(tion\),)e(and)g(can)i(be)f(re)o(garded)g(as)h(a)f(po)o(werful)f
(tool)f(for)i(mod-)-8 2354 y(elling)e(comple)o(x)h(data)h(structures.)
-50 2413 y Fh(\017)21 b Fj(Dif)o(fer)n(ent)10 b(Le)o(vels)i(of)d
(Modelling)-8 2463 y Fi(The)i(process)g(of)f(classifying,)g(of)g
(structuring,)e(and)j(of)f(char)o(-)-8 2513 y(acterizing)i(a)i(product)
d(can)j(be)f(seen)g(as)h(dif)o(ferent)e(le)o(v)o(els)h(of)-8
2563 y(data)j(modelling,)h(or)f(as)h(dif)o(ferent)e(abstract)h(vie)o
(ws)h(of)e(the)-8 2613 y(data.)30 b(W)m(e)17 b(belie)o(v)o(e)f(that)f
(it)h(is)f(really)h(necessary)h(to)f(make)-8 2662 y(this)d(kind)h(of)g
(abstraction)g(for)g(the)g(reason)h(of)g(simplifying)1070
42 y(product)8 b(data)i(representation.)i(W)m(e)d(are)h(con)n(vinced)f
(that)g(our)1070 91 y(proposed)f(product)g(data)h(model)g(makes)g(it)f
(much)i(simpler)e(to)1070 141 y(manage)j(product)f(data.)1037
211 y(T)m(o)i(date,)h(our)f(prototype)e(system)j(can)g(be)f
(characterized)i(as)f(a)987 261 y(system)e(that)e(pro)o(vides)1028
331 y Fh(\017)21 b Fi(Internet)9 b(access)k(through)8
b(a)j(generic)g(Internet)e(interface,)1028 388 y Fh(\017)21
b Fi(access)h(to)e(the)f(database)j(by)d(using)g(a)i(standard)f(WWW)
1070 438 y(bro)o(wser)n(,)1028 495 y Fh(\017)h Fi(capabilities)7
b(for)h(rapid)g(prototyping)d(of)j(object-oriented)f(In-)1070
544 y(ternet)j(applications,)1028 601 y Fh(\017)21 b
Fi(a)11 b(po)o(werful)e(query)h(language,)g(and)1028
658 y Fh(\017)21 b Fi(support)i(for)i(modelling)e(comple)o(x)j
(structured)d(product)1070 708 y(data.)1037 778 y(By)14
b(e)o(xtending)g(our)g(data)i(model)e(with)g(the)h(notion)e(of)h
Fj(Pr)n(od-)987 828 y(uct)c(Descriptions)f Fi(and)h(by)g(porting)e(the)
i(prototype)f(system)h(to)g(the)987 878 y(Ja)o(v)o(a)j(en)n(vironment,)
e(our)g(product)g(information)f(system)i(will)e(be-)987
928 y(come)g(more)g(platform)f(independent)g(and)g(e)o(v)o(en)i(more)f
(open)f(to)g(all)987 977 y(sorts)h(of)g(application)f(demands.)987
1087 y Fk(Refer)o(ences)1013 1184 y Fb([1])21 b(B.-C.)14
b(Bj)s(\250)-15 b(ork.)26 b Fa(Requir)o(ements)10 b(and)i(information)h
(structur)o(es)d(for)1077 1230 y(b)o(uilding)f(pr)n(oduct)g(data)g
(models)p Fb(.)14 b(PhD)9 b(thesis,)g(Helsinki)g(Uni)o(v)o(er)o(-)1077
1276 y(sity)g(of)h(T)m(echnology)n(,)d(Finland,)i(Dec.)f(1995.)1013
1316 y([2])21 b(Eigner+P)o(artner)16 b(GmbH,)h(Ruschgraben)c(133,)k
(D-76139)e(Karl-)1077 1362 y(sruhe,)8 b(German)o(y)n(.)13
b Fa(CADIM/EDB)p Fb(.)1013 1402 y([3])21 b(A.)9 b(Erni)g(and)f(M.)h(C.)
g(Norrie.)k(Sno)o(wNet:)e(An)d(Agent-Based)f(Inter)o(-)1077
1448 y(net)g(T)m(ourist)h(Information)g(Service.)h(In)e
Fa(Pr)n(oc.)g(of)h(the)f(4th)g(Int.)i(Conf)o(.)1077 1493
y(on)e(Information)h(and)f(Communications)g(T)m(ec)o(hnology)e(in)j(T)m
(ourism)1077 1539 y(\(ENTER'97\))p Fb(,)h(Edinb)o(ur)o(gh,)g(Scotland,)
g(Jan.)f(1997.)1013 1579 y([4])21 b(M.)13 b(C.)f(Norrie.)24
b(An)12 b(Extended)e(Entity-Relationship)i(Approach)1077
1625 y(to)g(Data)g(Management)e(in)j(Object-Oriented)f(Systems.)21
b(In)13 b Fa(12th)1077 1671 y(Intl.)8 b(Conf)o(.)g(on)f
(Entity-Relationship)g(Appr)n(oac)o(h)p Fb(,)f(pages)f(390\226401,)1077
1716 y(Dallas,)k(T)m(e)o(xas,)g(Dec.)g(1993.)f(Springer)o(-V)l(erlag,)h
(LNCS)g(823.)1013 1757 y([5])21 b(M.)13 b(C.)g(Norrie.)25
b(Distinguishing)11 b(T)m(yping)h(and)f(Classi\002cation)g(in)1077
1802 y(Object)e(Data)h(Models.)k(In)c Fa(Information)f(Modelling)g(and)
g(Knowl-)1077 1848 y(edge)g(Bases)p Fb(,)i(v)o(olume)f(VI,)i(chapter)f
(25.)g(IOS,)h(1995.)19 b(\(originally)1077 1894 y(appeared)9
b(in)j(Proc.)f(European-Japanes)o(e)d(Seminar)k(on)f(Informa-)1077
1939 y(tion)i(and)e(Kno)o(wledge)g(Modelling,)j(Stockholm,)f(Sweden,)f
(June)1077 1985 y(1994\).)1013 2025 y([6])21 b(M.)12
b(C.)g(Norrie)h(and)e(A.)h(W)s(\250)-15 b(ur)o(gler)n(.)22
b(OMS)12 b(Object-Oriented)g(Data)1077 2071 y(Management)e(System.)22
b(T)m(echnical)11 b(report,)i(Institute)g(for)g(Infor)o(-)1077
2117 y(mation)j(Systems,)g(ETH)g(Zurich,)i(CH-8092)d(Zurich,)i(Switzer)
o(-)1077 2162 y(land,)9 b(1997.)1013 2203 y([7])21 b(S.)13
b(Schwarze.)23 b Fa(Con\002gur)o(ation)11 b(of)j(Multiple-V)l(ariant)f
(Pr)n(oducts:)1077 2248 y(Application)k(Orientation)h(and)f(V)l
(aguenes)o(s)e(in)j(Customer)e(Re-)1077 2294 y(quir)o(ements)p
Fb(.)d(PhD)c(thesis,)h(Swiss)f(Federal)g(Institute)h(of)g(T)m(echnol-)
1077 2340 y(ogy)n(,)e(Zurich,)h(Aug.)g(1996.)1013 2380
y([8])21 b(A.)12 b(Steiner)g(and)f(M.)i(C.)f(Norrie.)23
b(T)m(emporal)12 b(Object)g(Role)f(Mod-)1077 2426 y(elling.)h(In)d
Fa(Confer)o(ence)c(on)j(Advanced)e(Information)i(Systems)e(En-)1077
2471 y(gineering)h(\(CAiSE\))p Fb(.)k(Barcelona,)d(July)g(1997.)13
b(to)c(appear)n(.)1013 2512 y([9])21 b(U.)9 b(R.)g(.)g(B.)f(N.)h(.)g
(A.)g(Storr)n(.)k Fa(Computer)7 b(Inte)o(gr)o(ated)g(Manufactoring)1077
2557 y(and)h(Engineering)p Fb(.)k(Addison-W)m(esle)o(y)n(,)c(1993.)994
2598 y([10])21 b(N.)12 b(W)o(irth.)21 b Fa(Compiler)10
b(Construction)p Fb(.)19 b(Addison-W)m(esle)o(y)n(,)10
b(1)h(edi-)1077 2643 y(tion,)f(1996.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
