<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:p="urn:schemas-microsoft-com:office:powerpoint"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="client-server_files/filelist.xml">
<link rel=Edit-Time-Data href="client-server_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>The Client-Server Model – part 1</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Francis Marchese</o:Author>
  <o:LastAuthor>Francis Marchese</o:LastAuthor>
  <o:Revision>21</o:Revision>
  <o:TotalTime>265</o:TotalTime>
  <o:Created>2007-02-03T18:53:00Z</o:Created>
  <o:LastSaved>2007-02-04T20:07:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>5141</o:Words>
  <o:Characters>29306</o:Characters>
  <o:Company>Pace University</o:Company>
  <o:Lines>244</o:Lines>
  <o:Paragraphs>68</o:Paragraphs>
  <o:CharactersWithSpaces>34379</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DrawingGridHorizontalSpacing>6 pt</w:DrawingGridHorizontalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>2</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1 -369098753 63 0 4129279 0;}
@font-face
	{font-family:"\@Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:128;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1 -369098753 63 0 4129279 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;}
h2
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:13.5pt;
	margin-bottom:.0001pt;
	text-indent:-13.5pt;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:16.0pt;
	font-family:"Times New Roman";
	color:black;
	font-weight:normal;}
h3
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:29.25pt;
	margin-bottom:.0001pt;
	text-indent:-11.25pt;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:14.0pt;
	font-family:"Times New Roman";
	color:black;
	font-weight:normal;}
h4
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:45.0pt;
	margin-bottom:.0001pt;
	text-indent:-9.0pt;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman";
	color:black;
	font-weight:normal;}
h5
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:63.0pt;
	margin-bottom:.0001pt;
	text-indent:-9.0pt;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	font-weight:normal;}
h6
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:6;
	font-size:20.0pt;
	font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:16.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
a:link, span.MsoHyperlink
	{color:#D4876C;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:73.45pt 49.6pt 73.45pt 49.6pt;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:-2;
	mso-list-type:simple;
	mso-list-template-ids:517221256;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-text:*;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	margin-left:0in;
	text-indent:0in;}
@list l1
	{mso-list-id:69425016;
	mso-list-type:hybrid;
	mso-list-template-ids:-702386484 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l1:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:282617435;
	mso-list-type:hybrid;
	mso-list-template-ids:-1105947176 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l3
	{mso-list-id:326369756;
	mso-list-type:hybrid;
	mso-list-template-ids:-407979292 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l3:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4
	{mso-list-id:368802129;
	mso-list-type:hybrid;
	mso-list-template-ids:-1040419868 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l4:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l4:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l5
	{mso-list-id:542405195;
	mso-list-type:hybrid;
	mso-list-template-ids:-475743658 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l6
	{mso-list-id:753893297;
	mso-list-type:hybrid;
	mso-list-template-ids:33871238 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l6:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l6:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l6:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7
	{mso-list-id:883102147;
	mso-list-type:hybrid;
	mso-list-template-ids:481203762 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l7:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l7:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l7:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8
	{mso-list-id:951980726;
	mso-list-type:hybrid;
	mso-list-template-ids:247629508 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l8:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l8:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l8:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9
	{mso-list-id:1000500459;
	mso-list-type:hybrid;
	mso-list-template-ids:-1019296884 937187096 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l9:level1
	{mso-level-number-format:roman-lower;
	mso-level-text:"\(%1\)";
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.5in;}
@list l9:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l9:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10
	{mso-list-id:1038239607;
	mso-list-type:hybrid;
	mso-list-template-ids:-1143181016 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l10:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l10:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l10:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11
	{mso-list-id:1073890742;
	mso-list-type:hybrid;
	mso-list-template-ids:685259224 67698689 67698689 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l11:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l11:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l11:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l11:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12
	{mso-list-id:1104611433;
	mso-list-type:hybrid;
	mso-list-template-ids:-1472720132 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l12:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l12:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l12:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13
	{mso-list-id:1159270001;
	mso-list-type:hybrid;
	mso-list-template-ids:629992548 455141918 67698689 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l13:level1
	{mso-level-number-format:roman-lower;
	mso-level-text:"\(%1\)";
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.5in;}
@list l13:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l13:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l13:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l14
	{mso-list-id:1218472414;
	mso-list-type:hybrid;
	mso-list-template-ids:490776512 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l14:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l14:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l14:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Wingdings;}
@list l14:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l14:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l14:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l14:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l14:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l14:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15
	{mso-list-id:1301619323;
	mso-list-type:hybrid;
	mso-list-template-ids:-73254742 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l15:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l15:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l15:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l15:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16
	{mso-list-id:1314530722;
	mso-list-type:hybrid;
	mso-list-template-ids:-744173094 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l16:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l16:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l16:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17
	{mso-list-id:1325932984;
	mso-list-type:hybrid;
	mso-list-template-ids:1256867280 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l17:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l17:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l17:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l18
	{mso-list-id:1332102032;
	mso-list-type:hybrid;
	mso-list-template-ids:1124512670 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l18:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l19
	{mso-list-id:1803764192;
	mso-list-type:hybrid;
	mso-list-template-ids:-1119822022 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l19:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l19:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l19:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20
	{mso-list-id:1812020045;
	mso-list-type:hybrid;
	mso-list-template-ids:-1792344182 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l20:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l20:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l20:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21
	{mso-list-id:1860654829;
	mso-list-type:hybrid;
	mso-list-template-ids:258798712 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l21:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l21:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l21:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l21:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l22
	{mso-list-id:1873415557;
	mso-list-template-ids:-1339142632;}
@list l22:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l23
	{mso-list-id:1896233955;
	mso-list-type:hybrid;
	mso-list-template-ids:1414584480 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l23:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l23:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l23:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24
	{mso-list-id:1915578284;
	mso-list-type:hybrid;
	mso-list-template-ids:-1692208004 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l24:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l24:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l24:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25
	{mso-list-id:1984775955;
	mso-list-type:hybrid;
	mso-list-template-ids:-1142100350 -1717643176 552522958 -1591598330 525923200 -99315536 885396596 388400582 -1696285934 466396558;}
@list l25:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l25:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l25:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26
	{mso-list-id:1996298634;
	mso-list-type:hybrid;
	mso-list-template-ids:90369886 67698689 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l26:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l26:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l26:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level1 lfo45
	{mso-level-number-format:bullet;
	mso-level-numbering:continue;
	mso-level-text:\F06E;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0in;
	mso-level-legacy-space:0in;
	margin-left:0in;
	text-indent:0in;
	mso-ansi-font-size:13.0pt;
	font-family:Wingdings;}
@list l0:level1 lfo48
	{mso-level-number-format:bullet;
	mso-level-numbering:continue;
	mso-level-text:\F06E;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0in;
	mso-level-legacy-space:0in;
	margin-left:0in;
	text-indent:0in;
	mso-ansi-font-size:9.5pt;
	font-family:Wingdings;}
@list l0:level1 lfo49
	{mso-level-number-format:bullet;
	mso-level-numbering:continue;
	mso-level-text:–;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	mso-level-legacy:yes;
	mso-level-legacy-indent:0in;
	mso-level-legacy-space:0in;
	margin-left:0in;
	text-indent:0in;
	mso-ansi-font-size:14.0pt;
	font-family:"Times New Roman";}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="4098">
  <o:colormru v:ext="edit" colors="#ddd,#eaeaea"/>
  <o:colormenu v:ext="edit" fillcolor="#eaeaea"/>
 </o:shapedefaults></xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#EAEAEA" lang=EN-US link="#D4876C" vlink=purple
style='tab-interval:.5in'>

<div class=Section1>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=1247
 style='width:935.25pt;mso-cellspacing:0in;background:#FFFFCC;mso-padding-alt:
 0in 0in 0in 0in'>
 <tr style='mso-yfti-irow:0;height:32.25pt'>
  <td width=1247 valign=top style='width:935.25pt;padding:0in 0in 0in 0in;
  height:32.25pt'>
  <h2><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
  normal'><span style='font-size:14.0pt;font-family:Arial'>CS865 – Distributed
  Software Development<o:p></o:p></span></i></b></h2>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes;height:32.25pt'>
  <td width=1247 valign=top style='width:935.25pt;background:#FFFF99;
  padding:0in 0in 0in 0in;height:32.25pt'>
  <h2 style='margin-left:0in;text-indent:0in'><b><i style='mso-bidi-font-style:
  normal'><span style='font-size:14.0pt;font-family:Arial'>The Client-Server
  Model </span></i></b><b style='mso-bidi-font-weight:normal'><i
  style='mso-bidi-font-style:normal'><span style='font-size:14.0pt;font-family:
  Arial'><o:p></o:p></span></i></b></h2>
  </td>
 </tr>
</table>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-family:Arial'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-family:Arial'>Based on:<o:p></o:p></span></b></p>

<ul style='margin-top:0in' type=disc>
 <li class=MsoNormal style='mso-list:l24 level1 lfo3;tab-stops:list .5in'><b><span
     style='font-family:Arial'>M.L. Liu, <i>Distributed Computing: Principles
     and Applications</i>, Addison-Wesley, 2004, ISBN-10: 0201796449</span></b></li>
</ul>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:18.0pt;font-family:Arial;
color:black'>Introduction</span></b><span style='font-family:Arial;mso-fareast-font-family:
"Arial Unicode MS";color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l24 level1 lfo3;
tab-stops:list .25in .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>The Client-Server paradigm is the most prevalent model for
distributed computing protocols.</span><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l24 level1 lfo3;
tab-stops:list .25in .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>It is the basis of all distributed computing paradigms at a higher
level of abstraction.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l24 level1 lfo3;
tab-stops:list .25in .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>It is <b>service</b>-oriented, and employs a <b>request-response
protocol</b>.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;color:black;
display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:black'>The Client-Server Paradigm</span></b><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";color:black;
display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l23 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>A server process, running on a server host, provides access to a
service.</span><span style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:
"Arial Unicode MS";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l23 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>A client process, running on a client host, accesses the service
via the server process.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l23 level1 lfo5;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>The interaction of the process proceeds according to a protocol.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;color:black;display:none;
mso-hide:all'><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:512.25pt;
 height:345pt'>
 <v:imagedata src="client-server_files/image002.jpg" o:title="fg5-1"/>
</v:shape><![endif]--><![if !vml]><img width=683 height=460
src="client-server_files/image042.jpg" v:shapes="_x0000_i1025"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;color:black;display:none;
mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;color:black;display:none;
mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:black'>Client-server applications and services<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l4 level1 lfo7;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>An application based on the client-server paradigm is a
client-server application.</span><span style='font-size:14.0pt;font-family:
Arial;mso-fareast-font-family:"Arial Unicode MS";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l4 level1 lfo7;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>On the Internet, many services are Client-server
applications.<span style='mso-spacerun:yes'>  </span>These services are often
known by the protocol that the application implements.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l4 level1 lfo7;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Well known Internet services include HTTP, FTP, DNS, finger,
gopher, etc. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l4 level1 lfo7;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>User applications may also be built using the client-server
paradigm.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;color:black;display:none;
mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:black'>Client-server system architecture vs. Client-server distributed
computing</span></b><span style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:
"Arial Unicode MS";color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoBodyText style='margin-left:.5in;text-indent:-.25in;mso-list:l10 level1 lfo9;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Client-server
</span><span style='font-size:14.0pt;font-family:Arial;color:blue'>system architecture</span><span
style='font-size:14.0pt;font-family:Arial'> - terms clients and servers refer
to computers, <o:p></o:p></span></p>

<p class=MsoBodyText style='margin-left:.5in;text-indent:-.25in;mso-list:l10 level1 lfo9;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Client-server
</span><span style='font-size:14.0pt;font-family:Arial;color:blue'>distributed
computing</span><span style='font-size:14.0pt;font-family:Arial'> paradigm -
terms refer to processes. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:black'>Client-server, an overloaded term</span></b><span
style='font-size:16.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><!--[if gte vml 1]><v:shape id="_x0000_i1026"
 type="#_x0000_t75" style='width:516pt;height:282.75pt'>
 <v:imagedata src="client-server_files/image004.jpg" o:title="fg5-2"/>
</v:shape><![endif]--><![if !vml]><img width=688 height=377
src="client-server_files/image043.jpg" v:shapes="_x0000_i1026"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:16.0pt;font-family:Arial;color:blue'>A
protocol/service session</span><span style='font-size:16.0pt;font-family:Arial;
mso-fareast-font-family:"Arial Unicode MS";color:blue;display:none;mso-hide:
all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l7 level1 lfo11;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b><span style='font-size:14.0pt;font-family:
Arial;color:black'>Session</span></b><span style='font-size:14.0pt;font-family:
Arial;color:black'> - the interaction between the server and one client. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l7 level1 lfo11;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Service managed by a server may be accessed by multiple clients
who desire the service, sometimes concurrently.<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l7 level1 lfo11;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Each client, when serviced by the server, engages in a separate
session with the server, during which it conducts a dialog with the server
until the client has obtained the service it required </span><span
style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;color:black;display:none;
mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:18.0pt;font-family:Arial;
color:black'>A service session</span></b><span style='font-family:Arial;
mso-fareast-font-family:"Arial Unicode MS";color:black;display:none;mso-hide:
all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1027" type="#_x0000_t75" style='width:258.75pt;height:293.25pt'>
 <v:imagedata src="client-server_files/image006.jpg" o:title="fg5-3"/>
</v:shape><![endif]--><![if !vml]><img width=345 height=391
src="client-server_files/image044.jpg" v:shapes="_x0000_i1027"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:18.0pt;font-family:Arial;
color:black'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:blue'>The Protocol for a Network Service</span></b><span
style='font-size:16.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:blue;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l16 level1 lfo13;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Protocol required <span class=GramE>to specify</span> the rules
that must be observed by the client and the server during the conduction of a
service.<span style='mso-spacerun:yes'>   </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l16 level1 lfo13;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Rules include specifications on matters such as :<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l13 level1 lfo15;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:Arial;color:black'><span
style='mso-list:Ignore'>(i)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>how the service is to be located, <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l13 level1 lfo15;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:Arial;color:black'><span
style='mso-list:Ignore'>(ii)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>the sequence of <span class=SpellE>interprocess</span>
communication, <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l13 level1 lfo15;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:Arial;color:black'><span
style='mso-list:Ignore'>(iii)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial;color:black'>the</span></span><span style='font-size:14.0pt;
font-family:Arial;color:black'> representation and interpretation of data
exchanged with each IPC.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo17;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>On the Internet, such protocols are specified in the RFCs
(Requests for <span class=SpellE>Coments</span>).<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h1><b style='mso-bidi-font-weight:normal'><span style='font-size:16.0pt;
font-family:Arial;color:blue'>Locating the service</span></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:16.0pt;font-family:
Arial;mso-fareast-font-family:"Arial Unicode MS";color:blue;display:none;
mso-hide:all'><o:p></o:p></span></b></h1>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo17;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>A mechanism must be available to allow a
client process to locate a server for a given service.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo17;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>A service can be located through the address
of the server process, in terms of the host name and protocol port number
assigned to the server process.<span style='mso-spacerun:yes'>   </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l11 level2 lfo17;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>This is the scheme for Internet
services.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l11 level2 lfo17;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>Each Internet service is assigned to a
specific port number.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l11 level2 lfo17;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>A well-known service such as ftp, HTTP,
or telnet is assigned a default port number reserved on each Internet host for
that service.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l11 level1 lfo17;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>At a higher level of abstraction, a
service may be identified using a logical name registered with a registry, <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l11 level2 lfo17;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>The logical name will need to be mapped to
the physical location of the server process.<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.25in;mso-list:l11 level2 lfo17;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol;mso-fareast-font-family:Symbol;
mso-bidi-font-family:Symbol;color:black'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:Arial;color:black'>If the mapping is performed at runtime
(that is, when a client process is run), then it is possible for the service’s
location to be dynamic, or moveable</span><span style='font-size:14.0pt;
font-family:Arial;color:black'>. </span><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:Arial;color:black'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:black'>Implementation of a network service</span></b><span
style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l3 level1 lfo19;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Must adhere to the specification for the protocol, including how
the dialogs of each session should proceed.<span style='mso-spacerun:yes'>  
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l3 level1 lfo19;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black;display:none;mso-hide:all'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>The specification defines </span><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";color:black;
display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l9 level1 lfo21;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:Arial;color:black'><span
style='mso-list:Ignore'>(i)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>which side (client or server) should speak first<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l9 level1 lfo21;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:Arial;color:black;display:none;
mso-hide:all'><span style='mso-list:Ignore'>(ii)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>the syntax and semantic of each request and response</span><span
style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.75in;text-indent:-.5in;mso-list:l9 level1 lfo21;
tab-stops:list .75in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:Arial;color:black;display:none;
mso-hide:all'><span style='mso-list:Ignore'>(iii)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial;color:black'>the</span></span><span style='font-size:14.0pt;
font-family:Arial;color:black'> action expected of each side upon receiving a
particular request or response.</span><span style='font-size:14.0pt;font-family:
Arial;mso-fareast-font-family:"Arial Unicode MS";color:black;display:none;
mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><b><span style='font-size:14.0pt;
font-family:Arial;color:black'>Interprocess</span></b></span><b><span
style='font-size:14.0pt;font-family:Arial;color:black'> communications (IPC)
and event synchronization </span></b><span style='font-size:14.0pt;font-family:
Arial;mso-fareast-font-family:"Arial Unicode MS";color:black;display:none;
mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;color:black'>The
interaction of the client and server processes follows a request-response
pattern.</span><span style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:
"Arial Unicode MS";color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1028" type="#_x0000_t75" style='width:174.75pt;height:304.5pt'>
 <v:imagedata src="client-server_files/image008.jpg" o:title="fg5-4"/>
</v:shape><![endif]--><![if !vml]><img width=233 height=406
src="client-server_files/image045.jpg" v:shapes="_x0000_i1028"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:blue'>Session IPC examples</span></b><span style='font-size:14.0pt;
font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";color:blue;
display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l6 level1 lfo23;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black;display:none;mso-hide:all;mso-bidi-font-weight:bold'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>The dialog in each session follows a pattern prescribed in the
protocol specified for the service.<b><span style='display:none;mso-hide:all'><o:p></o:p></span></b></span></p>

<div style='mso-char-wrap:1;mso-kinsoku-overflow:1;mso-line-spacing:"100 20 0";
mso-margin-left-alt:216'>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l6 level1 lfo23;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black;mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><b><span style='font-size:14.0pt;font-family:
Arial;color:black'>e.g. Daytime service [<a href="http://rfc.net/rfc0867.html">RFC867</a>]:<o:p></o:p></span></b></p>

</div>

<div style='mso-char-wrap:1;mso-kinsoku-overflow:1;mso-line-spacing:"100 20 0";
mso-margin-left-alt:468'>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0'>
  <td width=135 valign=top style='width:101.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Client</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:14.0pt;font-family:Arial;color:black'>: <o:p></o:p></span></b></p>
  </td>
  <td width=704 valign=top style='width:528.0pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Hello, &lt;client address&gt; here.<span
  style='mso-spacerun:yes'>  </span>May I have a timestamp <span class=GramE>please.</span><o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td width=135 valign=top style='width:101.6pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Server</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:14.0pt;font-family:Arial;color:black'>: <o:p></o:p></span></b></p>
  </td>
  <td width=704 valign=top style='width:528.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Here it is: (time stamp follows) <span style='mso-bidi-font-weight:
  bold'>World Wide Web session</span>:<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td width=135 valign=top style='width:101.6pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Client</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:14.0pt;font-family:Arial;color:black'>: <o:p></o:p></span></b></p>
  </td>
  <td width=704 valign=top style='width:528.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Hello<span class=GramE>,<span style='mso-spacerun:yes'> 
  </span>&lt;</span>client address&gt; here.<span style='mso-spacerun:yes'> 
  </span><o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3'>
  <td width=135 valign=top style='width:101.6pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Server</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:14.0pt;font-family:Arial;color:black'>: <o:p></o:p></span></b></p>
  </td>
  <td width=704 valign=top style='width:528.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Okay.<span style='mso-spacerun:yes'>  </span>I am a web server
  and <span class=GramE>speaks</span> protocol HTTP1.0.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:4'>
  <td width=135 valign=top style='width:101.6pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Client</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:14.0pt;font-family:Arial;color:black'>: <o:p></o:p></span></b></p>
  </td>
  <td width=704 valign=top style='width:528.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Great, please <span class=GramE>get<span
  style='mso-spacerun:yes'>  </span>me</span> the web page index.html at the root
  of your document tree.<o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:5;mso-yfti-lastrow:yes'>
  <td width=135 valign=top style='width:101.6pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Server</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:14.0pt;font-family:Arial;color:black'>: <o:p></o:p></span></b></p>
  </td>
  <td width=704 valign=top style='width:528.0pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;
  color:black'>Okay, here’s what’s in the page: (contents follows).<o:p></o:p></span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:
"Arial Unicode MS";color:black;display:none;mso-hide:all'><!--[if gte vml 1]><v:shape
 id="_x0000_i1029" type="#_x0000_t75" style='width:297.75pt;height:292.5pt'>
 <v:imagedata src="client-server_files/image012.jpg" o:title="fg5-6"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=397 height=390
src="client-server_files/image046.jpg" v:shapes="_x0000_i1029"><![endif]><o:p></o:p></span></p>

<div style='mso-line-spacing:"100 50 0";mso-margin-left-alt:216'>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:black'>The <span class=SpellE>getAddress</span> and <span class=SpellE>getPort</span>
Methods</span><span style='mso-color-index:3'></b><b><span style='font-size:
16.0pt;font-family:Arial'> </span></b><span style='font-size:16.0pt;font-family:
Arial'><o:p></o:p></span></p>

<p class=MsoNormal><!--[if gte vml 1]><v:shape id="_x0000_i1030" type="#_x0000_t75"
 style='width:521.25pt;height:150.75pt'>
 <v:imagedata src="client-server_files/image016.jpg" o:title="fg5-8"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=695 height=201
src="client-server_files/image047.jpg" v:shapes="_x0000_i1030"><![endif]><o:p></o:p></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'></span><o:p>&nbsp;</o:p></span></p>

</div>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:black'>Client-server protocol data representation</span></b><span
style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'>Part of the
specification of a protocol is the syntax and semantics of each request and
response.</span><span style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:
"Arial Unicode MS";color:black'><o:p></o:p></span></p>

<div style='mso-char-wrap:1;mso-kinsoku-overflow:1;mso-line-spacing:"100 20 0";
mso-margin-left-alt:216'>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l25 level1 lfo25;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>The choice of data representation depends on the nature and the
needs of the protocol.<o:p></o:p></span></p>

</div>

<div style='mso-char-wrap:1;mso-kinsoku-overflow:1;mso-line-spacing:"100 20 0";
mso-margin-left-alt:216'>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l25 level1 lfo25;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Representing data using text (character strings) is common, as it
facilitates data marshalling and allows the data to be readable by human.<o:p></o:p></span></p>

</div>

<div style='mso-char-wrap:1;mso-kinsoku-overflow:1;mso-line-spacing:"100 20 0";
mso-margin-left-alt:216'>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l25 level1 lfo25;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol;
color:black'><span style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial;
color:black'>Most well known Internet protocols are client-server,
request-response, and text-base.<o:p></o:p></span></p>

</div>

<p class=MsoNormal><span style='color:black;display:none;mso-hide:all'><o:p>&nbsp;</o:p></span></p>

<div style='mso-line-spacing:"100 50 0";mso-margin-left-alt:216'>

<p class=MsoNormal><b><span style='font-size:14.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

</div>

<h1><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
font-family:"Arial Unicode MS";mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:red'>Example:</span></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Arial Unicode MS";mso-fareast-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman";color:blue'> </span></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Arial Unicode MS";mso-fareast-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman";color:windowtext'>Daytime Client-server using Connectionless
Datagram Socket<o:p></o:p></span></b></h1>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'>UML class
diagram for <b><span style='color:blue;mso-bidi-font-style:italic'>DaytimeClient1</span></b><o:p></o:p></span></p>

<h2><b><span style='font-size:14.0pt;font-family:"Arial Unicode MS";mso-fareast-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman"'><!--[if gte vml 1]><v:shape id="_x0000_i1031" type="#_x0000_t75"
 style='width:414pt;height:294pt'>
 <v:imagedata src="client-server_files/image020.jpg" o:title="fg5-10"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=552 height=392
src="client-server_files/image048.jpg" v:shapes="_x0000_i1031"><![endif]><o:p></o:p></span></b></h2>

<h2><b><span style='font-size:14.0pt;font-family:"Arial Unicode MS";mso-fareast-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></b></h2>

<h2><b><span style='font-size:14.0pt;font-family:"Arial Unicode MS";mso-fareast-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman"'>Client-side <i style='mso-bidi-font-style:normal'>Presentation
logic</i></span></b><span style='font-size:14.0pt;font-family:"Arial Unicode MS";
mso-fareast-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></h2>

<h2><b><span style='font-size:14.0pt;font-family:"Courier New";color:blue;
mso-bidi-font-style:italic'>DaytimeClient1.java</span></b><span
style='font-size:14.0pt;font-family:Arial;color:blue'> </span><span
style='font-size:14.0pt;font-family:Arial'>encapsulates the client-side
presentation logic; that is, it provides the interface for a user of the client
process.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l21 level1 lfo27;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Code
in this class is concerned with obtaining input (the server address) from the
user, and displaying the output (the timestamp) to the user.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l21 level1 lfo27;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>To
obtain the timestamp, a method call to a “helper” class, </span><b><span
style='font-size:14.0pt;font-family:"Courier New";mso-bidi-font-style:italic'>DaytimeClientHelper1.java</span></b><span
style='font-size:14.0pt;font-family:Arial'>, is issued.<span
style='mso-spacerun:yes'>    </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l21 level1 lfo27;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>This
method hides the details of the application logic and the underlying service
logic.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:1.0in;text-indent:-.25in;mso-list:l21 level2 lfo27;
tab-stops:list 1.0in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:"Courier New";mso-fareast-font-family:"Courier New"'><span
style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>The
programmer of </span><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New"'>DaytimeClient1.java</span></b><span
style='font-size:14.0pt;font-family:Arial'> need not be aware of which socket
types is used for the IPC.<o:p></o:p></span></h2>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:13.5pt;background:white;border-collapse:collapse;
 border:none;mso-border-alt:solid windowtext .5pt;mso-yfti-tbllook:191;
 mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:.5pt solid windowtext;
 mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=933 valign=top style='width:700.1pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> <span class=SpellE>java.io</span>.*;<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  This module contains the <span class=SpellE>presentaton</span> logic of a <span
  class=SpellE>DaytimeClient</span>.<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>public</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> class </span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New";color:blue'>DaytimeClient1</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> {<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>public</span> static void main(String[] <span class=SpellE>args</span>)
  {<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=SpellE>InputStreamReader</span> is = new <span class=SpellE><span
  class=GramE>InputStreamReader</span></span><span class=GramE>(</span><span
  class=SpellE>System.in</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=SpellE>BufferedReader</span> <span class=SpellE>br</span> = new <span
  class=SpellE><span class=GramE>BufferedReader</span></span><span class=GramE>(</span>is);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=GramE>try</span> {<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Welcome to the Daytime client.\n&quot; +<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                            </span>&quot;What is the
  name of the server host?&quot;);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>hostName</span> = <span class=SpellE><span
  class=GramE>br.readLine</span></span><span class=GramE>(</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=GramE>if</span> (<span class=SpellE>hostName.length</span>() == 0) //
  if user did not enter a name<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>            </span><span
  class=SpellE><span class=GramE>hostName</span></span> = &quot;<span
  class=SpellE>localhost</span>&quot;;<span style='mso-spacerun:yes'> 
  </span>//<span style='mso-spacerun:yes'>   </span>use the default host name<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;What is the port number of the server host?&quot;);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>portNum</span> = <span class=SpellE><span
  class=GramE>br.readLine</span></span><span class=GramE>(</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=GramE>if</span> (<span class=SpellE>portNum.length</span>() == 0)<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>            </span><span
  class=SpellE><span class=GramE>portNum</span></span> = &quot;13&quot;;<span
  style='mso-spacerun:yes'>          </span>// default port number<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Here is the timestamp received from the
  server&quot;<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span><span
  style='mso-spacerun:yes'>                       </span>+ </span></b><span
  class=GramE><b style='mso-bidi-font-weight:normal'><span style='font-size:
  12.0pt;font-family:"Courier New";color:blue'>DaytimeClientHelper1.getTimestamp(</span></b></span><span
  class=SpellE><b style='mso-bidi-font-weight:normal'><span style='font-size:
  12.0pt;font-family:"Courier New";color:blue'>hostName</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New";color:blue'>, <span class=SpellE>portNum</span>));</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span>} //
  end try<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=GramE>catch</span> (Exception ex) {<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>ex.printStackTrace</span></span><span
  class=GramE>(</span> );<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span>} //
  end catch<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>} //end
  main<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'>} // end class<o:p></o:p></span></b></h2>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h2><b><span style='font-size:14.0pt;font-family:Arial'>Client-side<i
style='mso-bidi-font-style:normal'> Application logic</i></span></b><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
style='font-size:14.0pt;font-family:Arial'><o:p></o:p></span></i></b></h2>

<h2><span class=GramE><b><span style='font-size:14.0pt;font-family:"Courier New";
color:blue;mso-bidi-font-style:italic'>DaytimeClientHelper1.java<span
style='mso-spacerun:yes'>  </span></span></b><span style='font-size:14.0pt;
font-family:Arial'>encapsulates</span></span><span style='font-size:14.0pt;
font-family:Arial'> the client-side application logic.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l14 level1 lfo29;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>Performs the IPC for sending a request and receiving a
response, using a specialized class of the </span><span class=SpellE><b><i><span
style='font-size:14.0pt;font-family:"Courier New"'>DatagramSocket</span></i></b></span><b><i><span
style='font-size:14.0pt;font-family:"Courier New"'> =&gt; <span class=SpellE>myClientDatagramSocket</span></span></i></b><span
style='font-size:14.0pt;font-family:Arial'>.</span></span><span
style='font-size:14.0pt;font-family:Arial'><span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></h2>

<h2 style='margin-left:1.0in;text-indent:-.25in;mso-list:l14 level2 lfo29;
tab-stops:list 1.0in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:"Courier New";mso-fareast-font-family:"Courier New"'><span
style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Note:<o:p></o:p></span></h2>

<h2 style='margin-left:1.5in;text-indent:-.25in;mso-list:l14 level3 lfo29;
tab-stops:list 1.5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:
Wingdings'><span style='mso-list:Ignore'>§<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>the</span></span><span style='font-size:14.0pt;font-family:
Arial'> details of using datagram sockets are hidden from this module.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:1.5in;text-indent:-.25in;mso-list:l14 level3 lfo29;
tab-stops:list 1.5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Wingdings;mso-fareast-font-family:Wingdings;mso-bidi-font-family:
Wingdings'><span style='mso-list:Ignore'>§<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>this</span></span><span style='font-size:14.0pt;font-family:
Arial'> module does not need to deal with the byte array for carrying the
payload data.<o:p></o:p></span></h2>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:13.5pt;background:white;border-collapse:collapse;
 border:none;mso-border-alt:solid windowtext .5pt;mso-yfti-tbllook:191;
 mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:.5pt solid windowtext;
 mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=877 valign=top style='width:658.1pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> java.net.*;<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  This class is a module which provides that application logic<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  <span class=GramE>for</span> a Daytime Client.<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/</span></b><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;font-family:"Courier New";color:blue'><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>public</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> class </span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New";color:blue'>DaytimeClientHelper1</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> {<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-tab-count:1'>  </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>public</span> static String </span></b><span class=SpellE><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New";color:blue'>getTimestamp</span></b></span><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;font-family:"Courier New";color:blue'>(String
  <span class=SpellE>hostName</span>, String <span class=SpellE>portNum</span>){</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span>String
  timestamp = &quot;&quot;; <o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=GramE>try</span> {<span style='mso-spacerun:yes'>      </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:2'>        </span><span
  style='mso-spacerun:yes'>    </span><span class=SpellE>InetAddress</span> <span
  class=SpellE>serverHost</span> = <span class=SpellE><span class=GramE>InetAddress.getByName</span></span><span
  class=GramE>(</span><span class=SpellE>hostName</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:2'>        </span><span
  style='mso-spacerun:yes'>    </span><span class=SpellE><span class=GramE>int</span></span>
  <span class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>portNum</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>          </span>//
  instantiates a datagram socket for both sending<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>          </span>//
  and receiving data<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='mso-spacerun:yes'>    </span><span
  class=SpellE>MyDatagramSocket</span> <span class=SpellE>mySocket</span> = new
  <span class=SpellE><span class=GramE>MyDatagramSocket</span></span><span
  class=GramE>(</span>);<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>          </span><span
  class=SpellE><span class=GramE>mySocket.sendMessage</span></span><span
  class=GramE>(</span> <span class=SpellE>serverHost</span>, <span
  class=SpellE>serverPort</span>, &quot;&quot;);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-tab-count:3'>          </span><span
  style='mso-spacerun:yes'> </span>// now receive the timestamp<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>          </span><span
  class=GramE>timestamp</span> = <span class=SpellE>mySocket.receiveMessage</span>();<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-tab-count:2'>     </span><span
  style='mso-spacerun:yes'>    </span><span class=SpellE><span class=GramE>mySocket.close</span></span><span
  class=GramE>(</span> );<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>       </span>} //
  end try<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-tab-count:1'>  </span><span
  style='mso-spacerun:yes'>    </span><span class=GramE>catch</span> (Exception
  ex) {<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;There is a problem: &quot; + ex);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-tab-count:1'>  </span><span
  style='mso-spacerun:yes'>    </span>}<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>       </span><span
  class=GramE>return</span> timestamp;<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-spacerun:yes'> </span>} //end <span class=SpellE>getTimeStamp</span>
  <o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'>} //end class&nbsp;<o:p></o:p></span></b></h2>
  </td>
 </tr>
</table>

<h2><b><span style='font-size:12.0pt'><o:p>&nbsp;</o:p></span></b></h2>

<h2><b><span style='font-size:14.0pt;font-family:Arial'>Service logic</span></b><span
style='font-size:14.0pt;font-family:Arial'><o:p></o:p></span></h2>

<h2><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>MyClientDatagramSocket</span></b><b><span
style='font-size:14.0pt;font-family:"Courier New";mso-bidi-font-style:italic'>.</span></b><b><span
style='font-size:14.0pt;font-family:"Courier New";color:blue;mso-bidi-font-style:
italic'>java</span></b></span><span style='font-size:14.0pt;font-family:"Courier New"'>
<o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l17 level1 lfo31;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>provides</span></span><span style='font-size:14.0pt;
font-family:Arial'> the details of the IPC service using the datagram socket
API.<o:p></o:p></span></h2>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:13.5pt;background:white;border-collapse:collapse;
 border:none;mso-border-alt:solid windowtext .5pt;mso-yfti-tbllook:191;
 mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:.5pt solid windowtext;
 mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=845 valign=top style='width:634.1pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> java.net.*;<o:p></o:p></span></b></h2>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> <span class=SpellE>java.io</span>.*;<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  A subclass of <span class=SpellE>DatagramSocket</span> which contains <o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  <span class=GramE>methods</span> for sending and receiving messages<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>public</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> class </span></b><span class=SpellE><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;font-family:"Courier New";color:blue'>MyClientDatagramSocket</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> extends </span></b><span class=SpellE><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;font-family:"Courier New";color:blue'>DatagramSocket</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> {<o:p></o:p></span></b></h2>
  <h2><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'>static</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New"'> final <span class=SpellE>int</span> MAX_LEN = 100;<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span class=GramE>MyClientDatagramSocket</span></span><span
  class=GramE>(</span> ) throws <span class=SpellE>SocketException</span>{<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>     </span><span
  class=GramE>super(</span> );<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span class=GramE>MyClientDatagramSocket</span></span><span
  class=GramE>(</span><span class=SpellE>int</span> <span class=SpellE>portNo</span>)
  throws <span class=SpellE>SocketException</span>{<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>     </span><span
  class=GramE>super(</span><span class=SpellE>portNo</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>public</span> void </span></b><span class=SpellE><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New";color:blue'>sendMessage</span></b></span><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;font-family:"Courier New";color:blue'>(<span
  class=SpellE>InetAddress</span> <span class=SpellE>receiverHost</span>,<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                           </span><span
  class=SpellE><span class=GramE>int</span></span> <span class=SpellE>receiverPort</span>,<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                           </span>String message)<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:2'>       </span><span
  style='mso-spacerun:yes'>          </span><span class=GramE>throws</span> <span
  class=SpellE>IOException</span> {<span style='mso-tab-count:1'>    </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=GramE>byte[</span> ] <span class=SpellE>sendBuffer</span> = <span
  class=SpellE>message.getBytes</span>( );<span
  style='mso-spacerun:yes'>                                     </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE>DatagramPacket</span> datagram = <o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>            </span><span
  class=GramE>new</span> <span class=SpellE>DatagramPacket</span>(<span
  class=SpellE>sendBuffer</span>, <span class=SpellE>sendBuffer.length</span>, <o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                                  </span><span
  class=SpellE><span class=GramE>receiverHost</span></span>, <span
  class=SpellE>receiverPort</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>this.send</span></span><span class=GramE>(</span>datagram);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>} // end <span
  class=SpellE>sendMessage</span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>public</span> String </span></b><span class=SpellE><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New";color:blue'>receiveMessage</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;font-family:
  "Courier New";color:blue'>()</span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;font-family:"Courier New"'><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-tab-count:2'>     </span><span
  class=GramE>throws</span> <span class=SpellE>IOException</span> {<span
  style='mso-tab-count:2'>         </span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=GramE>byte[</span> ] <span class=SpellE>receiveBuffer</span> = new
  byte[MAX_LEN];<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE>DatagramPacket</span> datagram =<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>            </span><span
  class=GramE>new</span> <span class=SpellE>DatagramPacket</span>(<span
  class=SpellE>receiveBuffer</span>, MAX_LEN);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=SpellE><span class=GramE>this.receive</span></span><span class=GramE>(</span>datagram);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String message = new <span class=GramE>String(</span><span
  class=SpellE>receiveBuffer</span>);<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>         </span><span
  class=GramE>return</span> message;<o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>} //end <span
  class=SpellE>receiveMessage</span><o:p></o:p></span></b></h2>
  <h2><b style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;
  font-family:"Courier New"'>} //end class<o:p></o:p></span></b></h2>
  </td>
 </tr>
</table>

<h2><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></h2>

<h1><o:p>&nbsp;</o:p></h1>

<h1><b style='mso-bidi-font-weight:normal'><span style='font-size:16.0pt;
font-family:Arial'>Server-side software<o:p></o:p></span></b></h1>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial'>UML
Diagram for the<span style='color:blue'> Datagram Daytime server</span></span></b><span
style='font-size:14.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:blue;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1032" type="#_x0000_t75" style='width:512.25pt;height:294pt'>
 <v:imagedata src="client-server_files/image018.jpg" o:title="fg5-9"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=683 height=392
src="client-server_files/image049.jpg" v:shapes="_x0000_i1032"><![endif]><o:p></o:p></span></p>

<h1><span style='font-size:14.0pt'><span style='mso-spacerun:yes'> </span><o:p></o:p></span></h1>

<h1><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt'><span
style='mso-spacerun:yes'> </span></span></b><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;font-family:Arial;color:windowtext'>Presentation
logic<o:p></o:p></span></b></h1>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l17 level1 lfo31;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Typically,
there is very little presentation logic on the server-side.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l17 level1 lfo31;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>In
this case, the only user input is for the server port, which, for simplicity,
is handled using a command-line argument.<o:p></o:p></span></h2>

<h2><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></h2>

<h2><b><span style='font-size:14.0pt;font-family:Arial'>Application logic</span></b><span
style='font-size:14.0pt;font-family:Arial'><o:p></o:p></span></h2>

<h2><b><span style='font-size:14.0pt;font-family:"Courier New";color:blue;
mso-bidi-font-style:italic'>DaytimeServer1.java</span></b><b><i><span
style='font-size:14.0pt;font-family:Arial'> </span></i></b><span
style='font-size:14.0pt;font-family:Arial'>class encapsulates the server-side
application logic.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l15 level1 lfo33;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>This module executes in a forever loop, waiting for a
request form a client and then conduct</span></span><span style='font-size:
14.0pt;font-family:Arial'> a service session for that client.<span
style='mso-spacerun:yes'>   </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l15 level1 lfo33;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>The
module performs the IPC for receiving a request and sending a response, using a
specialized class of the </span><span class=SpellE><b><span style='font-size:
14.0pt;font-family:"Courier New";mso-bidi-font-style:italic'>DatagramSocket</span></b></span><b><i><span
style='font-size:14.0pt;font-family:Arial'>, </span></i></b><span class=SpellE><b><span
style='font-size:14.0pt;font-family:"Courier New";color:blue;mso-bidi-font-style:
italic'>myServerDatagramSocket</span></b></span><span style='font-size:14.0pt;
font-family:"Courier New";color:blue'>.</span><span style='font-size:14.0pt;
font-family:Arial'><span style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.5in;text-indent:-.25in;mso-list:l15 level1 lfo33;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Note
<o:p></o:p></span></h2>

<h2 style='margin-left:1.0in;text-indent:-.25in;mso-list:l15 level2 lfo33;
tab-stops:list 1.0in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:"Courier New";mso-fareast-font-family:"Courier New"'><span
style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>the</span></span><span style='font-size:14.0pt;font-family:
Arial'> details of using datagram sockets are hidden from this module. <o:p></o:p></span></h2>

<h2 style='margin-left:1.0in;text-indent:-.25in;mso-list:l15 level2 lfo33;
tab-stops:list 1.0in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:"Courier New";mso-fareast-font-family:"Courier New"'><span
style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>In
particular, this module does not need to deal with the byte array for carrying
the payload data.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2><b><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></b></h2>

<h2><b><span style='font-size:14.0pt;font-family:Arial'>Service logic</span></b><span
style='font-size:14.0pt;font-family:Arial'><o:p></o:p></span></h2>

<h2><span style='font-size:14.0pt;font-family:Arial'><span style='mso-tab-count:
1'>    </span>The </span><span class=SpellE><b><span style='font-size:14.0pt;
font-family:"Courier New";color:blue;mso-bidi-font-style:italic'>MyServerDatagram.java</span></b></span><span
style='font-size:14.0pt;font-family:Arial'> class provides the details of the
IPC service, in this case using the datagram socket API.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>DaytimeServer1.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=895 valign=top style='width:671.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import <span class=SpellE>java.util.Date</span>;<span
  style='mso-spacerun:yes'>   </span>// for obtaining a timestamp<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  This module contains the application logic of a Daytime server<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>* <span
  class=GramE>which</span> uses a connection datagram socket for <span
  class=SpellE>interprocess</span> communication.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>* A
  command-line argument is required to specify the server port.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>DaytimeServer1</span>
  {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main</span>(String[] <span
  class=SpellE>args</span>) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>int</span> <span class=SpellE>serverPort</span> =
  13;<span style='mso-spacerun:yes'>    </span>// default port<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>if (<span class=SpellE>args.length</span> == 1 )<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>args</span>[0]);<span style='mso-spacerun:yes'>       </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// instantiates a datagram socket for both sending<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// and receiving data<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>MyServerDatagramSocket</span></span> <span
  class=SpellE>mySocket</span> = new <span class=SpellE><span style='color:
  blue'>MyServerDatagramSocket</span></span><span style='color:blue'>(<span
  class=SpellE>serverPort</span>);</span> <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Daytime server ready.&quot;);<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>while (true) {<span style='mso-spacerun:yes'>  </span>// forever loop<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE><span style='color:blue'>DatagramMessage</span></span>
  request = <span class=SpellE>mySocket.receiveMessageAndSender</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span><span style='mso-spacerun:yes'>     </span><span class=SpellE>System.out.println</span>(&quot;Request
  received&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// The message received is unimportant; it is the sender's<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// address that we need in order to reply.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:3'>              </span><span
  style='mso-spacerun:yes'>   </span>// Now obtain the timestamp from the local
  system.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>Date timestamp = new Date ();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>System.out.println</span>(&quot;timestamp sent:
  &quot;+ <span class=SpellE>timestamp.toString</span>());<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// Now send the reply to the requestor<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>mySocket.sendMessage</span>(<span class=SpellE>request.getAddress</span>(
  ),<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                       </span><span class=SpellE>request.getPort</span>(
  ), <span class=SpellE>timestamp.toString</span>( ));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:2'>          </span><span
  style='mso-spacerun:yes'>   </span>} //end while<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>} // end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span>(&quot;There is a problem:
  &quot; + ex);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>MyServerDatagramSocket.java</span></b></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
"Courier New";color:blue'><o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=887 valign=top style='width:665.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>* A
  subclass of <span class=SpellE>DatagramSocket</span> which contains <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  methods for sending and receiving messages<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span class=SpellE><span
  style='color:blue'>MyServerDatagramSocket</span></span> extends <span
  class=SpellE><span style='color:blue'>DatagramSocket</span></span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>static final <span class=SpellE>int</span>
  MAX_LEN = 100; <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>MyServerDatagramSocket</span></span><span
  style='color:blue'>(<span class=SpellE>int</span> <span class=SpellE>portNo</span>)</span>
  throws <span class=SpellE>SocketException</span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>    
  </span>super(<span class=SpellE>portNo</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public void <span class=SpellE><span style='color:blue'>sendMessage</span></span>(<span
  class=SpellE>InetAddress</span> <span class=SpellE>receiverHost</span>,<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                           </span><span
  class=SpellE>int</span> <span class=SpellE>receiverPort</span>,<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                           </span>String message)<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:2'>       </span><span
  style='mso-spacerun:yes'>          </span>throws <span class=SpellE>IOException</span>
  {<span style='mso-tab-count:1'>    </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>byte[ ] <span class=SpellE>sendBuffer</span> = <span class=SpellE>message.getBytes</span>(
  );<span style='mso-spacerun:yes'>                                     </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span style='color:blue'>DatagramPacket</span></span>
  datagram = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span class=SpellE>DatagramPacket</span>(<span class=SpellE>sendBuffer</span>,
  <span class=SpellE>sendBuffer.length</span>, <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                                  </span><span
  class=SpellE>receiverHost</span>, <span class=SpellE>receiverPort</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>this.send</span>(datagram);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>} //
  end <span class=SpellE>sendMessage</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public String <span class=SpellE><span style='color:blue'>receiveMessage</span></span><span
  style='color:blue'>( )</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:2'>          </span>throws
  <span class=SpellE>IOException</span> {<span style='mso-tab-count:2'>         </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>byte[ ] <span class=SpellE>receiveBuffer</span> = new byte[MAX_LEN];<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>DatagramPacket</span> datagram =<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span class=SpellE>DatagramPacket</span>(<span class=SpellE>receiveBuffer</span>,
  MAX_LEN);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>this.receive</span>(datagram);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String message = new String(<span class=SpellE>receiveBuffer</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>return message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end <span class=SpellE>receiveMessage</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public <span class=SpellE>DatagramMessage</span> <span class=SpellE><span
  style='color:blue'>receiveMessageAndSender</span></span><span
  style='color:blue'>( )</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:2'>          </span>throws
  <span class=SpellE>IOException</span> {<span style='mso-tab-count:2'>         </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>byte[ ] <span class=SpellE>receiveBuffer</span> = new byte[MAX_LEN];<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span style='color:blue'>DatagramPacket</span></span>
  datagram =<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span class=SpellE>DatagramPacket</span>(<span class=SpellE>receiveBuffer</span>,
  MAX_LEN);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>this.receive</span>(datagram);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// create a <span class=SpellE>DatagramMessage</span> object, to
  contain message<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>//<span style='mso-spacerun:yes'>   </span>received and sender's
  address<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span style='color:blue'>DatagramMessage</span></span>
  <span class=SpellE>returnVal</span> = new <span class=SpellE>DatagramMessage</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>returnVal.putVal</span>(new String(<span
  class=SpellE>receiveBuffer</span>),<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                          </span><span class=SpellE>datagram.getAddress</span>(
  ),<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                          </span><span class=SpellE>datagram.getPort</span>(
  ));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>return <span class=SpellE>returnVal</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end <span class=SpellE>receiveMessage</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} //end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>DatagramMessage.java</span></b></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
"Courier New";color:blue'><o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=823 valign=top style='width:617.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>* A
  class to use with <span class=SpellE>MyServerDatagramSocket</span> for<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  returning a message and the sender's address<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span class=SpellE>DatagramMessage</span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private String message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>InetAddress</span> <span class=SpellE>senderAddress</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>int</span> <span class=SpellE>senderPort</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public void <span class=SpellE>putVal</span>(String message, <span
  class=SpellE>InetAddress</span> <span class=SpellE>addr</span>, <span
  class=SpellE>int</span> port) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>this.message</span> = message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>this.senderAddress</span> = <span class=SpellE>addr</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>this.senderPort</span> = port;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public String <span class=SpellE>getMessage</span>( ) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>return <span class=SpellE>this.message</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span><span
  style='mso-spacerun:yes'>  </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public <span class=SpellE>InetAddress</span> <span class=SpellE>getAddress</span>(
  ) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>return <span class=SpellE>this.senderAddress</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public <span class=SpellE>int</span> <span class=SpellE>getPort</span>(
  ) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>return <span class=SpellE>this.senderPort</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<h1><span style='font-family:"Arial Unicode MS";mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></h1>

<h2><span style='font-size:14.0pt;font-family:"Arial Unicode MS";mso-fareast-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></h2>

<p class=MsoNormal><b><span style='font-size:20.0pt;font-family:Arial;
color:blue'>The Client-Server Model </span></b><span style='font-family:Arial;
mso-fareast-font-family:"Arial Unicode MS";color:blue;display:none;mso-hide:
all'><o:p></o:p></span></p>

<h2><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></h2>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:#003366'>Connectionless server vs. connection-oriented server</span></b><span
style='font-size:16.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<h2><span style='font-size:14.0pt;font-family:Arial;color:blue'>A connectionless
server <o:p></o:p></span></h2>

<h3 style='margin-left:.5in;text-indent:-.25in;mso-list:l20 level1 lfo35;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Arial'>Uses a
connectionless IPC API (e.g., connectionless datagram socket)<o:p></o:p></span></h3>

<h3 style='margin-left:.5in;text-indent:-.25in;mso-list:l20 level1 lfo35;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Arial'>Sessions with
concurrent clients can be interleaved.<o:p></o:p></span></h3>

<h2><span style='font-size:14.0pt;font-family:Arial;color:blue'>A
connection-oriented server <o:p></o:p></span></h2>

<h3 style='margin-left:.5in;text-indent:-.25in;mso-list:l19 level1 lfo37;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Arial'>Uses a
connection-oriented IPC API (e.g. stream-mode <span class=GramE>socket )</span><o:p></o:p></span></h3>

<h3 style='margin-left:.5in;text-indent:-.25in;mso-list:l19 level1 lfo37;
tab-stops:list .5in'><![if !supportLists]><span style='font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-family:Arial'>Sessions with concurrent
clients can only be sequential unless the server is threaded<o:p></o:p></span></h3>

<h2><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></h2>

<h2><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
font-family:Arial;color:red'>Example:</span></b><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;font-family:Arial'> Connectionless <span
class=SpellE>EchoServer</span> 1 <o:p></o:p></span></b></h2>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l1 level1 lfo39;tab-stops:list .5in;mso-layout-grid-align:none'><![if !supportLists]><span
lang=EN-GB style='font-size:14.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;color:#231F20;mso-ansi-language:EN-GB'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-GB style='font-size:14.0pt;
font-family:Arial;color:#231F20;mso-ansi-language:EN-GB'>An echo server is a
server that echoes back whatever it receives from a client. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l1 level1 lfo39;tab-stops:list .5in;mso-layout-grid-align:none'><![if !supportLists]><span
lang=EN-GB style='font-size:14.0pt;font-family:Symbol;mso-fareast-font-family:
Symbol;mso-bidi-font-family:Symbol;color:#231F20;mso-ansi-language:EN-GB;
mso-bidi-font-style:italic'><span style='mso-list:Ignore'>·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-GB style='font-size:14.0pt;
font-family:Arial;color:#231F20;mso-ansi-language:EN-GB'>For example, if a
client sends the server the string <i>Hello there! </i><span class=GramE>the</span>
server will respond with the exact data it received from the client -<span
style='mso-spacerun:yes'>  </span><i>Hello there!<o:p></o:p></i></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoServer1.java<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l12 level1 lfo41;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Forever
Looping<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l12 level1 lfo41;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Server
reads line from socket and then writes the line back to the socket addressing
reply to sender<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l12 level1 lfo41;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Since
there is no connection, server can interact with many clients interleaving
messages<o:p></o:p></span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=863 valign=top style='width:647.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This module contains the application logic
  of an echo server<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* which uses a connectionless datagram
  socket for <span class=SpellE>interprocess</span> <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* <span class=GramE>communication</span>.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* A command-line argument is required to
  specify the server port.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoServer1</span>
  {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main</span>(String[] <span
  class=SpellE>args</span>) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>int</span> <span class=SpellE>serverPort</span> =
  7;<span style='mso-spacerun:yes'>    </span>// default port<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>if (<span class=SpellE>args.length</span> == 1 )<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>args</span>[0]);<span style='mso-spacerun:yes'>       </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// instantiates a datagram socket for both sending<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// and receiving data<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='color:blue'><span
  style='mso-spacerun:yes'>   </span><span class=SpellE>MyServerDatagramSocket</span>
  <span class=SpellE>mySocket</span> = new <span class=SpellE>MyServerDatagramSocket</span>(<span
  class=SpellE>serverPort</span>); <o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Echo server ready.&quot;);<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>         </span>while (true) {<span
  style='mso-spacerun:yes'>  </span></span></b><b style='mso-bidi-font-weight:
  normal'><span style='font-family:"Courier New"'>// forever loop<span
  style='color:blue'><o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>            </span><span class=SpellE>DatagramMessage</span>
  request = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>mySocket.receiveMessageAndSender</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>            </span><span class=SpellE>System.out.println</span>(&quot;Request
  received&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>            </span>String message = <span
  class=SpellE>request.getMessage</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span style='mso-spacerun:yes'> 
  </span><span style='mso-spacerun:yes'>          </span><span class=SpellE>System.out.println</span>(&quot;message
  received: &quot;+ message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>            </span></span></b><b style='mso-bidi-font-weight:
  normal'><span style='font-family:"Courier New"'>// Now send the echo to the
  requestor<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>            </span><span class=SpellE>mySocket.sendMessage</span>(<span
  class=SpellE>request.getAddress</span>( ),<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>request.getPort</span>(
  ), message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span style='mso-tab-count:2'>          </span><span
  style='mso-spacerun:yes'>   </span>} </span></b><b style='mso-bidi-font-weight:
  normal'><span style='font-family:"Courier New"'>//end while<span
  style='color:blue'><o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>} // end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<span
  style='mso-spacerun:yes'>      </span><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoClient1.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=847 valign=top style='width:635.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  This module contains the <span class=SpellE>presentaton</span> logic of an
  Echo Client.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoClient1</span>
  {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>static</span> final String <span class=SpellE>endMessage</span> =
  &quot;.&quot;;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void main(String[] <span class=SpellE>args</span>) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>InputStreamReader</span> is = new <span
  class=SpellE>InputStreamReader</span>(<span class=SpellE>System.in</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>BufferedReader</span> <span class=SpellE>br</span>
  = new <span class=SpellE>BufferedReader</span>(is);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span>(&quot;Welcome to the Echo
  client.\n&quot; +<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                            </span>&quot;What is the
  name of the server host?&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>hostName</span> = <span class=SpellE>br.readLine</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>if (<span class=SpellE>hostName.length</span>() == 0) // if user did
  not enter a name<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>hostName</span> = &quot;<span class=SpellE>localhost</span>&quot;;<span
  style='mso-spacerun:yes'>  </span>//<span style='mso-spacerun:yes'>  
  </span>use the default host name<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;What is the port number of the server host?&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>portNum</span> = <span class=SpellE>br.readLine</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>if (<span class=SpellE>portNum.length</span>() == 0)<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>portNum</span> = &quot;7&quot;;<span
  style='mso-spacerun:yes'>          </span>// default port number<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span style='color:blue'>EchoClientHelper1</span> helper = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span style='color:blue'>EchoClientHelper1(<span class=SpellE>hostName</span>,
  <span class=SpellE>portNum</span>);</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>boolean</span> done = false;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String message, echo;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>while (!done) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>System.out.println</span>(&quot;Enter a line to
  receive an echo back from the server, &quot;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                            </span>+ &quot;or a
  single <span class=SpellE>peroid</span> to quit.&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>message = <span class=SpellE>br.readLine</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>if ((<span class=SpellE>message.trim</span>()).equals (<span
  class=SpellE>endMessage</span>)){<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span>done = true;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>helper.done</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>else {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>       
  </span><span style='mso-spacerun:yes'>       </span>echo = <span
  class=SpellE>helper.getEcho</span>( message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>System.out.println</span>(echo);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>} // end while<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>} // end try<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<span
  style='mso-spacerun:yes'>   </span><span style='mso-spacerun:yes'>   </span><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoClientHelper1.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=839 valign=top style='width:629.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  This class is a module which provides the application logic<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>* <span
  class=GramE>for</span> an Echo client using connectionless datagram socket.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoClientHelper1
  </span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE><span style='color:blue'>MyClientDatagramSocket</span></span>
  <span class=SpellE>mySocket</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>InetAddress</span> <span class=SpellE>serverHost</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>int</span> <span class=SpellE>serverPort</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='color:blue'>EchoClientHelper1(String <span class=SpellE>hostName</span>,
  String <span class=SpellE>portNum</span>) <o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>throws <span class=SpellE>SocketException</span>, <span class=SpellE>UnknownHostException</span>
  { <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:1'>   </span><span style='mso-spacerun:yes'>   </span><span
  class=SpellE>this.serverHost</span> = <span class=SpellE>InetAddress.getByName</span>(<span
  class=SpellE>hostName</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:2'>        </span><span class=SpellE>this.serverPort</span>
  = <span class=SpellE>Integer.parseInt</span>(<span class=SpellE>portNum</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// instantiates a datagram socket for both sending<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// and receiving data<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span class=SpellE>this.mySocket</span> =
  new <span class=SpellE>MyClientDatagramSocket</span>(); <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>} <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public String <span class=SpellE><span style='color:blue'>getEcho</span></span><span
  style='color:blue'>( String message)</span> <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-spacerun:yes'>   </span>throws <span class=SpellE>SocketException</span>,
  <span class=SpellE>IOException</span> {<span
  style='mso-spacerun:yes'>                                                                                
  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String echo = &quot;&quot;;<span style='mso-spacerun:yes'>    </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>mySocket.sendMessage</span>( <span class=SpellE>serverHost</span>,
  <span class=SpellE>serverPort</span>, message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>   </span>// now receive the echo<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>echo = <span class=SpellE>mySocket.receiveMessage</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>return echo;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end <span class=SpellE>getEcho</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public void <span style='color:blue'>done( )</span> throws <span
  class=SpellE>SocketException</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>mySocket.close</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>}<span style='mso-spacerun:yes'>  </span>//end done<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} //end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:#003366'>Concurrent client sessions with EchoServer1 </span></b><span
style='font-size:16.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1033" type="#_x0000_t75" style='width:300.75pt;height:316.5pt'>
 <v:imagedata src="client-server_files/image026.jpg" o:title="fg5-13"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=401 height=422
src="client-server_files/image050.jpg" v:shapes="_x0000_i1033"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h2><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
font-family:Arial;color:red'><o:p>&nbsp;</o:p></span></b></h2>

<h2><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
font-family:Arial;color:red'>Example:</span></b><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;font-family:Arial'> Connection-oriented <span
class=SpellE>EchoServer</span> 2 – </span></b><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;font-family:Arial;color:blue'>Iterative
Server</span></b><b style='mso-bidi-font-weight:normal'><span style='font-size:
14.0pt;font-family:Arial'><o:p></o:p></span></b></h2>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l26 level1 lfo43;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Uses</span><span
style='font-family:Arial'> </span><span style='font-size:14.0pt;font-family:
Arial'>stream-mode socket API<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l26 level1 lfo43;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>No
Overlapping of Sessions<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:14.0pt;font-family:Arial;
color:#003366'>Two consecutive client sessions with echo server2</span></b><span
style='font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";color:black;
display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1034" type="#_x0000_t75" style='width:309pt;height:324.75pt'>
 <v:imagedata src="client-server_files/image028.jpg" o:title="fg5-14"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=412 height=433
src="client-server_files/image051.jpg" v:shapes="_x0000_i1034"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoServer2.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=927 valign=top style='width:695.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This module contains the application logic
  of an echo server<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* <span class=GramE>which</span> uses a
  stream socket for <span class=SpellE>interprocess</span><span
  style='mso-spacerun:yes'>  </span>communication.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* A command-line argument is required to
  specify the server </span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'>port</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New";
  color:red'>.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoServer2
  </span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>static</span> final String <span class=SpellE>endMessage</span> =
  &quot;.&quot;;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main</span>(String[] <span
  class=SpellE>args</span>) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>int</span> <span class=SpellE>serverPort</span> =
  7;<span style='mso-spacerun:yes'>    </span>// default port<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>if (<span class=SpellE>args.length</span> == 1 )<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>args</span>[0]);<span style='mso-spacerun:yes'>       </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// instantiates a stream socket for accepting<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     </span><span
  style='mso-spacerun:yes'>    </span>//<span style='mso-spacerun:yes'>  
  </span>connections<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>ServerSocket</span></span> <span
  class=SpellE>myConnectionSocket</span> = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span class=SpellE><span style='color:blue'>ServerSocket</span></span><span
  style='color:blue'>(<span class=SpellE>serverPort</span>);</span> <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>    
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Daytime server ready.&quot;);<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>while (true) {<span style='mso-spacerun:yes'>  </span>// forever loop<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// wait to accept a connection <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>    
  </span><span style='mso-spacerun:yes'>   </span><span class=SpellE><span
  class=GramE>System.out.println</span></span><span class=GramE>(</span>&quot;Waiting
  for a connection.&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE><span style='color:blue'>MyStreamSocket</span></span>
  <span class=SpellE>myDataSocket</span> = new <span class=SpellE><span
  style='color:blue'>MyStreamSocket</span></span><span style='color:blue'><o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                </span>(<span class=SpellE>myConnectionSocket.accept</span>(
  ));</span></b><b style='mso-bidi-font-weight:normal'><span style='font-family:
  "Courier New"'><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>       
  </span><span class=SpellE>System.out.println</span>(&quot;connection
  accepted&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>boolean</span> done = false;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span style='mso-spacerun:yes'>      </span><span style='color:blue'>while
  (!done) {<o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span>message = <span class=SpellE>myDataSocket.receiveMessage</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'>/**/<span
  style='mso-spacerun:yes'>           </span><span class=SpellE>System.out.println</span>(&quot;message
  received: &quot;+ message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span>if ((<span class=SpellE>message.trim</span>()).equals
  (<span class=SpellE>endMessage</span>)){<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                  </span></span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>//Session
  over; close the data socket.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'>/**/<span
  style='mso-spacerun:yes'>              </span><span class=SpellE><span
  class=GramE>System.out.println</span></span><span class=GramE>(</span>&quot;Session
  over.&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                  </span><span class=SpellE>myDataSocket.close</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                  </span>done = true;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span>} //end if<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span>else {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                  </span></span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>//
  Now send the echo to the requestor<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>                  </span><span class=SpellE>myDataSocket.sendMessage</span>(message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>               </span>} //end else<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span style='mso-tab-count:2'>          </span><span
  style='mso-spacerun:yes'>       </span>} //end while !done<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>         </span>} //end while forever<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>} // end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>MyStreamSocket.java</span></b></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
"Courier New";color:blue'><o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=799 valign=top style='width:599.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* A wrapper class of Socket which contains <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* methods for sending and receiving messages</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New";
  color:blue'><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span class=SpellE><span
  style='color:blue'>MyStreamSocket</span></span> extends <span
  style='color:blue'>Socket</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span style='color:blue'>Socket</span><span
  style='mso-spacerun:yes'>  </span><span class=SpellE>socket</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-spacerun:yes'> </span>private <span class=SpellE>BufferedReader</span>
  input;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>PrintWriter</span> output;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>MyStreamSocket</span></span><span
  style='color:blue'>(<span class=SpellE>InetAddress</span> <span class=SpellE>acceptorHost</span>,
  <span class=SpellE>int</span> <span class=SpellE>acceptorPort</span> )</span>
  throws <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     </span><span
  class=SpellE>SocketException,IOException</span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>socket = new Socket(<span class=SpellE>acceptorHost</span>, <span
  class=SpellE>acceptorPort</span> );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>setStreams</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>MyStreamSocket</span></span><span
  style='color:blue'>(Socket <span class=SpellE>socket</span>)</span><span
  style='mso-spacerun:yes'>  </span>throws <span class=SpellE>IOException</span>
  {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>this.socket</span> = socket;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>setStreams</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private void <span class=SpellE><span style='color:blue'>setStreams</span></span><span
  style='color:blue'>( )</span> throws <span class=SpellE>IOException</span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// get an input stream for reading from the data socket<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>InputStream</span> <span class=SpellE>inStream</span>
  = <span class=SpellE>socket.getInputStream</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>input = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>new <span class=SpellE>BufferedReader</span>(new <span class=SpellE>InputStreamReader</span>(<span
  class=SpellE>inStream</span>));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>OutputStream</span> <span class=SpellE>outStream</span>
  = <span class=SpellE>socket.getOutputStream</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// create a <span class=SpellE>PrinterWriter</span> object for
  character-mode output<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>output = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>new <span class=SpellE>PrintWriter</span>(new <span class=SpellE>OutputStreamWriter</span>(<span
  class=SpellE>outStream</span>));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public void <span class=SpellE><span style='color:blue'>sendMessage</span></span><span
  style='color:blue'>(String message)</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:2'>       </span><span
  style='mso-spacerun:yes'>          </span>throws <span class=SpellE>IOException</span>
  {<span style='mso-tab-count:1'>    </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>output.println</span>(message);<span
  style='mso-spacerun:yes'>   </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>//The ensuing flush method call is necessary for the data to<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// be written to the socket data stream before the<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// socket is closed.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>output.flush</span>();<span
  style='mso-spacerun:yes'>               </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  // end <span class=SpellE>sendMessage</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public String <span class=SpellE><span style='color:blue'>receiveMessage</span></span><span
  style='color:blue'>( )</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:2'>          </span>throws
  <span class=SpellE>IOException</span> {<span style='mso-tab-count:1'>    </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>// read a line from the data stream<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String message = <span class=SpellE>input.readLine</span>( );<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>return message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end <span class=SpellE>receiveMessage</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} //end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoClient2.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=895 valign=top style='width:671.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This module contains the <span
  class=SpellE>presentaton</span> logic of an Echo Client.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoClient2</span>
  {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>static</span> final String <span class=SpellE>endMessage</span> =
  &quot;.&quot;;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main</span>(String[] <span
  class=SpellE>args</span>) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>InputStreamReader</span> is = new <span
  class=SpellE>InputStreamReader</span>(<span class=SpellE>System.in</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>BufferedReader</span> <span class=SpellE>br</span>
  = new <span class=SpellE>BufferedReader</span>(is);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span>(&quot;Welcome to the Echo
  client.\n&quot; +<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>&quot;What is the name of the server host?&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>hostName</span> = <span class=SpellE>br.readLine</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>if (<span class=SpellE>hostName.length</span>() == 0) // if user did
  not enter a name<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>hostName</span> = &quot;<span class=SpellE>localhost</span>&quot;;<span
  style='mso-spacerun:yes'>  </span>//<span style='mso-spacerun:yes'>  
  </span>use the default host name<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;What is the port number of the server host?&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>portNum</span> = <span class=SpellE>br.readLine</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>if (<span class=SpellE>portNum.length</span>() == 0)<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>portNum</span> = &quot;7&quot;;<span
  style='mso-spacerun:yes'>          </span>// default port number<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span style='color:blue'>EchoClientHelper2 </span>helper = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span style='color:blue'>EchoClientHelper2(<span class=SpellE>hostName</span>,
  <span class=SpellE>portNum</span>);</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>boolean</span> done = false;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String message, echo;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>while (!done) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>System.out.println</span>(&quot;Enter a line to
  receive an echo &quot;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span>+ &quot;from the server, or a
  single period to quit.&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>message = <span class=SpellE>br.readLine</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>if ((<span class=SpellE>message.trim</span>()).equals (<span
  class=SpellE>endMessage</span>)){<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span>done = true;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>helper.done</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>else {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span>echo = <span class=SpellE>helper.getEcho</span>(
  message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>System.out.println</span>(echo);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>} // end while<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>} // end try<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>} //end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoClientHelper2.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=863 valign=top style='width:647.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This class is a module which provides the
  application logic<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* <span class=GramE>for</span> an Echo
  client using stream-mode socket.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New";
  color:blue'><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoClientHelper2
  </span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>static</span> final String <span class=SpellE>endMessage</span> =
  &quot;.&quot;;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>MyStreamSocket</span> <span class=SpellE>mySocket</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>private
  <span class=SpellE>InetAddress</span> <span class=SpellE>serverHost</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>private <span class=SpellE>int</span> <span class=SpellE>serverPort</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='color:blue'>EchoClientHelper2(String <span class=SpellE>hostName,String</span>
  <span class=SpellE>portNum</span>) <o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>throws <span class=SpellE>SocketException</span>, <span class=SpellE>UnknownHostException</span>,
  <span class=SpellE>IOException</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>    </span><span
  style='mso-tab-count:1'> </span><span style='mso-spacerun:yes'>     </span><span
  class=SpellE>this.serverHost</span> = <span class=SpellE>InetAddress.getByName</span>(<span
  class=SpellE>hostName</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:2'>        </span><span class=SpellE>this.serverPort</span>
  = <span class=SpellE>Integer.parseInt</span>(<span class=SpellE>portNum</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>//Instantiates a stream-mode socket and wait for a connection.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span class=SpellE>this.mySocket</span> =
  new <span class=SpellE>MyStreamSocket</span>(<span class=SpellE>this.serverHost</span>,<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>this.serverPort</span>); <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'> 
  </span><span class=SpellE>System.out.println</span>(&quot;Connection request
  made&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  // end constructor<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public String <span class=SpellE><span style='color:blue'>getEcho</span></span><span
  style='color:blue'>( String message)</span> throws <span class=SpellE>SocketException</span>,<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>IOException</span>{<span
  style='mso-spacerun:yes'>     </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String echo = &quot;&quot;;<span style='mso-spacerun:yes'>    </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>mySocket.sendMessage</span>( message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>   </span>// now receive the echo<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>echo = <span class=SpellE>mySocket.receiveMessage</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>return echo;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  // end <span class=SpellE>getEcho</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public void <span style='color:blue'>done( )</span> throws <span
  class=SpellE>SocketException</span>,<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                              </span><span
  class=SpellE>IOException</span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>mySocket.sendMessage</span>(<span class=SpellE>endMessage</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>mySocket.close</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  // end done <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} //end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h6><o:p>&nbsp;</o:p></h6>

<h6><span style='font-size:16.0pt;font-family:Arial'>Iterative servers vs.
Concurrent servers<o:p></o:p></span></h6>

<h2 style='mso-list:l0 level1 lfo45'><![if !supportLists]><span
style='font-size:13.0pt;mso-bidi-font-size:16.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings'><span
style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]>A connection-oriented server can be threaded so
that it can service multiple clients concurrently.<span
style='mso-spacerun:yes'>  </span>Such a server is said to be a <b><i><span
style='color:blue'>concurrent server</span></i></b>.</h2>

<h2 style='mso-list:l0 level1 lfo45'><![if !supportLists]><span
style='font-size:13.0pt;mso-bidi-font-size:16.0pt;font-family:Wingdings;
mso-fareast-font-family:Wingdings;mso-bidi-font-family:Wingdings'><span
style='mso-list:Ignore'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]>An unthreaded connection-oriented server is said
to be an <b><i><span style='color:blue'>iterative server</span></i></b>.</h2>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:#003366'>A Concurrent, Connection-oriented Server</span></b><span
style='font-size:16.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1035" type="#_x0000_t75" style='width:512.25pt;height:280.5pt'>
 <v:imagedata src="client-server_files/image030.jpg" o:title="fg5-15"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=683 height=374
src="client-server_files/image052.jpg" v:shapes="_x0000_i1035"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h2><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
font-family:Arial;color:red'>Example:</span></b><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;font-family:Arial'> Concurrent Server - <span
class=SpellE>EchoServer</span> 3 <o:p></o:p></span></b></h2>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.25in;mso-list:l8 level1 lfo47;
tab-stops:list .5in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Client-side
unchanged – can use EchoClient2 <o:p></o:p></span></p>

<p class=MsoNormal><b><span style='font-size:20.0pt;color:#003366'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><b><span style='font-size:20.0pt;color:#003366'>Sequence
diagram – EchoServer3</span></b><span style='font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1036" type="#_x0000_t75" style='width:336.75pt;height:351pt'>
 <v:imagedata src="client-server_files/image032.jpg" o:title="fg5-16"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=449 height=468
src="client-server_files/image053.jpg" v:shapes="_x0000_i1036"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoServer3.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=815 valign=top style='width:611.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This module contains the application logic
  of an echo server<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* <span class=GramE>which</span> uses a
  stream-mode socket for <span class=SpellE>interprocess</span> communication.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* Unlike EchoServer2, this server services
  clients concurrently.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* A command-line argument is required to
  specify the server port.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>EchoServer3</span>
  {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main(String[] <span
  class=SpellE>args</span>)</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>int</span> <span class=SpellE>serverPort</span> =
  7;<span style='mso-spacerun:yes'>    </span>// default port<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>if (<span class=SpellE>args.length</span> == 1 )<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>args</span>[0]);<span style='mso-spacerun:yes'>       </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// instantiates a stream socket for accepting<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>//<span style='mso-spacerun:yes'>   </span>connections<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>ServerSocket</span></span> <span
  class=SpellE>myConnectionSocket</span> = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span class=SpellE><span style='color:blue'>ServerSocket</span></span><span
  style='color:blue'>(<span class=SpellE>serverPort</span>);</span> <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>    
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Echo server ready.&quot;);<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>while (true) {<span style='mso-spacerun:yes'>  </span>// forever loop<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// wait to accept a connection <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>       
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Waiting for a connection.&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE><span style='color:blue'>MyStreamSocket</span></span>
  <span class=SpellE>myDataSocket</span> = new <span class=SpellE>MyStreamSocket</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                </span>(<span class=SpellE>myConnectionSocket.accept</span>(
  ));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>       
  </span><span class=SpellE>System.out.println</span>(&quot;connection
  accepted&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// Start a thread to handle this client's <span class=SpellE>sesson</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>            </span>Thread</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>theThread</span> = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span>new Thread(new <span
  class=SpellE>EchoServerThread</span>(<span class=SpellE>myDataSocket</span>));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>theThread.start</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// and go on to the next client<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>} //end while forever<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     </span><span
  style='mso-spacerun:yes'>  </span>} // end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>EchoServerThread.java</span></b></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
"Courier New";color:blue'><o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=775 valign=top style='width:581.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This module is to be used with a
  concurrent Echo server.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* Its run method carries out the logic of a
  client session.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/</span></b><b style='mso-bidi-font-weight:
  normal'><span style='font-family:"Courier New";color:blue'><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>class <span class=SpellE><span
  style='color:blue'>EchoServerThread</span></span> implements <span
  class=SpellE><span style='color:blue'>Runnable</span></span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=GramE>static</span> final String <span class=SpellE>endMessage</span> =
  &quot;.&quot;;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>MyStreamSocket</span></span> <span
  class=SpellE>myDataSocket</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>EchoServerThread</span></span><span
  style='color:blue'>(<span class=SpellE>MyStreamSocket</span> <span
  class=SpellE>myDataSocket</span>) </span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>this.myDataSocket</span> = <span class=SpellE>myDataSocket</span>;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public void <span style='color:blue'>run( )</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>boolean</span> done = false;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String message;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>while (!done) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span>message = <span class=SpellE>myDataSocket.receiveMessage</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span>(&quot;message received:
  &quot;+ message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span>if ((<span class=SpellE>message.trim</span>()).equals (<span
  class=SpellE>endMessage</span>)){<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                </span>//Session over; close the
  data socket.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span
  style='mso-spacerun:yes'>            </span><span class=SpellE><span
  class=GramE>System.out.println</span></span><span class=GramE>(</span>&quot;Session
  over.&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                </span><span class=SpellE>myDataSocket.close</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                </span>done = true;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span>} //end if<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span>else {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                </span>// Now send the echo to the
  requestor<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                </span><span class=SpellE>myDataSocket.sendMessage</span>(message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span>} //end else<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>} //end while !done<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>       
  </span>}// end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>       
  </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>          
  </span><span class=SpellE>System.out.println</span>(&quot;Exception caught in
  thread: &quot; + ex);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>       
  </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end run<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} //end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='font-size:16.0pt;font-family:Arial;
color:#003366'>Echo3Server concurrent sessions</span></b><span
style='font-size:16.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";
color:black;display:none;mso-hide:all'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1037" type="#_x0000_t75" style='width:382.5pt;height:254.25pt'>
 <v:imagedata src="client-server_files/image034.jpg" o:title="fg5-17"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=510 height=339
src="client-server_files/image054.jpg" v:shapes="_x0000_i1037"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h1><b style='mso-bidi-font-weight:normal'><span style='font-size:16.0pt;
font-family:Arial'>Server Thread <span class=GramE>class<span
style='mso-spacerun:yes'>  </span>template</span><o:p></o:p></span></b></h1>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:13.5pt;background:white;border-collapse:collapse;
 border:none;mso-border-alt:solid windowtext .5pt;mso-yfti-tbllook:191;
 mso-padding-alt:0in 5.4pt 0in 5.4pt;mso-border-insideh:.5pt solid windowtext;
 mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes;height:243.85pt'>
  <td width=765 valign=top style='width:574.1pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt;height:243.85pt'>
  <h2 style='margin-left:0in;text-indent:0in'><span class=GramE><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;mso-bidi-font-size:
  10.0pt;font-family:"Courier New"'>class</span></b></span><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'> </span></b><span class=SpellE><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New";color:blue'>ServerThread</span></b></span><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'> implements </span></b><span class=SpellE><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New";color:blue'>Runnable</span></b></span><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'> {<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>   </span><span class=GramE>static</span>
  final String <span class=SpellE>endMessage</span> = &quot;.&quot;;<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>   </span></span></b><span
  class=SpellE><b style='mso-bidi-font-weight:normal'><span style='font-size:
  12.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";color:blue'>MyStreamSocket</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;mso-bidi-font-size:
  10.0pt;font-family:"Courier New"'> <span class=SpellE>myDataSocket</span>;<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>   </span><span class=SpellE><span
  class=GramE>ServerThread</span></span><span class=GramE>(</span><span
  class=SpellE>MyStreamSocket</span> <span class=SpellE>myDataSocket</span>) {<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=SpellE>this.myDataSocket</span> = <span class=SpellE>myDataSocket</span>;<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>   </span>} <o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>   </span><span class=GramE>public</span>
  void </span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New";
  color:blue'>run( ) </span></b><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New"'>{<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span><span
  class=SpellE><span class=GramE>boolean</span></span> done = false;<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span>String message;<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span><span class=GramE>try</span>
  {<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>        </span></span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-size:12.0pt;mso-bidi-font-size:
  10.0pt;font-family:"Courier New";color:#FF3300'>//add code here<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span>}// end try<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span><span class=GramE>catch</span>
  (Exception ex) {<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>           </span><span
  class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Exception caught in thread: &quot; + ex);<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>      </span>}<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in;text-indent:0in'><b style='mso-bidi-font-weight:
  normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:
  "Courier New"'><span style='mso-spacerun:yes'>   </span>} //end run<o:p></o:p></span></b></h2>
  <h2 style='margin-left:0in'><b style='mso-bidi-font-weight:normal'><span
  style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Courier New"'>}
  //end class</span></b><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>
  <o:p></o:p></span></h2>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h6><span class=SpellE><span style='font-size:18.0pt;font-family:Arial;
color:blue'>Stateful</span></span><span style='font-size:18.0pt;font-family:
Arial;color:blue'> servers vs. Stateless servers</span><span style='font-size:
18.0pt;font-family:Arial;mso-fareast-font-family:"Arial Unicode MS";color:blue'><o:p></o:p></span></h6>

<div style='mso-line-spacing:"100 50 0"'>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

<h1><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:Arial'></span>Stateful</span></b></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
Arial'> server<o:p></o:p></span></b></h1>

<h2 style='margin-left:.25in;text-indent:-.25in;mso-list:l18 level1 lfo50;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=GramE><span style='font-size:14.0pt;
font-family:Arial'>A <span class=SpellE>stateful</span> server maintain</span></span><span
style='font-size:14.0pt;font-family:Arial'> <span class=SpellE>stateful</span>
information on each active client.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></h2>

<h2 style='margin-left:.25in;text-indent:-.25in;mso-list:l18 level1 lfo50;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:12.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=SpellE><span style='font-size:14.0pt;
font-family:Arial'>Stateful</span></span><span style='font-size:14.0pt;
font-family:Arial'> information can reduce the data exchanged, and thereby the
response time</span><span style='font-size:12.0pt'>.<o:p></o:p></span></h2>

<h2><span class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:Arial'>e.g</span></b></span></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
Arial'> Stateless <span class=SpellE>vs</span> <span class=SpellE>Stateful</span>
server<o:p></o:p></span></b></h2>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1038" type="#_x0000_t75" style='width:512.25pt;height:279.75pt'>
 <v:imagedata src="client-server_files/image036.jpg" o:title="fg5-18"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=683 height=373
src="client-server_files/image055.jpg" v:shapes="_x0000_i1038"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:Arial;color:red'>Issues<o:p></o:p></span></b></p>

<h1><span class=SpellE><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:Arial'>Stateful</span></b></span><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;font-family:
Arial'> vs. Stateless server<o:p></o:p></span></b></h1>

<h2 style='margin-left:.25in;text-indent:-.25in;mso-list:l5 level1 lfo51;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Stateless
server is straightforward to code.<o:p></o:p></span></h2>

<h2 style='margin-left:.25in;text-indent:-.25in;mso-list:l5 level1 lfo51;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span class=SpellE><span style='font-size:14.0pt;
font-family:Arial'>Stateful</span></span><span style='font-size:14.0pt;
font-family:Arial'> server is harder to code, but the state information
maintained by the server can reduce the data exchanged, and allows enhancements
to a basic service.<o:p></o:p></span></h2>

<h2 style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo52;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>Maintaining
<span class=SpellE>stateful</span> information is difficult in the presence of
failures.<o:p></o:p></span></h2>

<p class=MsoNormal><span style='font-family:Arial'><!--[if gte vml 1]><v:shape
 id="_x0000_i1039" type="#_x0000_t75" style='width:512.25pt;height:358.5pt'>
 <v:imagedata src="client-server_files/image038.jpg" o:title="fg5-19"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=683 height=478
src="client-server_files/image056.jpg" v:shapes="_x0000_i1039"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

<h2><b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
font-family:Arial;color:red'>Example:</span></b><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;font-family:Arial'> <span class=SpellE>Stateful</span>
Server <o:p></o:p></span></b></h2>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo52;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:14.0pt;
font-family:Symbol;mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='font-size:14.0pt;font-family:Arial'>A
counter protocol is implemented that increments a counter by one each time the
server is contacted by a client and send it back to the client.<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2><b><span style='font-size:14.0pt;font-family:"Courier New";color:blue'>CounterServer1.java<o:p></o:p></span></b></h2>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=807 valign=top style='width:605.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* This module contains the application logic
  of a Counter server<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* <span class=GramE>which</span> uses a<span
  style='mso-spacerun:yes'>  </span>datagram socket for <span class=SpellE>interprocess</span>
  communication.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* A command-line argument is required to
  specify the server port.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>* @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:red'><span
  style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class CounterServer1 {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>/*
  state information */<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='color:blue'>static <span class=SpellE>int</span> counter = 0;<o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main(String[] <span
  class=SpellE>args</span>)</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>int</span> <span class=SpellE>serverPort</span> =
  12345;<span style='mso-spacerun:yes'>    </span>// default port<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>if (<span class=SpellE>args.length</span> == 1 )<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>args</span>[0]);<span style='mso-spacerun:yes'>       </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// instantiates a datagram socket for both sending<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>// and receiving data<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='mso-spacerun:yes'>   </span><span
  class=SpellE><span style='color:blue'>MyServerDatagramSocket</span></span> <span
  class=SpellE>mySocket</span> = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>new <span class=SpellE><span style='color:blue'>MyServerDatagramSocket</span></span><span
  style='color:blue'>(<span class=SpellE>serverPort</span>);</span> <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>    
  </span><span class=SpellE><span class=GramE>System.out.println</span></span><span
  class=GramE>(</span>&quot;Counter server ready.&quot;);<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-spacerun:yes'>       </span>while (true) {<span
  style='mso-spacerun:yes'>  </span>// forever loop<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE><span style='color:blue'>DatagramMessage</span></span>
  request = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>mySocket.receiveMessageAndSender</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>System.out.println</span>(&quot;Request
  received&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// The message received is unimportant; it is the sender's<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>    </span><span
  style='mso-spacerun:yes'>        </span>// address that we need in order to
  reply.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:3'>              </span><span
  style='mso-spacerun:yes'>   </span>// Now increment the counter, <span
  class=GramE>then</span> send its value to the client.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>increment( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>       
  </span><span class=SpellE>System.out.println</span>(&quot;counter sent:
  &quot;+ counter);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>// Now send the reply to the requestor<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>mySocket.sendMessage</span>(<span class=SpellE>request.getAddress</span>(
  ),<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>               </span><span class=SpellE>request.getPort</span>(
  ), <span class=SpellE>String.valueOf</span>(counter));<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:2'>          </span><span
  style='mso-spacerun:yes'>   </span>} //end while<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>} // end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>static private synchronized void <span style='color:blue'>increment( )</span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>counter++;<span style='mso-spacerun:yes'>    </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<span
  style='mso-spacerun:yes'>      </span><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<h2><b><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></b></h2>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>CounterClient1.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=815 valign=top style='width:611.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'> <span
  class=SpellE>java.io</span>.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  This module contains the presentation logic of a counter Client.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>CounterClient1
  </span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static void <span style='color:blue'>main(String[] <span
  class=SpellE>args</span>)</span> {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span><span class=SpellE>InputStreamReader</span> is = new <span
  class=SpellE>InputStreamReader</span>(<span class=SpellE>System.in</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-spacerun:yes'>   </span><span class=SpellE>BufferedReader</span> <span
  class=SpellE>br</span> = new <span class=SpellE>BufferedReader</span>(is);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span>(&quot;Welcome to the
  Counter client.\n&quot; +<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span
  style='mso-spacerun:yes'>                            </span>&quot;What is the
  name of the server host?&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>hostName</span> = <span class=SpellE>br.readLine</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>if (<span class=SpellE>hostName.length</span>() == 0) // if user did
  not enter a name<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>hostName</span> = &quot;<span class=SpellE>localhost</span>&quot;;<span
  style='mso-spacerun:yes'>  </span>//<span style='mso-spacerun:yes'>  
  </span>use the default host name<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span>(&quot;Enter the port # of
  the server host:&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>String <span class=SpellE>portNum</span> = <span class=SpellE>br.readLine</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span>if (<span class=SpellE>portNum.length</span>() == 0)<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span><span class=SpellE>portNum</span> = &quot;12345&quot;;<span
  style='mso-spacerun:yes'>       </span>// default port number<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>System.out.println</span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>           
  </span>(&quot;Here is the counter received from the server: &quot;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span>+ <span style='color:blue'>CounterClientHelper1.getCounter(<span
  class=SpellE>hostName</span>, <span class=SpellE>portNum</span>)</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>} // end try<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>        
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} // end class<span
  style='mso-spacerun:yes'>     </span><o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<h2><b><span style='font-size:14.0pt;font-family:Arial'><o:p>&nbsp;</o:p></span></b></h2>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;font-family:"Courier New";color:blue'>CounterClientHelper1.java<o:p></o:p></span></b></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='background:white;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0;mso-yfti-lastrow:yes'>
  <td width=807 valign=top style='width:605.6pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><span class=GramE><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>import</span></b></span><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>
  java.net.*;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  This class is a module which provides the application logic<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>* <span
  class=GramE>for</span> a Counter Client.<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*
  @author M. L. Liu<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span>*/<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>public class <span style='color:blue'>CounterClientHelper1
  </span>{<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  
  </span>public static <span class=SpellE>int</span> <span class=SpellE><span
  style='color:blue'>getCounter</span></span><span style='color:blue'>(String <span
  class=SpellE>hostName</span>,<o:p></o:p></span></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New";color:blue'><span
  style='mso-spacerun:yes'>      </span>String <span class=SpellE>portNum</span>)</span></b><b
  style='mso-bidi-font-weight:normal'><span style='font-family:"Courier New"'>{<span
  style='mso-spacerun:yes'>   </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'> </span><span
  style='mso-spacerun:yes'>     </span><span class=SpellE>int</span> counter =
  0; <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>String message = &quot;&quot;;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>     
  </span>try {<span style='mso-spacerun:yes'>      </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:2'>        </span><span
  style='mso-spacerun:yes'>    </span><span class=SpellE>InetAddress</span> <span
  class=SpellE>serverHost</span> = <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>            
  </span><span class=SpellE>InetAddress.getByName</span>(<span class=SpellE>hostName</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>  </span><span
  style='mso-tab-count:2'>        </span><span
  style='mso-spacerun:yes'>    </span><span class=SpellE>int</span> <span
  class=SpellE>serverPort</span> = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>portNum</span>);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>// instantiates a datagram socket for both sending<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>// and receiving data<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span><span
  style='mso-tab-count:1'>  </span><span style='mso-spacerun:yes'>    </span><span
  class=SpellE><span style='color:blue'>MyDatagramSocket</span></span> <span
  class=SpellE>mySocket</span> = new <span class=SpellE><span style='color:
  blue'>MyDatagramSocket</span></span><span style='color:blue'>()</span>;<span
  style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span><span class=SpellE>mySocket.sendMessage</span>( <span class=SpellE>serverHost</span>,
  <span class=SpellE>serverPort</span>, &quot;&quot;);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:3'>              </span><span
  style='mso-spacerun:yes'> </span>// now receive the timestamp<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>message = <span class=SpellE>mySocket.receiveMessage</span>();<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>/**/<span style='mso-spacerun:yes'>     
  </span><span class=SpellE>System.out.println</span>(&quot;Message received:
  &quot; + message);<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span>counter = <span class=SpellE>Integer.parseInt</span>(<span
  class=SpellE>message.trim</span>());<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:2'>          </span><span
  style='mso-spacerun:yes'>    </span><span class=SpellE>mySocket.close</span>(
  );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>} // end try<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>catch (Exception ex) {<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>         
  </span><span class=SpellE>ex.printStackTrace</span>( );<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-tab-count:1'>     </span><span
  style='mso-spacerun:yes'>    </span>} // end catch<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>      
  </span>return counter;<o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'><span style='mso-spacerun:yes'>   </span>}
  //end main <o:p></o:p></span></b></p>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='font-family:"Courier New"'>} //end class<o:p></o:p></span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2><o:p>&nbsp;</o:p></h2>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='font-family:Arial'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
